
build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c,3808
# define ID_VOID_MAIN9,224
# define COMPILER_ID 13,302
# define COMPILER_VERSION_MAJOR 15,362
# define COMPILER_VERSION_MINOR 16,420
# define COMPILER_VERSION_PATCH 17,482
#  define COMPILER_VERSION_TWEAK 20,633
# define COMPILER_ID 24,733
# define COMPILER_VERSION_MAJOR 25,762
# define COMPILER_VERSION_MINOR 26,815
# define COMPILER_VERSION_PATCH 27,868
# define COMPILER_ID 30,989
# define COMPILER_VERSION_MAJOR 31,1024
# define COMPILER_VERSION_MINOR 32,1096
# define COMPILER_VERSION_PATCH 33,1168
# define COMPILER_ID 36,1269
# define COMPILER_VERSION_MAJOR 38,1329
# define COMPILER_VERSION_MINOR 39,1382
# define COMPILER_ID 42,1467
# define COMPILER_VERSION_MAJOR 44,1524
# define COMPILER_VERSION_MINOR 45,1579
# define COMPILER_ID 48,1661
#  define COMPILER_VERSION_MAJOR 51,1746
#  define COMPILER_VERSION_MINOR 52,1799
#  define COMPILER_VERSION_PATCH 53,1858
#  define COMPILER_VERSION_MAJOR 56,1951
#  define COMPILER_VERSION_MINOR 57,2003
#  define COMPILER_VERSION_PATCH 58,2061
# define COMPILER_ID 62,2151
# define COMPILER_VERSION_MAJOR 64,2202
# define COMPILER_VERSION_MINOR 65,2253
# define COMPILER_VERSION_PATCH 66,2308
# define COMPILER_ID 69,2386
#  define COMPILER_ID 73,2472
#   define COMPILER_ID 76,2529
#   define COMPILER_ID 78,2565
#  define COMPILER_VERSION_MAJOR 81,2633
#  define COMPILER_VERSION_MINOR 82,2684
#  define COMPILER_VERSION_PATCH 83,2739
# define COMPILER_ID 87,2824
# define COMPILER_VERSION_MAJOR 88,2851
# define COMPILER_VERSION_MINOR 89,2897
#  define COMPILER_VERSION_PATCH 91,2983
# define COMPILER_ID 95,3079
# define COMPILER_ID 98,3135
# define COMPILER_ID 101,3203
# define COMPILER_ID 104,3259
# define COMPILER_ID 107,3321
# define COMPILER_ID 110,3373
# define COMPILER_VERSION_MAJOR 111,3400
# define COMPILER_VERSION_MINOR 112,3446
#  define COMPILER_VERSION_PATCH 114,3532
# define COMPILER_ID 118,3623
# define COMPILER_VERSION_MAJOR 120,3675
# define COMPILER_VERSION_MINOR 121,3727
#   define COMPILER_VERSION_PATCH 125,3866
#   define COMPILER_VERSION_PATCH 128,3971
#  define COMPILER_VERSION_TWEAK 132,4074
# define COMPILER_ID 138,4298
# define COMPILER_ID 149,4606
# define COMPILER_ID 152,4702
#  define COMPILER_VERSION_MAJOR 155,4805
#  define COMPILER_VERSION_MINOR 156,4869
#  define COMPILER_VERSION_PATCH 157,4937
#  define COMPILER_VERSION_MAJOR 160,5044
#  define COMPILER_VERSION_MINOR 161,5104
#  define COMPILER_VERSION_PATCH 162,5168
# define COMPILER_ID 169,5430
# define COMPILER_ID 172,5503
# define COMPILER_ID 175,5559
char const* info_compiler 183,5858
# define PLATFORM_ID 187,6029
# define PLATFORM_ID 190,6085
# define PLATFORM_ID 193,6143
# define PLATFORM_ID 196,6198
# define PLATFORM_ID 199,6291
# define PLATFORM_ID 202,6372
# define PLATFORM_ID 205,6451
# define PLATFORM_ID 208,6531
# define PLATFORM_ID 211,6600
# define PLATFORM_ID 214,6726
# define PLATFORM_ID 217,6812
# define PLATFORM_ID 220,6884
# define PLATFORM_ID 223,6978
# define PLATFORM_ID 229,7157
# define PLATFORM_ID 232,7232
# define PLATFORM_ID 235,7324
# define PLATFORM_ID 238,7401
# define PLATFORM_ID 241,7499
# define PLATFORM_ID 244,7556
# define PLATFORM_ID 247,7613
# define PLATFORM_ID 250,7683
# define PLATFORM_ID 253,7755
# define PLATFORM_ID 256,7845
# define PLATFORM_ID 259,7943
# define PLATFORM_ID 262,8036
# define PLATFORM_ID 265,8095
#  define ARCHITECTURE_ID 276,8438
#  define ARCHITECTURE_ID 279,8516
#  define ARCHITECTURE_ID 282,8574
#  define ARCHITECTURE_ID 285,8641
#  define ARCHITECTURE_ID 289,8685
#define DEC(293,8772
#define HEX(304,9121
char const info_version[info_version316,9483
char const* info_platform 336,10143
char const* info_arch 337,10211
void main(344,10378
int main(346,10399

build/Makefile,17
SUFFIXES 15,456

build/xcode/CMakeFiles/CompilerIdC/CMakeCCompilerId.c,3808
# define ID_VOID_MAIN9,224
# define COMPILER_ID 13,302
# define COMPILER_VERSION_MAJOR 15,362
# define COMPILER_VERSION_MINOR 16,420
# define COMPILER_VERSION_PATCH 17,482
#  define COMPILER_VERSION_TWEAK 20,633
# define COMPILER_ID 24,733
# define COMPILER_VERSION_MAJOR 25,762
# define COMPILER_VERSION_MINOR 26,815
# define COMPILER_VERSION_PATCH 27,868
# define COMPILER_ID 30,989
# define COMPILER_VERSION_MAJOR 31,1024
# define COMPILER_VERSION_MINOR 32,1096
# define COMPILER_VERSION_PATCH 33,1168
# define COMPILER_ID 36,1269
# define COMPILER_VERSION_MAJOR 38,1329
# define COMPILER_VERSION_MINOR 39,1382
# define COMPILER_ID 42,1467
# define COMPILER_VERSION_MAJOR 44,1524
# define COMPILER_VERSION_MINOR 45,1579
# define COMPILER_ID 48,1661
#  define COMPILER_VERSION_MAJOR 51,1746
#  define COMPILER_VERSION_MINOR 52,1799
#  define COMPILER_VERSION_PATCH 53,1858
#  define COMPILER_VERSION_MAJOR 56,1951
#  define COMPILER_VERSION_MINOR 57,2003
#  define COMPILER_VERSION_PATCH 58,2061
# define COMPILER_ID 62,2151
# define COMPILER_VERSION_MAJOR 64,2202
# define COMPILER_VERSION_MINOR 65,2253
# define COMPILER_VERSION_PATCH 66,2308
# define COMPILER_ID 69,2386
#  define COMPILER_ID 73,2472
#   define COMPILER_ID 76,2529
#   define COMPILER_ID 78,2565
#  define COMPILER_VERSION_MAJOR 81,2633
#  define COMPILER_VERSION_MINOR 82,2684
#  define COMPILER_VERSION_PATCH 83,2739
# define COMPILER_ID 87,2824
# define COMPILER_VERSION_MAJOR 88,2851
# define COMPILER_VERSION_MINOR 89,2897
#  define COMPILER_VERSION_PATCH 91,2983
# define COMPILER_ID 95,3079
# define COMPILER_ID 98,3135
# define COMPILER_ID 101,3203
# define COMPILER_ID 104,3259
# define COMPILER_ID 107,3321
# define COMPILER_ID 110,3373
# define COMPILER_VERSION_MAJOR 111,3400
# define COMPILER_VERSION_MINOR 112,3446
#  define COMPILER_VERSION_PATCH 114,3532
# define COMPILER_ID 118,3623
# define COMPILER_VERSION_MAJOR 120,3675
# define COMPILER_VERSION_MINOR 121,3727
#   define COMPILER_VERSION_PATCH 125,3866
#   define COMPILER_VERSION_PATCH 128,3971
#  define COMPILER_VERSION_TWEAK 132,4074
# define COMPILER_ID 138,4298
# define COMPILER_ID 149,4606
# define COMPILER_ID 152,4702
#  define COMPILER_VERSION_MAJOR 155,4805
#  define COMPILER_VERSION_MINOR 156,4869
#  define COMPILER_VERSION_PATCH 157,4937
#  define COMPILER_VERSION_MAJOR 160,5044
#  define COMPILER_VERSION_MINOR 161,5104
#  define COMPILER_VERSION_PATCH 162,5168
# define COMPILER_ID 169,5430
# define COMPILER_ID 172,5503
# define COMPILER_ID 175,5559
char const* info_compiler 183,5858
# define PLATFORM_ID 187,6029
# define PLATFORM_ID 190,6085
# define PLATFORM_ID 193,6143
# define PLATFORM_ID 196,6198
# define PLATFORM_ID 199,6291
# define PLATFORM_ID 202,6372
# define PLATFORM_ID 205,6451
# define PLATFORM_ID 208,6531
# define PLATFORM_ID 211,6600
# define PLATFORM_ID 214,6726
# define PLATFORM_ID 217,6812
# define PLATFORM_ID 220,6884
# define PLATFORM_ID 223,6978
# define PLATFORM_ID 229,7157
# define PLATFORM_ID 232,7232
# define PLATFORM_ID 235,7324
# define PLATFORM_ID 238,7401
# define PLATFORM_ID 241,7499
# define PLATFORM_ID 244,7556
# define PLATFORM_ID 247,7613
# define PLATFORM_ID 250,7683
# define PLATFORM_ID 253,7755
# define PLATFORM_ID 256,7845
# define PLATFORM_ID 259,7943
# define PLATFORM_ID 262,8036
# define PLATFORM_ID 265,8095
#  define ARCHITECTURE_ID 276,8438
#  define ARCHITECTURE_ID 279,8516
#  define ARCHITECTURE_ID 282,8574
#  define ARCHITECTURE_ID 285,8641
#  define ARCHITECTURE_ID 289,8685
#define DEC(293,8772
#define HEX(304,9121
char const info_version[info_version316,9483
char const* info_platform 336,10143
char const* info_arch 337,10211
void main(344,10378
int main(346,10399

build/xcode/libgit2.xcodeproj/project.xcworkspace/contents.xcworkspacedata,19
<?xml version=1,0

build/xcode/libgit2.xcodeproj/project.xcworkspace/xcuserdata/ben.xcuserdatad/WorkspaceSettings.xcsettings,19
<?xml version=1,0

build/xcode/libgit2.xcodeproj/xcuserdata/ben.xcuserdatad/xcdebugger/Breakpoints.xcbkptlist,19
<?xml version=1,0

build/xcode/libgit2.xcodeproj/xcuserdata/ben.xcuserdatad/xcschemes/ALL_BUILD.xcscheme,19
<?xml version=1,0

build/xcode/libgit2.xcodeproj/xcuserdata/ben.xcuserdatad/xcschemes/git2.xcscheme,19
<?xml version=1,0

build/xcode/libgit2.xcodeproj/xcuserdata/ben.xcuserdatad/xcschemes/install.xcscheme,19
<?xml version=1,0

build/xcode/libgit2.xcodeproj/xcuserdata/ben.xcuserdatad/xcschemes/libgit2_clar.xcscheme,19
<?xml version=1,0

build/xcode/libgit2.xcodeproj/xcuserdata/ben.xcuserdatad/xcschemes/RUN_TESTS.xcscheme,19
<?xml version=1,0

build/xcode/libgit2.xcodeproj/xcuserdata/ben.xcuserdatad/xcschemes/xcschememanagement.plist,19
<?xml version=1,0

build/xcode/libgit2.xcodeproj/xcuserdata/ben.xcuserdatad/xcschemes/ZERO_CHECK.xcscheme,19
<?xml version=1,0

deps/http-parser/http_parser.c,3828
# define MIN(30,1377
#define SET_ERRNO(35,1450
#define SET_ERRNO(41,1752
#define CALLBACK2(48,1985
#define MARK(59,2567
#define CALLBACK(64,2793
#define PROXY_CONNECTION 81,3801
#define CONNECTION 82,3845
#define CONTENT_LENGTH 83,3877
#define TRANSFER_ENCODING 84,3917
#define UPGRADE 85,3963
#define CHUNKED 86,3989
#define KEEP_ALIVE 87,4015
#define CLOSE 88,4047
static const char *method_strings[method_strings91,4071
static const char tokens[tokens126,4754
static const int8_t unhex[unhex161,7222
static const uint8_t normal_url_char[normal_url_char173,7670
enum state208,10139
  { s_dead 209,10150
  , s_start_req_or_res211,10199
  , s_res_or_resp_H212,10222
  , s_start_res213,10242
  , s_res_H214,10258
  , s_res_HT215,10270
  , s_res_HTT216,10283
  , s_res_HTTP217,10297
  , s_res_first_http_major218,10312
  , s_res_http_major219,10339
  , s_res_first_http_minor220,10360
  , s_res_http_minor221,10387
  , s_res_first_status_code222,10408
  , s_res_status_code223,10436
  , s_res_status224,10458
  , s_res_line_almost_done225,10475
  , s_start_req227,10503
  , s_req_method229,10520
  , s_req_spaces_before_url230,10537
  , s_req_schema231,10565
  , s_req_schema_slash232,10582
  , s_req_schema_slash_slash233,10605
  , s_req_host234,10634
  , s_req_port235,10649
  , s_req_path236,10664
  , s_req_query_string_start237,10679
  , s_req_query_string238,10708
  , s_req_fragment_start239,10731
  , s_req_fragment240,10756
  , s_req_http_start241,10775
  , s_req_http_H242,10796
  , s_req_http_HT243,10813
  , s_req_http_HTT244,10831
  , s_req_http_HTTP245,10850
  , s_req_first_http_major246,10870
  , s_req_http_major247,10897
  , s_req_first_http_minor248,10918
  , s_req_http_minor249,10945
  , s_req_line_almost_done250,10966
  , s_header_field_start252,10994
  , s_header_field253,11019
  , s_header_value_start254,11038
  , s_header_value255,11063
  , s_header_value_lws256,11082
  , s_header_almost_done258,11106
  , s_chunk_size_start260,11132
  , s_chunk_size261,11155
  , s_chunk_parameters262,11172
  , s_chunk_size_almost_done263,11195
  , s_headers_almost_done265,11227
  , s_chunk_data271,11455
  , s_chunk_data_almost_done272,11472
  , s_chunk_data_done273,11501
  , s_body_identity275,11524
  , s_body_identity_eof276,11544
#define PARSING_HEADER(280,11575
enum header_states283,11640
  { h_general 284,11659
  , h_C285,11677
  , h_CO286,11685
  , h_CON287,11694
  , h_matching_connection289,11705
  , h_matching_proxy_connection290,11731
  , h_matching_content_length291,11763
  , h_matching_transfer_encoding292,11793
  , h_matching_upgrade293,11826
  , h_connection295,11850
  , h_content_length296,11867
  , h_transfer_encoding297,11888
  , h_upgrade298,11912
  , h_matching_transfer_encoding_chunked300,11927
  , h_matching_connection_keep_alive301,11968
  , h_matching_connection_close302,12005
  , h_transfer_encoding_chunked304,12038
  , h_connection_keep_alive305,12070
  , h_connection_close306,12098
#define CR 311,12188
#define LF 312,12221
#define LOWER(313,12254
#define TOKEN(314,12308
#define IS_ALPHA(315,12363
#define IS_NUM(316,12428
#define IS_ALPHANUM(317,12483
#define IS_URL_CHAR(320,12562
#define IS_HOST_CHAR(321,12629
#define IS_URL_CHAR(323,12708
#define IS_HOST_CHAR(325,12846
#define start_state 330,12997
# define STRICT_CHECK(334,13101
# define NEW_MESSAGE(341,13539
# define STRICT_CHECK(343,13624
# define NEW_MESSAGE(344,13652
#define HTTP_STRERROR_GEN(349,13756
} http_strerror_tab[http_strerror_tab353,13869
#undef HTTP_STRERROR_GEN356,13934
size_t http_parser_execute 359,13961
http_should_keep_alive 1730,48528
const char * http_method_str 1750,48900
http_parser_init 1757,48989
http_errno_name(1769,49315
http_errno_description(1775,49482

deps/http-parser/http_parser.h,1883
#define http_parser_h22,1177
#define HTTP_PARSER_VERSION_MAJOR 27,1239
#define HTTP_PARSER_VERSION_MINOR 28,1275
# define HTTP_PARSER_STRICT 42,1561
# define HTTP_PARSER_DEBUG 49,1738
#define HTTP_MAX_HEADER_SIZE 54,1811
typedef struct http_parser http_parser;57,1852
typedef struct http_parser_settings http_parser_settings;58,1892
typedef struct http_parser_result http_parser_result;59,1950
typedef int (*http_data_cb)http_data_cb75,2663
typedef int (*http_cb)http_cb76,2738
enum http_method80,2801
  { HTTP_DELETE 81,2818
  , HTTP_GET82,2841
  , HTTP_HEAD83,2854
  , HTTP_POST84,2868
  , HTTP_PUT85,2882
  , HTTP_CONNECT87,2916
  , HTTP_OPTIONS88,2933
  , HTTP_TRACE89,2950
  , HTTP_COPY91,2980
  , HTTP_LOCK92,2994
  , HTTP_MKCOL93,3008
  , HTTP_MOVE94,3023
  , HTTP_PROPFIND95,3037
  , HTTP_PROPPATCH96,3055
  , HTTP_UNLOCK97,3074
  , HTTP_REPORT99,3109
  , HTTP_MKACTIVITY100,3125
  , HTTP_CHECKOUT101,3145
  , HTTP_MERGE102,3163
  , HTTP_MSEARCH104,3191
  , HTTP_NOTIFY105,3208
  , HTTP_SUBSCRIBE106,3224
  , HTTP_UNSUBSCRIBE107,3243
  , HTTP_PATCH109,3281
enum http_parser_type 113,3303
enum http_parser_type { HTTP_REQUEST,113,3303
enum http_parser_type { HTTP_REQUEST, HTTP_RESPONSE,113,3303
enum http_parser_type { HTTP_REQUEST, HTTP_RESPONSE, HTTP_BOTH 113,3303
enum flags117,3417
  { F_CHUNKED 118,3428
  , F_CONNECTION_KEEP_ALIVE 119,3465
  , F_CONNECTION_CLOSE 120,3502
  , F_TRAILING 121,3539
  , F_UPGRADE 122,3576
  , F_SKIPBODY 123,3613
#define HTTP_ERRNO_MAP(131,3767
#define HTTP_ERRNO_GEN(175,6705
enum http_errno 176,6743
  HTTP_ERRNO_MAP(177,6761
  HTTP_ERRNO_MAP(HTTP_ERRNO_GEN)177,6761
#undef HTTP_ERRNO_GEN179,6797
#define HTTP_PARSER_ERRNO(183,6871
#define HTTP_PARSER_ERRNO_LINE(187,7029
#define HTTP_PARSER_ERRNO_LINE(189,7095
struct http_parser 193,7146
struct http_parser_settings 227,8018

deps/regex/config.h,76
#define _REGEX_CONFIG_H_2,25
# define GAWK4,51
# define NO_MBSUPPORT5,65

deps/regex/regcomp.c,2341
static int peek_token 58,2774
#define REG_NOERROR_IDX	131,5952
#define REG_NOMATCH_IDX 134,6034
#define REG_BADPAT_IDX	137,6152
#define REG_ECOLLATE_IDX 140,6287
#define REG_ECTYPE_IDX	143,6444
#define REG_EESCAPE_IDX	146,6601
#define REG_ESUBREG_IDX	149,6749
#define REG_EBRACK_IDX	152,6892
#define REG_EPAREN_IDX	155,7032
#define REG_EBRACE_IDX	158,7167
#define REG_BADBR_IDX	161,7298
#define REG_ERANGE_IDX	164,7434
#define REG_ESPACE_IDX	167,7575
#define REG_BADRPT_IDX	170,7708
#define REG_EEND_IDX	173,7860
#define REG_ESIZE_IDX	176,8027
#define REG_ERPAREN_IDX	179,8184
const size_t __re_error_msgid_idx[] attribute_hidden 183,8326
btowc 212,8835
re_compile_pattern 233,9294
weak_alias 254,9914
weak_alias 281,10775
weak_alias 302,11474
re_compile_fastmap_iter 318,11816
regcomp 484,17084
weak_alias 538,18692
weak_alias 578,19792
static bitset_t utf8_sb_map;593,20287
free_dfa_content 599,20385
regfree 650,21513
weak_alias 665,21808
libc_freeres_fn 729,23478
re_compile_internal 742,23741
init_dfa 841,26533
init_word_char 933,28873
free_workarea_compile 946,29204
create_initial_state 965,29695
optimize_utf8 1051,32408
analyze 1121,34155
postorder 1184,36137
preorder 1216,36888
optimize_subexps 1249,37688
lower_subexps 1280,38609
lower_subexp 1302,39122
calc_first 1339,40528
calc_next 1361,41114
link_nfa_nodes 1384,41637
duplicate_node_closure 1445,43047
search_duplicated_node 1551,46917
duplicate_node 1569,47441
calc_inveclosure 1585,47915
calc_eclosure 1610,48493
calc_eclosure_iter 1654,49449
fetch_token 1736,51899
peek_token 1746,52205
peek_token_bracket 1985,57792
parse 2081,59994
parse_reg_exp 2115,60913
parse_branch 2156,61980
parse_expression 2196,62998
parse_sub_exp 2412,68667
parse_dup_op 2450,69674
#define BRACKET_NAME_BUF_SIZE 2585,73194
build_range_exp 2598,73662
build_collating_symbol 2731,78372
parse_bracket_exp 2752,78942
parse_bracket_element 3310,95481
parse_bracket_symbol 3350,97014
build_equiv_class 3398,98286
build_charclass 3494,101425
#define BUILD_CHARCLASS_LOOP(3528,102718
build_charclass_op 3580,104245
fetch_number 3693,107042
free_charset 3714,107592
create_tree 3733,107976
create_token_tree 3742,108178
mark_opt_subexp 3779,109131
free_token 3791,109393
free_tree 3806,109803
duplicate_tree 3819,110162

deps/regex/regex.c,495
# define regfree(30,1196
# define regexec(31,1236
# define regcomp(32,1304
# define regerror(33,1378
# define re_set_registers(35,1482
# define re_match_2(37,1571
# define re_match(39,1718
# define re_search(41,1813
# define re_compile_pattern(43,1934
# define re_set_syntax(45,2033
# define re_search_2(46,2089
# define re_compile_fastmap(48,2234
#undef alloca63,2632
#define alloca 64,2646
#define bool 71,2794
#define true 72,2811
#define false 73,2828
link_warning 82,3018

deps/regex/regex.h,2975
#define _REGEX_H 26,1054
#define __USE_GNU	37,1192
typedef long int s_reg_t;49,1547
typedef unsigned long int active_reg_t;50,1573
typedef unsigned long int reg_syntax_t;57,1960
# define RE_BACKSLASH_ESCAPE_IN_LISTS 62,2153
# define RE_BK_PLUS_QM 67,2374
# define RE_CHAR_CLASSES 73,2704
# define RE_CONTEXT_INDEP_ANCHORS 87,3439
# define RE_CONTEXT_INDEP_OPS 95,3866
# define RE_CONTEXT_INVALID_OPS 99,4067
# define RE_DOT_NEWLINE 103,4211
# define RE_DOT_NOT_NULL 107,4348
# define RE_HAT_LISTS_NOT_NEWLINE 111,4494
# define RE_INTERVALS 116,4705
# define RE_LIMITED_OPS 120,4855
# define RE_NEWLINE_ALT 124,4998
# define RE_NO_BK_BRACES 129,5189
# define RE_NO_BK_PARENS 133,5381
# define RE_NO_BK_REFS 137,5538
# define RE_NO_BK_VBAR 141,5735
# define RE_NO_EMPTY_RANGES 147,6030
# define RE_UNMATCHED_RIGHT_PAREN_ORD 151,6187
# define RE_NO_POSIX_BACKTRACKING 155,6359
# define RE_NO_GNU_OPS 159,6556
# define RE_INVALID_INTERVAL_ORD 164,6775
# define RE_ICASE 168,6930
# define RE_CARET_ANCHORS_HERE 173,7156
# define RE_CONTEXT_INVALID_DUP 177,7329
#define RE_NO_SUB 181,7477
#define RE_SYNTAX_EMACS 195,8027
#define RE_SYNTAX_AWK	197,8054
#define RE_SYNTAX_GNU_AWK	204,8358
#define RE_SYNTAX_POSIX_AWK	210,8578
#define RE_SYNTAX_GREP	215,8749
#define RE_SYNTAX_EGREP	220,8905
#define RE_SYNTAX_POSIX_EGREP	226,9121
#define RE_SYNTAX_ED 231,9299
#define RE_SYNTAX_SED 233,9343
#define _RE_SYNTAX_POSIX_COMMON	236,9461
#define RE_SYNTAX_POSIX_BASIC	240,9604
#define RE_SYNTAX_POSIX_MINIMAL_BASIC	246,9922
#define RE_SYNTAX_POSIX_EXTENDED	249,10012
#define RE_SYNTAX_POSIX_MINIMAL_EXTENDED	257,10381
#  undef RE_DUP_MAX268,10869
# define RE_DUP_MAX 271,10957
#define REG_EXTENDED 279,11187
#define REG_ICASE 283,11311
#define REG_NEWLINE 288,11495
#define REG_NOSUB 292,11673
#define REG_NOTBOL 302,12039
#define REG_NOTEOL 305,12113
#define REG_STARTEND 309,12224
  REG_ENOSYS 317,12427
  REG_NOERROR 320,12509
  REG_NOMATCH,321,12544
  REG_BADPAT,325,12691
  REG_ECOLLATE,326,12730
  REG_ECTYPE,327,12780
  REG_EESCAPE,328,12832
  REG_ESUBREG,329,12875
  REG_EBRACK,330,12922
  REG_EPAREN,331,12968
  REG_EBRACE,332,13013
  REG_BADBR,333,13049
  REG_ERANGE,334,13096
  REG_ESPACE,335,13137
  REG_BADRPT,336,13178
  REG_EEND,339,13270
  REG_ESIZE,340,13305
  REG_ERPAREN	341,13367
} reg_errcode_t;342,13435
# define __RE_TRANSLATE_TYPE 351,13797
#  define RE_TRANSLATE_TYPE 353,13860
# define __REPB_PREFIX(358,13941
# define __REPB_PREFIX(360,13981
struct re_pattern_buffer363,14027
# define REGS_UNALLOCATED 404,15632
# define REGS_REALLOCATE 405,15660
# define REGS_FIXED 406,15687
typedef struct re_pattern_buffer regex_t;429,16386
typedef int regoff_t;432,16500
struct re_registers438,16673
#  define RE_NREGS 450,16964
} regmatch_t;462,17348
#   define __restrict 546,20810
#   define __restrict548,20849
#  define __restrict_arr 556,21061
#  define __restrict_arr558,21104

deps/regex/regex_internal.c,1180
static void re_string_construct_common 21,984
#undef MAX	34,1484
re_string_allocate 49,1779
re_string_construct 77,2723
re_string_realloc_buffers 140,4162
re_string_construct_common 180,5179
build_wcs_buffer 212,6197
build_wcs_upper_buffer 280,8112
re_string_skip_chars 496,13918
build_upper_buffer 537,15101
re_string_translate_buffer 560,15679
re_string_reconstruct 581,16296
internal_function __attribute 838,23374
internal_function __attribute 874,24387
re_string_destruct 912,25405
re_string_context_at 926,25684
re_node_set_alloc 971,26879
re_node_set_init_1 993,27365
re_node_set_init_2 1009,27680
re_node_set_init_copy 1039,28194
re_node_set_add_intersect 1064,28897
re_node_set_init_union 1155,31297
re_node_set_merge 1208,32758
re_node_set_insert 1291,34969
re_node_set_insert_last 1348,36349
internal_function __attribute 1370,36884
internal_function __attribute 1385,37286
re_node_set_remove_at 1408,37747
re_dfa_add_node 1423,38098
calc_state_hash 1470,39839
re_acquire_state 1490,40541
re_acquire_state_context 1534,41864
register_state 1570,42922
free_state 1605,43923
create_ci_newstate 1625,44471
create_cd_newstate 1675,45845

deps/regex/regex_internal.h,6875
#define _REGEX_INTERNAL_H 22,1017
# define __libc_lock_define(53,1821
# define __libc_lock_init(54,1861
# define __libc_lock_lock(55,1910
# define __libc_lock_unlock(56,1959
# define isblank(62,2150
is_blank 73,2456
#  define _RE_DEFINE_LOCALE_FUNCTIONS 81,2581
#  undef gettext92,2903
#  define gettext(93,2920
# define gettext(97,3027
# define gettext_noop(103,3167
# define SIZE_MAX 108,3278
#define MB_CUR_MAX 115,3399
# define RE_ENABLE_I18N119,3463
# define BE(123,3513
# define BE(125,3571
# undef inline127,3616
# define inline129,3639
#define SBC_MAX 133,3703
#define COLL_ELEM_LEN_MAX 135,3724
#define NEWLINE_CHAR 138,3800
#define WIDE_NEWLINE_CHAR 139,3826
# undef __wctype144,3944
# define __wctype 146,3969
# undef __iswctype148,4013
# define __iswctype 150,4040
# define __btowc 151,4069
# define __mbrtowc 152,4092
#undef __mempcpy	153,4119
# define __mempcpy 154,4147
# define __wcrtomb 155,4174
# define __regfree 156,4201
# define attribute_hidden157,4228
# define __attribute(161,4294
# define __attribute(163,4346
typedef unsigned long int bitset_word_t;171,4619
#define BITSET_WORD_MAX 173,4700
#define BITSET_WORD_BITS 175,4776
#define BITSET_WORDS 177,4882
typedef bitset_word_t bitset_t[bitset_t178,4932
typedef bitset_word_t *re_bitset_ptr_t;re_bitset_ptr_t179,4978
typedef const bitset_word_t *re_const_bitset_ptr_t;re_const_bitset_ptr_t180,5018
#define bitset_set(182,5071
#define bitset_clear(184,5174
#define bitset_contain(186,5282
#define bitset_empty(188,5390
#define bitset_set_all(189,5454
#define bitset_copy(190,5522
#define PREV_WORD_CONSTRAINT 192,5591
#define PREV_NOTWORD_CONSTRAINT 193,5627
#define NEXT_WORD_CONSTRAINT 194,5666
#define NEXT_NOTWORD_CONSTRAINT 195,5702
#define PREV_NEWLINE_CONSTRAINT 196,5741
#define NEXT_NEWLINE_CONSTRAINT 197,5780
#define PREV_BEGBUF_CONSTRAINT 198,5819
#define NEXT_ENDBUF_CONSTRAINT 199,5857
#define WORD_DELIM_CONSTRAINT 200,5895
#define NOT_WORD_DELIM_CONSTRAINT 201,5932
  INSIDE_WORD 205,5989
  INSIDE_WORD = PREV_WORD_CONSTRAINT 205,5989
  INSIDE_WORD = PREV_WORD_CONSTRAINT | NEXT_WORD_CONSTRAINT,205,5989
  WORD_FIRST 206,6050
  WORD_FIRST = PREV_NOTWORD_CONSTRAINT 206,6050
  WORD_FIRST = PREV_NOTWORD_CONSTRAINT | NEXT_WORD_CONSTRAINT,206,6050
  WORD_LAST 207,6113
  WORD_LAST = PREV_WORD_CONSTRAINT 207,6113
  WORD_LAST = PREV_WORD_CONSTRAINT | NEXT_NOTWORD_CONSTRAINT,207,6113
  INSIDE_NOTWORD 208,6175
  INSIDE_NOTWORD = PREV_NOTWORD_CONSTRAINT 208,6175
  INSIDE_NOTWORD = PREV_NOTWORD_CONSTRAINT | NEXT_NOTWORD_CONSTRAINT,208,6175
  LINE_FIRST 209,6245
  LINE_FIRST = PREV_NEWLINE_CONSTRAINT,209,6245
  LINE_LAST 210,6285
  LINE_LAST = NEXT_NEWLINE_CONSTRAINT,210,6285
  BUF_FIRST 211,6324
  BUF_FIRST = PREV_BEGBUF_CONSTRAINT,211,6324
  BUF_LAST 212,6362
  BUF_LAST = NEXT_ENDBUF_CONSTRAINT,212,6362
  WORD_DELIM 213,6399
  WORD_DELIM = WORD_DELIM_CONSTRAINT,213,6399
  NOT_WORD_DELIM 214,6437
  NOT_WORD_DELIM = NOT_WORD_DELIM_CONSTRAINT214,6437
} re_context_type;215,6482
} re_node_set;222,6559
  NON_TYPE 226,6590
  CHARACTER 229,6664
  END_OF_RE 230,6681
  SIMPLE_BRACKET 231,6698
  OP_BACK_REF 232,6720
  OP_PERIOD 233,6739
  COMPLEX_BRACKET 235,6778
  OP_UTF8_PERIOD 236,6801
#define EPSILON_BIT 241,6980
  OP_OPEN_SUBEXP 242,7002
  OP_OPEN_SUBEXP = EPSILON_BIT 242,7002
  OP_CLOSE_SUBEXP 243,7038
  OP_CLOSE_SUBEXP = EPSILON_BIT 243,7038
  OP_ALT 244,7075
  OP_ALT = EPSILON_BIT 244,7075
  OP_DUP_ASTERISK 245,7103
  OP_DUP_ASTERISK = EPSILON_BIT 245,7103
  ANCHOR 246,7140
  ANCHOR = EPSILON_BIT 246,7140
  CONCAT 249,7217
  SUBEXP 250,7232
  OP_DUP_PLUS 253,7299
  OP_DUP_QUESTION,254,7319
  OP_OPEN_BRACKET,255,7338
  OP_CLOSE_BRACKET,256,7357
  OP_CHARSET_RANGE,257,7377
  OP_OPEN_DUP_NUM,258,7397
  OP_CLOSE_DUP_NUM,259,7416
  OP_NON_MATCH_LIST,260,7436
  OP_OPEN_COLL_ELEM,261,7457
  OP_CLOSE_COLL_ELEM,262,7478
  OP_OPEN_EQUIV_CLASS,263,7500
  OP_CLOSE_EQUIV_CLASS,264,7523
  OP_OPEN_CHAR_CLASS,265,7547
  OP_CLOSE_CHAR_CLASS,266,7569
  OP_WORD,267,7592
  OP_NOTWORD,268,7603
  OP_SPACE,269,7617
  OP_NOTSPACE,270,7629
  BACK_SLASH271,7644
} re_token_type_t;273,7658
} re_charset_t;320,8512
} re_token_t;350,9348
#define IS_EPSILON_NODE(352,9363
struct re_string_t354,9417
typedef struct re_string_t re_string_t;409,11425
typedef struct re_dfa_t re_dfa_t;413,11484
#  define internal_function 417,11550
#  define internal_function419,11624
static reg_errcode_t re_string_realloc_buffers 424,11688
#define re_string_peek_byte(438,12303
#define re_string_fetch_byte(440,12389
#define re_string_first_byte(442,12461
#define re_string_is_single_byte_char(444,12562
#define re_string_eoi(447,12718
#define re_string_cur_idx(448,12780
#define re_string_get_buffer(449,12830
#define re_string_length(450,12879
#define re_string_byte_at(451,12924
#define re_string_skip_bytes(452,12979
#define re_string_set_index(453,13045
#   define __libc_use_alloca(459,13181
#  define __libc_use_alloca(466,13528
#  define __libc_use_alloca(470,13650
#define re_malloc(474,13699
#define re_realloc(476,13834
#define re_free(477,13936
struct bin_tree_t479,13965
typedef struct bin_tree_t bin_tree_t;493,14283
#define BIN_TREE_STORAGE_SIZE 495,14322
struct bin_tree_storage_t498,14406
typedef struct bin_tree_storage_t bin_tree_storage_t;503,14514
#define CONTEXT_WORD 505,14569
#define CONTEXT_NEWLINE 506,14592
#define CONTEXT_BEGBUF 507,14636
#define CONTEXT_ENDBUF 508,14682
#define IS_WORD_CONTEXT(510,14728
#define IS_NEWLINE_CONTEXT(511,14776
#define IS_BEGBUF_CONTEXT(512,14830
#define IS_ENDBUF_CONTEXT(513,14882
#define IS_ORDINARY_CONTEXT(514,14934
#define IS_WORD_CHAR(516,14977
#define IS_NEWLINE(517,15032
#define IS_WIDE_WORD_CHAR(518,15078
#define IS_WIDE_NEWLINE(519,15140
#define NOT_SATISFY_PREV_CONSTRAINT(521,15197
#define NOT_SATISFY_NEXT_CONSTRAINT(527,15565
struct re_dfastate_t533,15940
typedef struct re_dfastate_t re_dfastate_t;551,16503
struct re_state_table_entry553,16548
} state_array_t;567,16773
} re_sub_match_last_t;576,16969
} re_sub_match_top_t;590,17367
struct re_backref_cache_entry592,17390
} re_match_context_t;628,18234
} re_sift_context_t;637,18400
struct re_fail_stack_ent_t639,18422
struct re_fail_stack_t647,18527
struct re_dfa_t654,18617
#define re_node_set_init_empty(703,19908
#define re_node_set_remove(704,19985
#define re_node_set_empty(706,20090
#define re_node_set_free(707,20136
  SB_CHAR,712,20207
  MB_CHAR,713,20218
  EQUIV_CLASS,714,20229
  COLL_SYM,715,20244
  CHAR_CLASS716,20256
} bracket_elem_type;717,20269
} bracket_elem_t;728,20419
bitset_not 733,20504
bitset_merge 741,20664
bitset_mask 749,20848
internal_function __attribute 759,21091
internal_function __attribute 772,21415
internal_function __attribute 782,21644

deps/regex/regexec.c,2065
static reg_errcode_t match_ctx_init 21,996
__typeof__ 260,10402
re_match 305,12038
weak_alias 314,12254
weak_alias 326,12532
weak_alias 339,12873
weak_alias 352,13236
re_search_stub 400,14348
re_copy_regs 487,16384
re_set_registers 566,18807
weak_alias 587,19269
re_search_internal 617,20134
prune_impossible_nodes 941,29817
__attribute 1036,32335
check_matching 1079,33809
check_halt_node_context 1211,37145
check_halt_state_context 1230,37687
proceed_next_node 1252,38332
push_fail_stack 1352,41187
pop_fail_stack 1379,42027
set_regs 1399,42683
free_fail_stack_return 1508,45463
update_regs 1525,45789
#define STATE_NODE_CONTAINS(1592,48275
sift_states_backward 1597,48425
build_sifted_states 1655,50076
clean_state_log_if_needed 1717,51856
merge_state_array 1742,52510
update_cur_sifted_state 1769,53183
add_epsilon_src_nodes 1817,54499
sub_epsilon_src_nodes 1846,55290
check_dst_limits 1895,56789
check_dst_limits_calc_pos_1 1931,57901
check_dst_limits_calc_pos 2012,59927
check_subexp_limits 2042,60825
sift_states_bkref 2130,63456
sift_states_iter_mb 2230,66260
transit_state 2260,67413
merge_state_with_log 2318,68698
find_recover_state 2397,71211
check_subexp_matching_top 2428,72045
transit_state_sb 2461,73007
transit_state_mb 2501,74253
transit_state_bkref 2571,76329
get_subexp 2685,80033
get_subexp_sub 2834,84765
find_subexp_node 2863,85806
check_arrival 2885,86452
check_arrival_add_next_nodes 3046,91116
check_arrival_expand_ecl 3127,93406
check_arrival_expand_ecl_sub 3180,94912
expand_bkref_cache 3224,96069
build_trtable 3313,98621
  struct dests_alloc3327,99095
group_nodes_into_DFAstates 3551,105991
check_node_accept_bytes 3741,111468
find_collation_sequence_value 3983,117673
check_node_accept 4046,119535
extend_buffers 4096,120634
match_ctx_init 4159,122119
match_ctx_clean 4187,122935
match_ctx_free 4217,123557
match_ctx_add_entry 4232,123993
search_cur_bkref_entry 4281,125837
match_ctx_add_subtop 4304,126383
match_ctx_add_sublast 4334,127379
sift_ctx_init 4361,128131

deps/zlib/adler32.c,410
#define local 10,217
#define BASE 14,314
#define NMAX 15,377
#define DO1(18,472
#define DO2(19,528
#define DO4(20,574
#define DO8(21,620
#define DO16(22,666
#  define MOD(26,799
#  define MOD4(46,1695
#  define MOD(55,1984
#  define MOD4(56,2011
uLong ZEXPORT adler32(60,2127
local uLong adler32_combine_(131,3970
uLong ZEXPORT adler32_combine(155,4721
uLong ZEXPORT adler32_combine64(163,4883

deps/zlib/crc32.c,1046
#    define DYNAMIC_CRC_TABLE25,989
#define local 31,1136
#    define BYFOUR37,1341
       typedef unsigned int u4;39,1395
         typedef unsigned long u4;42,1475
           typedef unsigned short u4;45,1562
#          undef BYFOUR 47,1614
#  define REV(56,1845
#  define TBLS 62,2186
#  define TBLS 64,2209
local volatile int crc_table_empty 76,2588
local unsigned long FAR crc_table[crc_table77,2628
local void make_crc_table(108,4352
local void write_table(185,6901
const unsigned long FAR * ZEXPORT get_crc_table(207,7562
#define DO1 217,7853
#define DO8 218,7927
unsigned long ZEXPORT crc32(221,8059
#define DOLIT4 258,8866
#define DOLIT32 261,9035
local unsigned long crc32_little(264,9195
#define DOBIG4 298,9968
#define DOBIG32 301,10137
local unsigned long crc32_big(304,10297
#define GF2_DIM 341,11042
local unsigned long gf2_matrix_times(344,11196
local void gf2_matrix_square(361,11532
local uLong crc32_combine_(372,11807
uLong ZEXPORT crc32_combine(428,13386
uLong ZEXPORT crc32_combine64(436,13532

deps/zlib/crc32.h,56
local const unsigned long FAR crc_table[crc_table5,90

deps/zlib/deflate.c,1693
const char deflate_copyright[deflate_copyright54,2377
    need_more,67,2884
    block_done,68,2962
    finish_started,69,3010
    finish_done 70,3090
} block_state;71,3160
typedef block_state (*compress_func)compress_func73,3176
#define NIL 104,4414
#  define TOO_FAR 108,4471
typedef struct config_s 117,4840
} config;123,5115
local const config configuration_table[configuration_table126,5141
local const config configuration_table[configuration_table131,5365
#define EQUAL 151,6153
struct static_tree_desc_s 155,6233
#define UPDATE_HASH(164,6651
#define INSERT_STRING(178,7351
#define INSERT_STRING(183,7541
#define CLEAR_HASH(193,7960
int ZEXPORT deflateInit_(198,8179
int ZEXPORT deflateInit2_(210,8610
int ZEXPORT deflateSetDictionary 311,11770
int ZEXPORT deflateReset 353,13125
int ZEXPORT deflateSetHeader 389,14052
int ZEXPORT deflatePrime 400,14396
int ZEXPORT deflateParams(412,14758
int ZEXPORT deflateTune(451,15945
uLong ZEXPORT deflateBound(486,17386
local void putShortMSB 548,19469
local void flush_pending(562,19926
int ZEXPORT deflate 582,20505
int ZEXPORT deflateEnd 895,32366
int ZEXPORT deflateCopy 930,33419
local int read_buf(992,35593
local void lm_init 1022,36307
local uInt longest_match(1063,37704
local uInt longest_match(1212,43892
local void check_match(1271,46085
#  define check_match(1292,46766
local void fill_window(1305,47293
#define FLUSH_BLOCK_ONLY(1436,52581
#define FLUSH_BLOCK(1448,53013
local block_state deflate_stored(1462,53627
local block_state deflate_fast(1520,55745
local block_state deflate_slow(1616,59556
local block_state deflate_rle(1741,64481
local block_state deflate_huff(1807,67138

deps/zlib/deflate.h,1172
#define DEFLATE_H14,395
#  define GZIP23,705
#define LENGTH_CODES 30,843
#define LITERALS 33,938
#define L_CODES 36,998
#define D_CODES 39,1111
#define BL_CODES 42,1164
#define HEAP_SIZE 45,1241
#define MAX_BITS 48,1298
#define INIT_STATE 51,1365
#define EXTRA_STATE 52,1390
#define NAME_STATE 53,1415
#define COMMENT_STATE 54,1440
#define HCRC_STATE 55,1465
#define BUSY_STATE 56,1490
#define FINISH_STATE 57,1515
typedef struct ct_data_s 62,1630
} FAR ct_data;71,1901
#define Freq 73,1917
#define Code 74,1938
#define Dad 75,1959
#define Len 76,1979
typedef struct static_tree_desc_s  static_tree_desc;78,2000
typedef struct tree_desc_s 80,2054
} FAR tree_desc;84,2284
typedef ush Pos;86,2302
typedef Pos FAR Posf;87,2319
typedef unsigned IPos;88,2341
typedef struct internal_state 94,2525
#   define max_insert_length 176,6054
} FAR deflate_state;270,10204
#define put_byte(275,10316
#define MIN_LOOKAHEAD 278,10379
#define MAX_DIST(283,10552
#define WIN_INIT 288,10734
#define d_code(301,11351
# define _tr_tally_lit(319,11906
# define _tr_tally_dist(326,12123
# define _tr_tally_lit(337,12486
# define _tr_tally_dist(338,12549

deps/zlib/inffast.c,129
#  define OFF 25,587
#  define PUP(26,603
#  define OFF 28,633
#  define PUP(29,649
void ZLIB_INTERNAL inflate_fast(67,2129

deps/zlib/inffixed.h,91
    static const code lenfix[lenfix10,318
    static const code distfix[distfix87,5905

deps/zlib/inflate.c,1032
#    define BUILDFIXED90,4068
int ZEXPORT inflateReset(103,4431
int ZEXPORT inflateReset2(130,5201
int ZEXPORT inflateInit2_(168,6207
int ZEXPORT inflateInit_(201,7252
int ZEXPORT inflatePrime(209,7429
local void fixedtables(240,8525
void makefixed(304,10223
local int updatewindow(358,12301
#  define UPDATE(412,13950
#  define UPDATE(415,14063
#  define CRC2(420,14178
#  define CRC4(427,14370
#define LOAD(438,14726
#define RESTORE(449,15010
#define INITBITS(460,15287
#define PULLBYTE(468,15488
#define NEEDBITS(478,15820
#define BITS(485,15995
#define DROPBITS(489,16100
#define BYTEBITS(496,16274
#define REVERSE(503,16422
int ZEXPORT inflate(589,20303
int ZEXPORT inflateEnd(1238,45038
int ZEXPORT inflateSetDictionary(1252,45463
int ZEXPORT inflateGetHeader(1294,46682
local unsigned syncsearch(1322,47742
int ZEXPORT inflateSync(1345,48170
int ZEXPORT inflateSyncPoint(1396,50032
int ZEXPORT inflateCopy(1406,50305
int ZEXPORT inflateUndermine(1453,51861
long ZEXPORT inflateMark(1470,52256

deps/zlib/inflate.h,761
#  define GUNZIP16,632
    HEAD,21,725
    FLAGS,22,775
    TIME,23,836
    OS,24,898
    EXLEN,25,975
    EXTRA,26,1032
    NAME,27,1088
    COMMENT,28,1149
    HCRC,29,1208
    DICTID,30,1263
    DICT,31,1323
        TYPE,32,1385
        TYPEDO,33,1461
        STORED,34,1540
        COPY_,35,1617
        COPY,36,1691
        TABLE,37,1771
        LENLENS,38,1840
        CODELENS,39,1906
            LEN_,40,1984
            LEN,41,2059
            LENEXT,42,2124
            DIST,43,2187
            DISTEXT,44,2246
            MATCH,45,2311
            LIT,46,2384
    CHECK,47,2459
    LENGTH,48,2515
    DONE,49,2573
    BAD,50,2643
    MEM,51,2709
    SYNC 52,2788
} inflate_mode;53,2865
struct inflate_state 81,3779

deps/zlib/inftrees.c,119
#define MAXBITS 9,222
const char inflate_copyright[inflate_copyright11,242
int ZLIB_INTERNAL inflate_table(32,1317

deps/zlib/inftrees.h,174
} code;28,1447
#define ENOUGH_LENS 49,2507
#define ENOUGH_DISTS 50,2531
#define ENOUGH 51,2556
    CODES,55,2662
    LENS,56,2673
    DISTS57,2683
} codetype;58,2693

deps/zlib/trees.c,1881
#define MAX_BL_BITS 47,1353
#define END_BLOCK 50,1432
#define REP_3_6 53,1487
#define REPZ_3_10 56,1580
#define REPZ_11_138 59,1669
local const int extra_lbits[extra_lbits62,1760
local const int extra_dbits[extra_dbits65,1907
local const int extra_blbits[extra_blbits68,2061
local const uch bl_order[bl_order71,2188
#define Buf_size 77,2433
#define DIST_CODE_LEN 86,2717
local ct_data static_ltree[static_ltree91,2883
local ct_data static_dtree[static_dtree98,3164
uch _dist_code[_dist_code103,3292
uch _length_code[_length_code109,3486
local int base_length[base_length112,3596
local int base_dist[base_dist115,3694
struct static_tree_desc_s 122,3844
local static_tree_desc  static_l_desc 130,4214
local static_tree_desc  static_d_desc 133,4315
local static_tree_desc  static_bl_desc 136,4416
#  define send_code(168,5867
#  define send_code(172,6036
#define put_short(181,6366
local void send_bits(193,6750
#define send_bits(218,7562
local void tr_static_init(239,8139
#  define SEPARATOR(329,11320
void gen_trees_header(333,11451
void ZLIB_INTERNAL _tr_init(386,13276
local void init_block(415,13961
#define SMALLEST 430,14382
#define pqremove(438,14683
#define smaller(449,15065
local void pqdownheap(459,15521
local void gen_bitlen(494,16816
local void gen_codes 581,20233
local void build_tree(623,22074
local void scan_tree 711,25330
local void send_tree 756,27023
local int build_bl_tree(807,28994
local void send_all_trees(842,30443
void ZLIB_INTERNAL _tr_stored_block(871,31653
void ZLIB_INTERNAL _tr_align(896,32849
void ZLIB_INTERNAL _tr_flush_block(925,33858
int ZLIB_INTERNAL _tr_tally 1026,37701
local void compress_block(1076,39665
local int detect_data_type(1137,42215
local unsigned bi_reverse(1171,43365
local void bi_flush(1186,43772
local void bi_windup(1203,44209
local void copy_block(1222,44674

deps/zlib/trees.h,318
local const ct_data static_ltree[static_ltree3,55
local const ct_data static_dtree[static_dtree64,4426
const uch ZLIB_INTERNAL _dist_code[_dist_code73,4865
const uch ZLIB_INTERNAL _length_code[_length_code102,6970
local const int base_length[base_length118,8060
local const int base_dist[base_dist123,8220

deps/zlib/zconf.h,642
#define ZCONF_H9,217
#define MAX_MEM_LEVEL 20,457
#define MAX_WBITS 27,709
#define ZEXTERN 29,755
#define ZEXPORT30,778
#define ZEXPORTVA31,794
#	define FAR33,824
#define OF(35,844
typedef unsigned char  Byte;37,868
typedef unsigned int   uInt;38,911
typedef unsigned long  uLong;39,963
typedef Byte  FAR Bytef;41,1016
typedef char  FAR charf;42,1041
typedef int   FAR intf;43,1066
typedef uInt  FAR uIntf;44,1090
typedef uLong FAR uLongf;45,1115
typedef void const *voidpc;voidpc47,1142
typedef void FAR   *voidpf;voidpf48,1170
typedef void       *voidp;voidp49,1198
#define z_off_t 51,1226
#define z_off64_t 52,1252

deps/zlib/zlib.h,2008
#define ZLIB_H32,1351
#define ZLIB_VERSION 40,1427
#define ZLIB_VERNUM 41,1456
#define ZLIB_VER_MAJOR 42,1483
#define ZLIB_VER_MINOR 43,1508
#define ZLIB_VER_REVISION 44,1533
#define ZLIB_VER_SUBREVISION 45,1561
typedef voidpf (*alloc_func)alloc_func80,3292
typedef void   (*free_func)free_func81,3365
typedef struct z_stream_s 85,3456
} z_stream;104,4403
typedef z_stream FAR *z_streamp;z_streamp106,4416
typedef struct gz_header_s 112,4585
} gz_header;127,5577
typedef gz_header FAR *gz_headerp;gz_headerp129,5591
#define Z_NO_FLUSH 164,7361
#define Z_PARTIAL_FLUSH 165,7387
#define Z_SYNC_FLUSH 166,7413
#define Z_FULL_FLUSH 167,7439
#define Z_FINISH 168,7465
#define Z_BLOCK 169,7491
#define Z_TREES 170,7517
#define Z_OK 173,7618
#define Z_STREAM_END 174,7644
#define Z_NEED_DICT 175,7670
#define Z_ERRNO 176,7696
#define Z_STREAM_ERROR 177,7724
#define Z_DATA_ERROR 178,7752
#define Z_MEM_ERROR 179,7780
#define Z_BUF_ERROR 180,7808
#define Z_VERSION_ERROR 181,7836
#define Z_NO_COMPRESSION 186,8018
#define Z_BEST_SPEED 187,8053
#define Z_BEST_COMPRESSION 188,8088
#define Z_DEFAULT_COMPRESSION 189,8123
#define Z_FILTERED 192,8185
#define Z_HUFFMAN_ONLY 193,8217
#define Z_RLE 194,8249
#define Z_FIXED 195,8281
#define Z_DEFAULT_STRATEGY 196,8313
#define Z_BINARY 199,8411
#define Z_TEXT 200,8432
#define Z_ASCII 201,8453
#define Z_UNKNOWN 202,8528
#define Z_DEFLATED 205,8618
#define Z_NULL 208,8720
#define zlib_version 210,8785
typedef unsigned (*in_func)in_func970,49797
typedef int (*out_func)out_func971,49870
typedef voidp gzFile;1165,59537
#define deflateInit(1546,76465
#define inflateInit(1548,76576
#define deflateInit2(1550,76680
#define inflateInit2(1553,76904
#define inflateBackInit(1555,77021
#  define gzopen 1575,78105
#  define gzseek 1576,78131
#  define gztell 1577,78157
#  define gzoffset 1578,78183
#  define adler32_combine 1579,78213
#  define crc32_combine 1580,78257
    struct internal_state 1600,79183

deps/zlib/zutil.c,925
struct internal_state 11,266
const char * const z_errmsg[z_errmsg14,341
const char * ZEXPORT zlibVersion(27,834
uLong ZEXPORT zlibCompileFlags(32,899
#    define verbose 118,2674
int ZLIB_INTERNAL z_verbose 120,2705
void ZLIB_INTERNAL z_error 122,2745
const char * ZEXPORT zError(133,2941
    int errno 144,3240
void ZLIB_INTERNAL zmemcpy(149,3288
int ZLIB_INTERNAL zmemcmp(160,3511
void ZLIB_INTERNAL zmemzero(173,3733
#  define MY_ZCALLOC190,3990
#define MAX_PTR 198,4273
local int next_ptr 201,4313
typedef struct ptr_table_s 203,4338
} ptr_table;206,4407
local ptr_table table[table208,4421
voidpf ZLIB_INTERNAL zcalloc 216,4796
void ZLIB_INTERNAL zcfree 240,5547
#  define MY_ZCALLOC268,6155
#  define _halloc 271,6223
#  define _hfree 272,6249
voidpf ZLIB_INTERNAL zcalloc 275,6282
void ZLIB_INTERNAL zcfree 281,6451
voidpf ZLIB_INTERNAL zcalloc 300,6846
void ZLIB_INTERNAL zcfree 310,7144

deps/zlib/zutil.h,2037
#define ZUTIL_H14,429
#  define ZLIB_INTERNAL 17,515
#  define ZLIB_INTERNAL19,584
#  define local 33,796
typedef unsigned char  uch;37,897
typedef uch FAR uchf;38,925
typedef unsigned short ush;39,947
typedef ush FAR ushf;40,975
typedef unsigned long  ulg;41,997
#define ERR_MSG(46,1156
#define ERR_RETURN(48,1206
#  define DEF_WBITS 55,1396
#  define DEF_MEM_LEVEL 60,1535
#  define DEF_MEM_LEVEL 62,1567
#define STORED_BLOCK 66,1637
#define STATIC_TREES 67,1660
#define DYN_TREES 68,1683
#define MIN_MATCH 71,1743
#define MAX_MATCH 72,1764
#define PRESET_DICT 75,1832
#  define OS_CODE 80,1997
#  define OS_CODE 95,2432
#  define OS_CODE 99,2498
#  define F_OPEN(100,2522
#  define OS_CODE 105,2670
#  define OS_CODE 109,2713
#  define OS_CODE 116,2838
#      define fdopen(121,3005
#  define OS_CODE 127,3100
#    define OS_CODE 132,3199
#  define OS_CODE 137,3279
#  define fdopen(141,3350
#    define fdopen(146,3499
       typedef int ptrdiff_t;148,3581
#      define _PTRDIFF_T_DEFINED149,3611
#    define fdopen(152,3663
#  define OS_CODE 171,4149
#  define F_OPEN(175,4215
#    define HAVE_VSNPRINTF182,4393
#    define HAVE_VSNPRINTF187,4485
#    define NO_vsnprintf194,4679
#    define NO_vsnprintf197,4733
#         define vsnprintf 203,4983
#    define NO_vsnprintf208,5070
#  define NO_vsnprintf212,5122
#  define NO_MEMCPY216,5170
#  define NO_MEMCPY223,5446
#  define HAVE_MEMCPY226,5539
#    define zmemcpy 230,5643
#    define zmemcmp 231,5672
#    define zmemzero(232,5701
#    define zmemcpy 234,5764
#    define zmemcmp 235,5791
#    define zmemzero(236,5818
#  define Assert(249,6265
#  define Trace(250,6320
#  define Tracev(251,6371
#  define Tracevv(252,6422
#  define Tracec(253,6474
#  define Tracecv(254,6534
#  define Assert(256,6601
#  define Trace(257,6628
#  define Tracev(258,6647
#  define Tracevv(259,6667
#  define Tracec(260,6688
#  define Tracecv(261,6710
#define ZALLOC(269,6908
#define ZFREE(271,7008
#define TRY_FREE(272,7086

examples/diff.c,197
void check(6,78
int resolve_to_tree(14,202
char *colors[colors56,1170
int printer(64,1310
int check_uint16_param(96,2039
int check_str_param(110,2337
void usage(119,2528
int main(129,2774

examples/general.c,18
int main 31,1363

examples/Makefile,9
CC 3,13

examples/network/clone.c,120
struct dl_data 10,163
static void *clone_thread(clone_thread20,307
void print_progress(35,665
int do_clone(58,1181

examples/network/common.h,60
#define __COMMON_H__2,21
typedef int (*git_cb)git_cb6,62

examples/network/fetch.c,142
struct dl_data 9,139
static void progress_cb(17,252
static void *download(download24,431
static int update_cb(50,1045
int fetch(69,1485

examples/network/git2.c,76
} commands[commands13,228
static int run_command(21,361
int main(48,985

examples/network/index-pack.c,51
static int index_cb(13,298
int index_pack(21,459

examples/network/ls-remote.c,114
static int show_ref__cb(7,98
static int use_unnamed(17,302
static int use_remote(42,939
int ls_remote(66,1455

examples/network/Makefile,9
CC 3,14

examples/showindex.c,15
int main 4,38

include/git2/attr.h,511
#define INCLUDE_git_attr_h__8,232
#define GIT_ATTR_TRUE(33,773
#define GIT_ATTR_FALSE(47,1223
#define GIT_ATTR_UNSPECIFIED(65,1868
#define GIT_ATTR_HAS_VALUE(77,2294
	GIT_ATTR_UNSPECIFIED_T 80,2386
	GIT_ATTR_TRUE_T,81,2415
	GIT_ATTR_FALSE_T,82,2433
	GIT_ATTR_VALUE_T,83,2452
} git_attr_t;84,2471
GIT_EXTERN(99,2883
#define GIT_ATTR_CHECK_FILE_THEN_INDEX	114,3525
#define GIT_ATTR_CHECK_INDEX_THEN_FILE	115,3566
#define GIT_ATTR_CHECK_INDEX_ONLY	116,3607
#define GIT_ATTR_CHECK_NO_SYSTEM	125,3909

include/git2/blob.h,114
#define INCLUDE_git_blob_h__8,232
GIT_INLINE(32,733
GIT_INLINE(49,1262
GIT_INLINE(66,1708
GIT_EXTERN(83,2148

include/git2/branch.h,57
#define INCLUDE_git_branch_h__8,234
GIT_EXTERN(48,1450

include/git2/checkout.h,219
#define INCLUDE_git_checkout_h__8,231
#define GIT_CHECKOUT_OVERWRITE_EXISTING 25,479
#define GIT_CHECKOUT_SKIP_EXISTING 26,535
typedef struct git_checkout_opts 29,618
} git_checkout_opts;35,892
GIT_EXTERN(45,1284

include/git2/clone.h,56
#define INCLUDE_git_clone_h__8,228
GIT_EXTERN(36,1015

include/git2/commit.h,116
#define INCLUDE_git_commit_h__8,234
GIT_INLINE(33,841
GIT_INLINE(51,1466
GIT_INLINE(68,1930
GIT_EXTERN(79,2155

include/git2/common.h,973
#define INCLUDE_git_common_h__8,234
# define GIT_BEGIN_DECL 20,400
# define GIT_END_DECL	21,437
# define GIT_BEGIN_DECL 24,504
# define GIT_END_DECL	26,575
# define GIT_EXTERN(31,698
# define GIT_EXTERN(35,811
# define GIT_EXTERN(37,870
# define GIT_INLINE(42,983
# define GIT_INLINE(44,1036
# define GIT_FORMAT_PRINTF(49,1163
# define GIT_FORMAT_PRINTF(51,1240
#define GIT_WIN32 55,1338
#define GIT_PATH_LIST_SEPARATOR 78,1780
#define GIT_PATH_LIST_SEPARATOR 80,1822
#define GIT_PATH_MAX 86,1917
} git_strarray;91,1993
typedef struct git_rational 93,2010
} git_rational;96,2080
#define GIT_PROGRESS_STAGE_TRANSFER 98,2097
#define GIT_PROGRESS_STAGE_INDEX 99,2135
#define GIT_PROGRESS_STAGE_CHECKOUT 100,2170
typedef struct git_progress_multistage 102,2209
} git_progress_multistage;106,2311
typedef struct git_progress 108,2339
} git_progress;111,2401
GIT_EXTERN(113,2418
	GIT_CAP_THREADS	130,2936
	GIT_CAP_HTTPS	131,2969
GIT_EXTERN(147,3392

include/git2/config.h,233
#define INCLUDE_git_config_h__8,234
struct git_config_file 26,562
	GIT_CVAR_FALSE 41,1331
	GIT_CVAR_TRUE 42,1352
	GIT_CVAR_INT32,43,1372
	GIT_CVAR_STRING44,1389
} git_cvar_t;45,1406
} git_cvar_map;51,1501
GIT_EXTERN(68,2034

include/git2/diff.h,1578
#define INCLUDE_git_diff_h__8,232
	GIT_DIFF_NORMAL 37,1034
	GIT_DIFF_REVERSE 38,1056
	GIT_DIFF_FORCE_TEXT 39,1086
	GIT_DIFF_IGNORE_WHITESPACE 40,1119
	GIT_DIFF_IGNORE_WHITESPACE_CHANGE 41,1159
	GIT_DIFF_IGNORE_WHITESPACE_EOL 42,1206
	GIT_DIFF_IGNORE_SUBMODULES 43,1250
	GIT_DIFF_PATIENCE 44,1290
	GIT_DIFF_INCLUDE_IGNORED 45,1321
	GIT_DIFF_INCLUDE_UNTRACKED 46,1359
	GIT_DIFF_INCLUDE_UNMODIFIED 47,1399
	GIT_DIFF_RECURSE_UNTRACKED_DIRS 48,1440
	GIT_DIFF_DISABLE_PATHSPEC_MATCH 49,1486
} git_diff_options;68,2216
typedef struct git_diff_list git_diff_list;73,2311
	GIT_DIFF_FILE_VALID_OID 76,2363
	GIT_DIFF_FILE_FREE_PATH 77,2401
	GIT_DIFF_FILE_BINARY 78,2439
	GIT_DIFF_FILE_NOT_BINARY 79,2477
	GIT_DIFF_FILE_FREE_DATA 80,2515
	GIT_DIFF_FILE_UNMAP_DATA 81,2553
	GIT_DELTA_UNMODIFIED 88,2674
	GIT_DELTA_ADDED 89,2701
	GIT_DELTA_DELETED 90,2723
	GIT_DELTA_MODIFIED 91,2747
	GIT_DELTA_RENAMED 92,2772
	GIT_DELTA_COPIED 93,2796
	GIT_DELTA_IGNORED 94,2819
	GIT_DELTA_UNTRACKED 95,2843
} git_delta_t;96,2868
} git_diff_file;107,3028
} git_diff_delta;128,3816
typedef int (*git_diff_file_fn)git_diff_file_fn133,3911
} git_diff_range;146,4134
typedef int (*git_diff_hunk_fn)git_diff_hunk_fn151,4229
	GIT_DIFF_LINE_CONTEXT 169,4786
	GIT_DIFF_LINE_ADDITION 170,4818
	GIT_DIFF_LINE_DELETION 171,4850
	GIT_DIFF_LINE_ADD_EOFNL 172,4882
	GIT_DIFF_LINE_DEL_EOFNL 173,4934
	GIT_DIFF_LINE_FILE_HDR 179,5212
	GIT_DIFF_LINE_HUNK_HDR 180,5244
	GIT_DIFF_LINE_BINARY 181,5276
typedef int (*git_diff_data_fn)git_diff_data_fn192,5636
GIT_EXTERN(210,6052

include/git2/errors.h,673
#define INCLUDE_git_errors_h__8,234
	GIT_OK 22,443
	GIT_ERROR 23,456
	GIT_ENOTFOUND 24,473
	GIT_EEXISTS 25,494
	GIT_EAMBIGUOUS 26,513
	GIT_EBUFS 27,535
	GIT_EUSER 28,552
	GIT_PASSTHROUGH 30,570
	GIT_REVWALKOVER 31,594
} git_error;37,667
	GITERR_NOMEMORY,41,717
	GITERR_OS,42,735
	GITERR_INVALID,43,747
	GITERR_REFERENCE,44,764
	GITERR_ZLIB,45,783
	GITERR_REPOSITORY,46,797
	GITERR_CONFIG,47,817
	GITERR_REGEX,48,833
	GITERR_ODB,49,848
	GITERR_INDEX,50,861
	GITERR_OBJECT,51,876
	GITERR_NET,52,892
	GITERR_TAG,53,905
	GITERR_TREE,54,918
	GITERR_INDEXER,55,932
	GITERR_SSL,56,949
	GITERR_SUBMODULE,57,962
} git_error_t;58,981
GIT_EXTERN(66,1156

include/git2/ignore.h,57
#define INCLUDE_git_ignore_h__8,229
GIT_EXTERN(37,1182

include/git2/index.h,1167
#define INCLUDE_git_index_h__8,233
#define GIT_IDXENTRY_NAMEMASK 24,531
#define GIT_IDXENTRY_STAGEMASK 25,570
#define GIT_IDXENTRY_EXTENDED 26,610
#define GIT_IDXENTRY_VALID	27,649
#define GIT_IDXENTRY_STAGESHIFT 28,686
#define GIT_IDXENTRY_UPDATE	37,895
#define GIT_IDXENTRY_REMOVE	38,934
#define GIT_IDXENTRY_UPTODATE	39,973
#define GIT_IDXENTRY_ADDED	40,1014
#define GIT_IDXENTRY_HASHED	42,1054
#define GIT_IDXENTRY_UNHASHED	43,1093
#define GIT_IDXENTRY_WT_REMOVE	44,1134
#define GIT_IDXENTRY_CONFLICTED	45,1207
#define GIT_IDXENTRY_UNPACKED	47,1250
#define GIT_IDXENTRY_NEW_SKIP_WORKTREE 48,1291
#define GIT_IDXENTRY_INTENT_TO_ADD	53,1374
#define GIT_IDXENTRY_SKIP_WORKTREE	54,1420
#define GIT_IDXENTRY_EXTENDED2	56,1519
#define GIT_IDXENTRY_EXTENDED_FLAGS 58,1563
} git_index_time;65,1815
typedef struct git_index_entry 68,1893
} git_index_entry;85,2176
typedef struct git_index_entry_unmerged 88,2258
} git_index_entry_unmerged;92,2353
	GIT_INDEXCAP_IGNORE_CASE 96,2446
	GIT_INDEXCAP_NO_FILEMODE 97,2477
	GIT_INDEXCAP_NO_SYMLINKS 98,2508
	GIT_INDEXCAP_FROM_OWNER 99,2539
	GIT_INDEXCAP_FROM_OWNER  = ~0u99,2539
GIT_EXTERN(120,3200

include/git2/indexer.h,235
#define _INCLUDE_git_indexer_h__8,236
typedef struct git_indexer_stats 19,430
} git_indexer_stats;25,600
typedef struct git_indexer git_indexer;28,623
typedef struct git_indexer_stream git_indexer_stream;29,663
GIT_EXTERN(37,890

include/git2/inttypes.h,4992
#define _MSC_INTTYPES_H_37,1819
} imaxdiv_t;50,2002
#define PRId8 57,2198
#define PRIi8 58,2222
#define PRIdLEAST8 59,2246
#define PRIiLEAST8 60,2270
#define PRIdFAST8 61,2294
#define PRIiFAST8 62,2318
#define PRId16 64,2343
#define PRIi16 65,2369
#define PRIdLEAST16 66,2395
#define PRIiLEAST16 67,2421
#define PRIdFAST16 68,2447
#define PRIiFAST16 69,2473
#define PRId32 71,2500
#define PRIi32 72,2528
#define PRIdLEAST32 73,2556
#define PRIiLEAST32 74,2584
#define PRIdFAST32 75,2612
#define PRIiFAST32 76,2640
#define PRId64 78,2669
#define PRIi64 79,2697
#define PRIdLEAST64 80,2725
#define PRIiLEAST64 81,2753
#define PRIdFAST64 82,2781
#define PRIiFAST64 83,2809
#define PRIdMAX 85,2838
#define PRIiMAX 86,2865
#define PRIdPTR 88,2893
#define PRIiPTR 89,2918
#define PRIo8 92,2993
#define PRIu8 93,3017
#define PRIx8 94,3041
#define PRIX8 95,3065
#define PRIoLEAST8 96,3089
#define PRIuLEAST8 97,3113
#define PRIxLEAST8 98,3137
#define PRIXLEAST8 99,3161
#define PRIoFAST8 100,3185
#define PRIuFAST8 101,3209
#define PRIxFAST8 102,3233
#define PRIXFAST8 103,3257
#define PRIo16 105,3282
#define PRIu16 106,3308
#define PRIx16 107,3334
#define PRIX16 108,3360
#define PRIoLEAST16 109,3386
#define PRIuLEAST16 110,3412
#define PRIxLEAST16 111,3438
#define PRIXLEAST16 112,3464
#define PRIoFAST16 113,3490
#define PRIuFAST16 114,3516
#define PRIxFAST16 115,3542
#define PRIXFAST16 116,3568
#define PRIo32 118,3595
#define PRIu32 119,3623
#define PRIx32 120,3651
#define PRIX32 121,3679
#define PRIoLEAST32 122,3707
#define PRIuLEAST32 123,3735
#define PRIxLEAST32 124,3763
#define PRIXLEAST32 125,3791
#define PRIoFAST32 126,3819
#define PRIuFAST32 127,3847
#define PRIxFAST32 128,3875
#define PRIXFAST32 129,3903
#define PRIo64 131,3932
#define PRIu64 132,3960
#define PRIx64 133,3988
#define PRIX64 134,4016
#define PRIoLEAST64 135,4044
#define PRIuLEAST64 136,4072
#define PRIxLEAST64 137,4100
#define PRIXLEAST64 138,4128
#define PRIoFAST64 139,4156
#define PRIuFAST64 140,4184
#define PRIxFAST64 141,4212
#define PRIXFAST64 142,4240
#define PRIoMAX 144,4269
#define PRIuMAX 145,4296
#define PRIxMAX 146,4323
#define PRIXMAX 147,4350
#define PRIoPTR 149,4378
#define PRIuPTR 150,4403
#define PRIxPTR 151,4428
#define PRIXPTR 152,4453
#define SCNd8 155,4525
#define SCNi8 156,4549
#define SCNdLEAST8 157,4573
#define SCNiLEAST8 158,4597
#define SCNdFAST8 159,4621
#define SCNiFAST8 160,4645
#define SCNd16 162,4670
#define SCNi16 163,4696
#define SCNdLEAST16 164,4722
#define SCNiLEAST16 165,4748
#define SCNdFAST16 166,4774
#define SCNiFAST16 167,4800
#define SCNd32 169,4827
#define SCNi32 170,4853
#define SCNdLEAST32 171,4879
#define SCNiLEAST32 172,4905
#define SCNdFAST32 173,4931
#define SCNiFAST32 174,4957
#define SCNd64 176,4984
#define SCNi64 177,5012
#define SCNdLEAST64 178,5040
#define SCNiLEAST64 179,5068
#define SCNdFAST64 180,5096
#define SCNiFAST64 181,5124
#define SCNdMAX 183,5153
#define SCNiMAX 184,5180
#  define SCNdPTR 187,5227
#  define SCNiPTR 188,5256
#  define SCNdPTR 190,5305
#  define SCNiPTR 191,5332
#define SCNo8 195,5428
#define SCNu8 196,5452
#define SCNx8 197,5476
#define SCNX8 198,5500
#define SCNoLEAST8 199,5524
#define SCNuLEAST8 200,5548
#define SCNxLEAST8 201,5572
#define SCNXLEAST8 202,5596
#define SCNoFAST8 203,5620
#define SCNuFAST8 204,5644
#define SCNxFAST8 205,5668
#define SCNXFAST8 206,5692
#define SCNo16 208,5717
#define SCNu16 209,5743
#define SCNx16 210,5769
#define SCNX16 211,5795
#define SCNoLEAST16 212,5821
#define SCNuLEAST16 213,5847
#define SCNxLEAST16 214,5873
#define SCNXLEAST16 215,5899
#define SCNoFAST16 216,5925
#define SCNuFAST16 217,5951
#define SCNxFAST16 218,5977
#define SCNXFAST16 219,6003
#define SCNo32 221,6030
#define SCNu32 222,6056
#define SCNx32 223,6082
#define SCNX32 224,6108
#define SCNoLEAST32 225,6134
#define SCNuLEAST32 226,6160
#define SCNxLEAST32 227,6186
#define SCNXLEAST32 228,6212
#define SCNoFAST32 229,6238
#define SCNuFAST32 230,6264
#define SCNxFAST32 231,6290
#define SCNXFAST32 232,6316
#define SCNo64 234,6343
#define SCNu64 235,6371
#define SCNx64 236,6399
#define SCNX64 237,6427
#define SCNoLEAST64 238,6455
#define SCNuLEAST64 239,6483
#define SCNxLEAST64 240,6511
#define SCNXLEAST64 241,6539
#define SCNoFAST64 242,6567
#define SCNuFAST64 243,6595
#define SCNxFAST64 244,6623
#define SCNXFAST64 245,6651
#define SCNoMAX 247,6680
#define SCNuMAX 248,6707
#define SCNxMAX 249,6734
#define SCNXMAX 250,6761
#  define SCNoPTR 253,6808
#  define SCNuPTR 254,6837
#  define SCNxPTR 255,6866
#  define SCNXPTR 256,6895
#  define SCNoPTR 258,6944
#  define SCNuPTR 259,6971
#  define SCNxPTR 260,6998
#  define SCNXPTR 261,7025
#define imaxabs 269,7192
imaxdiv_t __cdecl imaxdiv(280,7451
#define strtoimax 297,7800
#define strtoumax 298,7828
#define wcstoimax 301,7907
#define wcstoumax 302,7935

include/git2/merge.h,55
#define INCLUDE_git_merge_h__8,233
GIT_EXTERN(31,704

include/git2/message.h,58
#define INCLUDE_git_message_h__8,235
GIT_EXTERN(39,1064

include/git2/net.h,207
#define INCLUDE_net_h__8,227
#define GIT_DEFAULT_PORT 22,413
#define GIT_DIR_FETCH 30,604
#define GIT_DIR_PUSH 31,628
struct git_remote_head 37,714
typedef int (*git_headlist_cb)git_headlist_cb47,872

include/git2/notes.h,101
#define INCLUDE_git_note_h__8,232
GIT_EXTERN(34,850
} git_note_data;116,3115
GIT_EXTERN(134,3630

include/git2/object.h,57
#define INCLUDE_git_object_h__8,234
GIT_EXTERN(41,1153

include/git2/odb.h,53
#define INCLUDE_git_odb_h__8,231
GIT_EXTERN(34,823

include/git2/odb_backend.h,315
#define INCLUDE_git_odb_backend_h__8,239
struct git_odb_backend 26,554
	GIT_STREAM_RDONLY 85,1670
	GIT_STREAM_WRONLY 86,1701
	GIT_STREAM_RW 87,1732
	GIT_STREAM_RW = (GIT_STREAM_RDONLY 87,1732
	GIT_STREAM_RW = (GIT_STREAM_RDONLY | GIT_STREAM_WRONLY)87,1732
struct git_odb_stream 91,1839
GIT_EXTERN(101,2179

include/git2/oid.h,335
#define INCLUDE_git_oid_h__8,231
#define GIT_OID_RAWSZ 23,486
#define GIT_OID_HEXSZ 26,558
#define GIT_OID_MINPREFIXLEN 30,697
typedef struct _git_oid git_oid;33,793
struct _git_oid 34,826
GIT_EXTERN(48,1235
GIT_INLINE(160,4811
GIT_EXTERN(174,5165
typedef struct git_oid_shorten git_oid_shorten;196,5721
GIT_EXTERN(212,6200

include/git2/reflog.h,56
#define INCLUDE_git_reflog_h__8,234
GIT_EXTERN(37,834

include/git2/refs.h,54
#define INCLUDE_git_refs_h__8,232
GIT_EXTERN(33,854

include/git2/refspec.h,57
#define INCLUDE_git_refspec_h__8,235
GIT_EXTERN(28,624

include/git2/remote.h,328
#define INCLUDE_git_remote_h__8,234
GIT_EXTERN(46,1095
typedef enum git_remote_completion_type 278,7660
	GIT_REMOTE_COMPLETION_DOWNLOAD,279,7702
	GIT_REMOTE_COMPLETION_INDEXING,280,7735
	GIT_REMOTE_COMPLETION_ERROR,281,7768
} git_remote_completion_type;282,7798
struct git_remote_callbacks 289,7923
GIT_EXTERN(305,8469

include/git2/repository.h,941
#define INCLUDE_git_repository_h__8,238
GIT_EXTERN(36,900
	GIT_REPOSITORY_OPEN_NO_SEARCH 99,3373
	GIT_REPOSITORY_OPEN_CROSS_FS 100,3416
GIT_EXTERN(120,4356
	GIT_REPOSITORY_INIT_BARE 186,6972
	GIT_REPOSITORY_INIT_BARE              = (1u u186,6972
	GIT_REPOSITORY_INIT_NO_REINIT 187,7024
	GIT_REPOSITORY_INIT_NO_REINIT         = (1u u187,7024
	GIT_REPOSITORY_INIT_NO_DOTGIT_DIR 188,7076
	GIT_REPOSITORY_INIT_NO_DOTGIT_DIR     = (1u u188,7076
	GIT_REPOSITORY_INIT_MKDIR 189,7128
	GIT_REPOSITORY_INIT_MKDIR             = (1u u189,7128
	GIT_REPOSITORY_INIT_MKPATH 190,7180
	GIT_REPOSITORY_INIT_MKPATH            = (1u u190,7180
	GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE 191,7232
	GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE = (1u u191,7232
	GIT_REPOSITORY_INIT_SHARED_UMASK 208,7843
	GIT_REPOSITORY_INIT_SHARED_GROUP 209,7882
	GIT_REPOSITORY_INIT_SHARED_ALL 210,7927
} git_repository_init_options;249,9770
GIT_EXTERN(264,10375

include/git2/reset.h,56
#define INCLUDE_git_reset_h__8,233
GIT_EXTERN(40,1223

include/git2/revparse.h,58
#define INCLUDE_git_revparse_h__8,231
GIT_EXTERN(32,880

include/git2/revwalk.h,190
#define INCLUDE_git_revwalk_h__8,235
#define GIT_SORT_NONE	29,701
#define GIT_SORT_TOPOLOGICAL 36,877
#define GIT_SORT_TIME	43,1038
#define GIT_SORT_REVERSE	50,1204
GIT_EXTERN(70,1890

include/git2/signature.h,59
#define INCLUDE_git_signature_h__8,237
GIT_EXTERN(36,966

include/git2/status.h,822
#define INCLUDE_git_status_h__8,234
	GIT_STATUS_CURRENT	23,466
	GIT_STATUS_INDEX_NEW 25,492
	GIT_STATUS_INDEX_MODIFIED 26,526
	GIT_STATUS_INDEX_DELETED 27,565
	GIT_STATUS_WT_NEW 29,604
	GIT_STATUS_WT_MODIFIED 30,635
	GIT_STATUS_WT_DELETED 31,671
	GIT_STATUS_IGNORED 33,707
GIT_EXTERN(47,1186
	GIT_STATUS_SHOW_INDEX_AND_WORKDIR 72,2252
	GIT_STATUS_SHOW_INDEX_ONLY 73,2292
	GIT_STATUS_SHOW_WORKDIR_ONLY 74,2325
	GIT_STATUS_SHOW_INDEX_THEN_WORKDIR 75,2360
} git_status_show_t;76,2401
	GIT_STATUS_OPT_INCLUDE_UNTRACKED 104,3728
	GIT_STATUS_OPT_INCLUDE_IGNORED 105,3774
	GIT_STATUS_OPT_INCLUDE_UNMODIFIED 106,3818
	GIT_STATUS_OPT_EXCLUDE_SUBMODULES 107,3865
	GIT_STATUS_OPT_RECURSE_UNTRACKED_DIRS 108,3912
	GIT_STATUS_OPT_DISABLE_PATHSPEC_MATCH 109,3963
} git_status_options;120,4196
GIT_EXTERN(125,4293

include/git2/stdint.h,3718
#define _MSC_STDINT_H_37,1820
#     define _W64 60,2439
#     define _W6462,2471
   typedef signed char       int8_t;75,2738
   typedef signed short      int16_t;76,2775
   typedef signed int        int32_t;77,2813
   typedef unsigned char     uint8_t;78,2851
   typedef unsigned short    uint16_t;79,2889
   typedef unsigned int      uint32_t;80,2928
   typedef signed __int8     int8_t;82,2973
   typedef signed __int16    int16_t;83,3010
   typedef signed __int32    int32_t;84,3048
   typedef unsigned __int8   uint8_t;85,3086
   typedef unsigned __int16  uint16_t;86,3124
   typedef unsigned __int32  uint32_t;87,3163
typedef signed __int64       int64_t;89,3209
typedef unsigned __int64     uint64_t;90,3247
typedef int8_t    int_least8_t;94,3328
typedef int16_t   int_least16_t;95,3360
typedef int32_t   int_least32_t;96,3393
typedef int64_t   int_least64_t;97,3426
typedef uint8_t   uint_least8_t;98,3459
typedef uint16_t  uint_least16_t;99,3492
typedef uint32_t  uint_least32_t;100,3526
typedef uint64_t  uint_least64_t;101,3560
typedef int8_t    int_fast8_t;104,3643
typedef int16_t   int_fast16_t;105,3674
typedef int32_t   int_fast32_t;106,3706
typedef int64_t   int_fast64_t;107,3738
typedef uint8_t   uint_fast8_t;108,3770
typedef uint16_t  uint_fast16_t;109,3802
typedef uint32_t  uint_fast32_t;110,3835
typedef uint64_t  uint_fast64_t;111,3868
   typedef signed __int64    intptr_t;115,3982
   typedef unsigned __int64  uintptr_t;116,4021
   typedef _W64 signed int   intptr_t;118,4080
   typedef _W64 unsigned int uintptr_t;119,4119
typedef int64_t   intmax_t;123,4220
typedef uint64_t  uintmax_t;124,4248
#define INT8_MIN 132,4502
#define INT8_MAX 133,4541
#define INT16_MIN 134,4570
#define INT16_MAX 135,4611
#define INT32_MIN 136,4641
#define INT32_MAX 137,4682
#define INT64_MIN 138,4712
#define INT64_MAX 139,4753
#define UINT8_MAX 140,4783
#define UINT16_MAX 141,4813
#define UINT32_MAX 142,4844
#define UINT64_MAX 143,4875
#define INT_LEAST8_MIN 146,4957
#define INT_LEAST8_MAX 147,4992
#define INT_LEAST16_MIN 148,5027
#define INT_LEAST16_MAX 149,5063
#define INT_LEAST32_MIN 150,5099
#define INT_LEAST32_MAX 151,5135
#define INT_LEAST64_MIN 152,5171
#define INT_LEAST64_MAX 153,5207
#define UINT_LEAST8_MAX 154,5243
#define UINT_LEAST16_MAX 155,5279
#define UINT_LEAST32_MAX 156,5316
#define UINT_LEAST64_MAX 157,5353
#define INT_FAST8_MIN 160,5449
#define INT_FAST8_MAX 161,5483
#define INT_FAST16_MIN 162,5517
#define INT_FAST16_MAX 163,5552
#define INT_FAST32_MIN 164,5587
#define INT_FAST32_MAX 165,5622
#define INT_FAST64_MIN 166,5657
#define INT_FAST64_MAX 167,5692
#define UINT_FAST8_MAX 168,5727
#define UINT_FAST16_MAX 169,5762
#define UINT_FAST32_MAX 170,5798
#define UINT_FAST64_MAX 171,5834
#  define INTPTR_MIN 175,5961
#  define INTPTR_MAX 176,5994
#  define UINTPTR_MAX 177,6027
#  define INTPTR_MIN 179,6080
#  define INTPTR_MAX 180,6113
#  define UINTPTR_MAX 181,6146
#define INTMAX_MIN 185,6251
#define INTMAX_MAX 186,6282
#define UINTMAX_MAX 187,6313
#  define PTRDIFF_MIN 192,6406
#  define PTRDIFF_MAX 193,6438
#  define PTRDIFF_MIN 195,6490
#  define PTRDIFF_MAX 196,6522
#define SIG_ATOMIC_MIN 199,6575
#define SIG_ATOMIC_MAX 200,6607
#     define SIZE_MAX 204,6683
#     define SIZE_MAX 206,6737
#  define WCHAR_MIN 212,6893
#  define WCHAR_MAX 215,6962
#define WINT_MIN 218,7017
#define WINT_MAX 219,7037
#define INT8_C(230,7295
#define INT16_C(231,7324
#define INT32_C(232,7354
#define INT64_C(233,7384
#define UINT8_C(235,7415
#define UINT16_C(236,7446
#define UINT32_C(237,7478
#define UINT64_C(238,7510
#define INTMAX_C 241,7599
#define UINTMAX_C 242,7626

include/git2/submodule.h,2103
#define INCLUDE_git_submodule_h__8,232
typedef struct git_submodule git_submodule;32,899
	GIT_SUBMODULE_UPDATE_DEFAULT 41,1181
	GIT_SUBMODULE_UPDATE_CHECKOUT 42,1217
	GIT_SUBMODULE_UPDATE_REBASE 43,1253
	GIT_SUBMODULE_UPDATE_MERGE 44,1287
	GIT_SUBMODULE_UPDATE_NONE 45,1320
} git_submodule_update_t;46,1351
	GIT_SUBMODULE_IGNORE_DEFAULT 56,1660
	GIT_SUBMODULE_IGNORE_NONE 57,1720
	GIT_SUBMODULE_IGNORE_UNTRACKED 58,1796
	GIT_SUBMODULE_IGNORE_DIRTY 59,1869
	GIT_SUBMODULE_IGNORE_ALL 60,1937
} git_submodule_ignore_t;61,1992
	 GIT_SUBMODULE_STATUS_IN_HEAD 106,3857
	 GIT_SUBMODULE_STATUS_IN_HEAD           = (1u u106,3857
	 GIT_SUBMODULE_STATUS_IN_INDEX 107,3911
	 GIT_SUBMODULE_STATUS_IN_INDEX          = (1u u107,3911
	 GIT_SUBMODULE_STATUS_IN_CONFIG 108,3965
	 GIT_SUBMODULE_STATUS_IN_CONFIG         = (1u u108,3965
	 GIT_SUBMODULE_STATUS_IN_WD 109,4019
	 GIT_SUBMODULE_STATUS_IN_WD             = (1u u109,4019
	 GIT_SUBMODULE_STATUS_INDEX_ADDED 110,4073
	 GIT_SUBMODULE_STATUS_INDEX_ADDED       = (1u u110,4073
	 GIT_SUBMODULE_STATUS_INDEX_DELETED 111,4127
	 GIT_SUBMODULE_STATUS_INDEX_DELETED     = (1u u111,4127
	 GIT_SUBMODULE_STATUS_INDEX_MODIFIED 112,4181
	 GIT_SUBMODULE_STATUS_INDEX_MODIFIED    = (1u u112,4181
	 GIT_SUBMODULE_STATUS_WD_UNINITIALIZED 113,4235
	 GIT_SUBMODULE_STATUS_WD_UNINITIALIZED  = (1u u113,4235
	 GIT_SUBMODULE_STATUS_WD_ADDED 114,4289
	 GIT_SUBMODULE_STATUS_WD_ADDED          = (1u u114,4289
	 GIT_SUBMODULE_STATUS_WD_DELETED 115,4343
	 GIT_SUBMODULE_STATUS_WD_DELETED        = (1u u115,4343
	 GIT_SUBMODULE_STATUS_WD_MODIFIED 116,4397
	 GIT_SUBMODULE_STATUS_WD_MODIFIED       = (1u u116,4397
	 GIT_SUBMODULE_STATUS_WD_INDEX_MODIFIED 117,4452
	 GIT_SUBMODULE_STATUS_WD_INDEX_MODIFIED = (1u u117,4452
	 GIT_SUBMODULE_STATUS_WD_WD_MODIFIED 118,4507
	 GIT_SUBMODULE_STATUS_WD_WD_MODIFIED    = (1u u118,4507
	 GIT_SUBMODULE_STATUS_WD_UNTRACKED 119,4562
	 GIT_SUBMODULE_STATUS_WD_UNTRACKED      = (1u u119,4562
} git_submodule_status_t;120,4617
#define GIT_SUBMODULE_STATUS_IS_UNMODIFIED(122,4644
GIT_EXTERN(154,6216

include/git2/tag.h,113
#define INCLUDE_git_tag_h__8,231
GIT_INLINE(32,704
GIT_INLINE(49,1236
GIT_INLINE(66,1684
GIT_EXTERN(78,1886

include/git2/threads.h,57
#define INCLUDE_git_threads_h__8,235
GIT_EXTERN(31,701

include/git2/tree.h,283
#define INCLUDE_git_tree_h__8,232
GIT_INLINE(32,739
GIT_INLINE(49,1270
GIT_INLINE(69,1720
GIT_EXTERN(83,2016
typedef int (*git_treewalk_cb)git_treewalk_cb342,9837
enum git_treewalk_mode 345,9960
	GIT_TREEWALK_PRE 346,9985
	GIT_TREEWALK_POST 347,10024
GIT_EXTERN(370,10792

include/git2/types.h,2710
#define INCLUDE_git_types_h__8,233
typedef __int64 git_off_t;41,1097
typedef __time64_t git_time_t;42,1124
typedef off64_t git_off_t;46,1184
typedef __time64_t git_time_t;47,1211
typedef __haiku_std_int64 git_off_t;51,1269
typedef __haiku_std_int64 git_time_t;52,1306
typedef int64_t git_off_t;61,1579
typedef int64_t git_time_t;62,1606
	GIT_OBJ_ANY 68,1713
	GIT_OBJ_BAD 69,1776
	GIT_OBJ__EXT1 70,1823
	GIT_OBJ_COMMIT 71,1877
	GIT_OBJ_TREE 72,1924
	GIT_OBJ_BLOB 73,1987
	GIT_OBJ_TAG 74,2039
	GIT_OBJ__EXT2 75,2091
	GIT_OBJ_OFS_DELTA 76,2145
	GIT_OBJ_REF_DELTA 77,2214
} git_otype;78,2283
typedef struct git_odb git_odb;81,2336
typedef struct git_odb_backend git_odb_backend;84,2403
typedef struct git_odb_object git_odb_object;87,2487
typedef struct git_odb_stream git_odb_stream;90,2577
typedef struct git_repository git_repository;96,2718
typedef struct git_object git_object;99,2823
typedef struct git_revwalk git_revwalk;102,2937
typedef struct git_tag git_tag;105,3024
typedef struct git_blob git_blob;108,3107
typedef struct git_commit git_commit;111,3191
typedef struct git_tree_entry git_tree_entry;114,3297
typedef struct git_tree git_tree;117,3384
typedef struct git_treebuilder git_treebuilder;120,3458
typedef struct git_index git_index;123,3554
typedef struct git_config git_config;126,3645
typedef struct git_config_file git_config_file;129,3732
typedef struct git_reflog_entry git_reflog_entry;132,3828
typedef struct git_reflog git_reflog;135,3920
typedef struct git_note git_note;138,3995
typedef struct git_time 141,4057
} git_time;144,4183
typedef struct git_signature 147,4259
} git_signature;151,4428
typedef struct git_reference git_reference;154,4494
	GIT_REF_INVALID 158,4594
	GIT_REF_OID 159,4641
	GIT_REF_SYMBOLIC 160,4707
	GIT_REF_PACKED 161,4783
	GIT_REF_HAS_PEEL 162,4804
	GIT_REF_LISTALL 163,4827
	GIT_REF_LISTALL = GIT_REF_OID|GIT_REF_OID163,4827
	GIT_REF_LISTALL = GIT_REF_OID|GIT_REF_SYMBOLIC|GIT_REF_SYMBOLIC163,4827
	GIT_REF_LISTALL = GIT_REF_OID|GIT_REF_SYMBOLIC|GIT_REF_PACKED,GIT_REF_PACKED163,4827
} git_ref_t;164,4891
	GIT_BRANCH_LOCAL 168,4957
	GIT_BRANCH_REMOTE 169,4980
} git_branch_t;170,5004
	GIT_RESET_SOFT 174,5069
	GIT_RESET_MIXED 175,5090
} git_reset_type;176,5112
	GIT_FILEMODE_NEW	180,5193
	GIT_FILEMODE_TREE	181,5226
	GIT_FILEMODE_BLOB	182,5260
	GIT_FILEMODE_BLOB_EXECUTABLE	183,5294
	GIT_FILEMODE_LINK	184,5336
	GIT_FILEMODE_COMMIT	185,5370
} git_filemode_t;186,5406
typedef struct git_refspec git_refspec;188,5425
typedef struct git_remote git_remote;189,5465
typedef struct git_remote_head git_remote_head;191,5504
typedef struct git_remote_callbacks git_remote_callbacks;192,5552

include/git2/version.h,175
#define INCLUDE_git_version_h__8,235
#define LIBGIT2_VERSION 10,268
#define LIBGIT2_VER_MAJOR 11,301
#define LIBGIT2_VER_MINOR 12,329
#define LIBGIT2_VER_REVISION 13,358

include/git2/windows.h,58
#define INCLUDE_git_windows_h__8,235
GIT_EXTERN(41,1045

include/git2.h,34
#define INCLUDE_git_git_h__9,232

src/amiga/map.c,40
int p_mmap(15,304
int p_munmap(42,885

src/attr.c,1061
GIT__USE_STRMAP;7,107
const char *git_attr__true git_attr__true9,125
const char *git_attr__false git_attr__false10,177
const char *git_attr__unset git_attr__unset11,230
git_attr_t git_attr_value(13,284
int git_attr_get(35,667
} attr_get_many_info;84,1660
int git_attr_get_many(86,1683
int git_attr_foreach(151,3108
int git_attr_add_macro(207,4330
bool git_attr_cache__is_cached(241,5061
static int load_attr_file(261,5594
static int load_attr_blob_from_index(294,6288
static int load_attr_from_cache(321,6879
int git_attr_cache__internal_file(348,7445
int git_attr_cache__push_file(372,8015
#define push_attr_file(469,10275
} attr_walk_up_info;478,10524
int git_attr_cache__decide_sources(480,10546
static int push_one_attr(507,11160
static int collect_attr_files(524,11620
static char *try_global_default(try_global_default593,13281
int git_attr_cache__init(606,13511
void git_attr_cache_flush(655,14816
int git_attr_cache__insert_macro(690,15374
git_attr_rule *git_attr_cache__lookup_macro(git_attr_cache__lookup_macro703,15738

src/attr.h,268
#define INCLUDE_attr_h__8,228
#define GIT_ATTR_CONFIG 13,298
#define GIT_ATTR_CONFIG_DEFAULT 14,346
#define GIT_IGNORE_CONFIG 15,403
#define GIT_IGNORE_CONFIG_DEFAULT 16,449
} git_attr_cache;25,824
typedef int (*git_attr_file_parser)git_attr_file_parser27,843

src/attr_file.c,809
int git_attr_file__new(11,259
int git_attr_file__parse_buffer(55,1121
int git_attr_file__new_and_load(114,2685
void git_attr_file__clear_rules(138,3154
void git_attr_file__free(149,3357
uint32_t git_attr_file__name_hash(165,3596
int git_attr_file__lookup_one(176,3767
bool git_attr_fnmatch__match(205,4289
bool git_attr_rule__match(224,4777
git_attr_assignment *git_attr_rule__lookup_assignment(git_attr_rule__lookup_assignment237,5014
int git_attr_path__init(250,5327
void git_attr_path__free(287,6151
int git_attr_fnmatch__parse(332,7884
static int sort_by_hash_and_name(428,10357
static void git_attr_assignment__free(441,10639
static int merge_assignments(451,10901
int git_attr_assignment__parse(461,11175
static void git_attr_rule__clear(568,13997
void git_attr_rule__free(587,14444

src/attr_file.h,779
#define INCLUDE_attr_file_h__8,233
#define GIT_ATTR_FILE	15,346
#define GIT_ATTR_FILE_INREPO	16,387
#define GIT_ATTR_FILE_SYSTEM	17,434
#define GIT_ATTR_FNMATCH_NEGATIVE	19,480
#define GIT_ATTR_FNMATCH_DIRECTORY	20,524
#define GIT_ATTR_FNMATCH_FULLPATH	21,569
#define GIT_ATTR_FNMATCH_MACRO	22,613
#define GIT_ATTR_FNMATCH_IGNORE	23,655
#define GIT_ATTR_FNMATCH_HASWILD	24,698
#define GIT_ATTR_FNMATCH_ALLOWSPACE	25,741
} git_attr_fnmatch;35,966
} git_attr_rule;40,1090
} git_attr_name;46,1190
} git_attr_assignment;53,1321
} git_attr_file_stat_sig;59,1420
} git_attr_file;70,1694
} git_attr_path;77,1811
	GIT_ATTR_FILE_FROM_FILE 80,1844
	GIT_ATTR_FILE_FROM_INDEX 81,1874
} git_attr_file_source;82,1904
#define git_attr_file__foreach_matching_rule(108,2566

src/blob.c,521
const void *git_blob_rawcontent(git_blob_rawcontent16,343
size_t git_blob_rawsize(22,447
int git_blob__getbuf(28,542
void git_blob__free(34,688
int git_blob__parse(40,787
int git_blob_create_frombuffer(48,959
static int write_file_stream(65,1408
static int write_file_filtered(102,2194
static int write_symlink(129,2834
static int blob_create_internal(151,3380
int git_blob_create_fromfile(209,5148
int git_blob_create_fromdisk(229,5648
#define BUFFER_SIZE 245,6039
int git_blob_create_fromchunks(247,6065

src/blob.h,55
#define INCLUDE_blob_h__8,228
struct git_blob 15,340

src/branch.c,444
static int retrieve_branch_reference(16,329
static int create_error_invalid(47,1039
int git_branch_create(53,1168
int git_branch_delete(109,2456
} branch_foreach_filter;152,3619
static int branch_foreach_cb(154,3645
int git_branch_foreach(169,4240
static int not_a_local_branch(188,4659
int git_branch_move(194,4821
int git_branch_lookup(218,5339
static int retrieve_tracking_configuration(229,5612
int git_branch_tracking(248,6093

src/bswap.h,406
GIT_INLINE(14,321
#undef bswap3222,505
GIT_INLINE(24,521
#undef bswap1630,635
#define bswap32(34,695
#define bswap16(43,894
#define bswap32(54,1146
#define bswap16(63,1346
#define bswap32(76,1637
#define bswap16(77,1675
#undef ntohl83,1739
#undef htonl84,1752
#define ntohl(85,1765
#define htonl(86,1793
#undef ntohs92,1846
#undef htons93,1859
#define ntohs(94,1872
#define htons(95,1900

src/buffer.c,931
char git_buf__initbuf[git_buf__initbuf15,423
char git_buf__oom[git_buf__oom17,450
#define ENSURE_SIZE(19,473
void git_buf_init(24,568
int git_buf_grow(34,744
int git_buf_try_grow(42,908
void git_buf_free(84,1742
void git_buf_clear(94,1909
int git_buf_set(101,2006
int git_buf_sets(116,2292
int git_buf_putc(121,2411
int git_buf_put(129,2557
int git_buf_puts(138,2764
int git_buf_puts_escaped(144,2887
int git_buf_vprintf(189,3890
int git_buf_printf(223,4448
void git_buf_copy_cstr(235,4620
void git_buf_consume(253,4954
void git_buf_truncate(263,5207
void git_buf_rtruncate_at_char(271,5336
void git_buf_swap(277,5504
char *git_buf_detach(git_buf_detach284,5611
void git_buf_attach(296,5780
int git_buf_join_n(312,6115
int git_buf_join(396,8132
void git_buf_rtrim(441,9241
int git_buf_cmp(453,9409
int git_buf_common_prefix(460,9618
bool git_buf_is_binary(490,10215
void git_buf_unescape(508,10558

src/buffer.h,264
#define INCLUDE_buffer_h__8,230
} git_buf;16,349
#define GIT_BUF_INIT 21,422
GIT_INLINE(65,1923
int git_buf_printf(83,2679
GIT_INLINE(109,3681
GIT_INLINE(114,3801
GIT_INLINE(119,3882
#define git_buf_PUTS(126,4031
GIT_INLINE(128,4102
GIT_INLINE(136,4317

src/cache.c,153
int git_cache_init(16,354
void git_cache_free(35,791
void *git_cache_get(git_cache_get47,1015
void *git_cache_try_store(git_cache_try_store68,1430

src/cache.h,224
#define INCLUDE_cache_h__8,229
#define GIT_DEFAULT_CACHE_SIZE 16,353
typedef void (*git_cached_obj_freeptr)git_cached_obj_freeptr18,389
} git_cached_obj;23,491
} git_cache;32,648
GIT_INLINE(40,904
GIT_INLINE(46,1022

src/cc-compat.h,435
#define INCLUDE_compat_h__8,230
#		define GIT_FLEX_ARRAY 15,419
#			define GIT_FLEX_ARRAY 18,503
#			define GIT_FLEX_ARRAY 20,549
#		define GIT_FLEX_ARRAY 26,705
#	define GIT_TYPEOF(31,764
#	define GIT_TYPEOF(33,809
#define GIT_UNUSED(36,840
#	define PRIuZ 40,986
#	define PRIuZ 42,1012
	typedef unsigned char bool;54,1306
#	define true 55,1335
#	define false 56,1351
#		define va_copy(63,1438
#		define va_copy(65,1493

src/checkout.c,251
typedef struct tree_walk_data28,539
} tree_walk_data;35,679
static int blob_contents_to_link(38,699
static int blob_contents_to_file(63,1316
static int checkout_walker(110,2630
int git_checkout_head(153,3653
int git_checkout_reference(212,5310

src/clone.c,374
struct HeadInfo 31,587
static int create_tracking_branch(37,679
static int reference_matches_remote_head(75,1825
static int update_head_to_new_branch(91,2316
static int update_head_to_remote(110,2840
static int setup_remotes_and_fetch(147,3933
static bool path_is_okay(185,4977
static int clone_internal(198,5290
int git_clone_bare(233,6198
int git_clone(243,6454

src/commit.c,457
static void clear_parents(21,435
void git_commit__free(33,683
const git_oid *git_commit_id(git_commit_id46,960
int git_commit_create_v(51,1049
int git_commit_create(84,1764
int git_commit__parse_buffer(139,3129
int git_commit__parse(210,4933
#define GIT_COMMIT_GETTER(216,5089
GIT_COMMIT_GETTER(223,5240
const git_oid *git_commit_parent_oid(git_commit_parent_oid238,5955
int git_commit_parent(245,6100
int git_commit_nth_gen_ancestor(259,6462

src/commit.h,59
#define INCLUDE_commit_h__8,230
struct git_commit 17,365

src/common.h,196
#define INCLUDE_common_h__8,230
# define snprintf 35,694
#define GITERR_CHECK_ALLOC(52,924
typedef struct git_transport git_transport;62,1239
typedef struct gitno_buffer gitno_buffer;63,1283

src/compat/fnmatch.c,145
#define EOS	19,412
#define RANGE_MATCH	21,431
#define RANGE_NOMATCH	22,454
#define RANGE_ERROR	23,479
p_fnmatch(28,568
rangematch(128,3328

src/compat/fnmatch.h,303
#define INCLUDE_fnmatch__compat_h__8,239
#define FNM_NOMATCH	12,297
#define FNM_NOSYS	13,341
#define FNM_NOESCAPE	15,403
#define FNM_PATHNAME	16,465
#define FNM_PERIOD	17,531
#define FNM_LEADING_DIR 18,597
#define FNM_CASEFOLD	19,662
#define FNM_IGNORECASE	21,722
#define FNM_FILE_NAME	22,758

src/config.c,1055
} file_internal;22,430
static void config_free(24,448
void git_config_free(41,768
static int config_backend_cmp(49,877
int git_config_new(57,1098
int git_config_add_file_ondisk(76,1413
int git_config_open_ondisk(95,1810
int git_config_add_file(108,2029
int git_config_foreach(139,2571
int git_config_foreach_match(145,2732
int git_config_delete(165,3138
int git_config_set_int64(182,3425
int git_config_set_int32(189,3678
int git_config_set_bool(194,3815
int git_config_set_string(199,3958
static int parse_int64(212,4230
static int parse_int32(251,4784
int git_config_lookup_map_value(270,5061
int git_config_get_mapped(311,5752
int git_config_get_int64(333,6159
int git_config_get_int32(350,6485
int git_config_get_bool(367,6817
int git_config_get_string(388,7214
int git_config_get_multivar(407,7586
int git_config_set_multivar(432,8229
int git_config_find_global_r(450,8665
int git_config_find_global(460,8899
int git_config_find_system_r(482,9345
int git_config_find_system(487,9465
int git_config_open_default(509,9911

src/config.h,258
#define INCLUDE_config_h__8,230
#define GIT_CONFIG_FILENAME 15,346
#define GIT_CONFIG_FILENAME_ALT 16,387
#define GIT_CONFIG_FILENAME_INREPO 17,440
#define GIT_CONFIG_FILENAME_SYSTEM 18,484
#define GIT_CONFIG_FILE_MODE 19,531
struct git_config 21,566

src/config_cache.c,282
struct map_data 16,355
static git_cvar_map _cvar_map_eol[_cvar_map_eol31,782
static git_cvar_map _cvar_map_autocrlf[_cvar_map_autocrlf48,1496
static struct map_data _cvar_maps[_cvar_maps54,1684
int git_repository__cvar(59,1896
void git_repository__cvar_cache_clear(87,2483

src/config_file.c,1758
GIT__USE_STRMAP;21,438
typedef struct cvar_t 23,456
} cvar_t;27,576
} cvar_t_list;32,648
#define CVAR_LIST_HEAD(34,664
#define CVAR_LIST_TAIL(36,709
#define CVAR_LIST_NEXT(38,754
#define CVAR_LIST_EMPTY(40,797
#define CVAR_LIST_APPEND(42,851
#define CVAR_LIST_REMOVE_HEAD(51,1083
#define CVAR_LIST_REMOVE_AFTER(55,1200
#define CVAR_LIST_FOREACH(59,1315
#define CVAR_LIST_FOREACH_SAFE(67,1491
} diskfile_backend;85,1823
static void set_parse_error(92,2132
static void cvar_free(98,2376
static int normalize_name(109,2585
static void free_vars(136,3089
static int config_open(153,3359
static void backend_free(179,3899
static int file_foreach(191,4131
static int config_set(237,5043
static int config_get(319,6847
static int config_get_multivar(340,7330
static int config_set_multivar(403,8672
static int config_delete(475,10106
int git_config_file__ondisk(509,10831
static int cfg_getchar_raw(535,11527
#define SKIP_WHITESPACE 561,11916
#define SKIP_COMMENTS 562,11949
static int cfg_getchar(564,11981
static int cfg_peek(587,12502
static char *cfg_readline(cfg_readline611,12984
static void cfg_consume_line(657,13833
GIT_INLINE(678,14235
static int parse_section_header_ext(683,14310
static int parse_section_header(753,15802
static int skip_bom(820,17088
static int strip_comments(876,18397
static int config_parse(900,18821
static int write_section(984,20753
static int config_write(1017,21484
static const char *escapes escapes1204,26997
static const char *escaped escaped1205,27037
static char *escape_value(escape_value1208,27131
static char *fixup_line(fixup_line1238,27625
static int is_multiline_var(1276,28341
static int parse_multiline_variable(1282,28471
static int parse_variable(1334,29905

src/config_file.h,172
#define INCLUDE_config_file_h__8,230
GIT_INLINE(12,289
GIT_INLINE(17,377
GIT_INLINE(22,459
GIT_INLINE(28,601
GIT_INLINE(34,746
GIT_INLINE(40,861
GIT_INLINE(48,1046

src/crlf.c,560
struct crlf_attrs 16,332
struct crlf_filter 21,384
static int check_crlf(26,450
static int check_eol(46,805
static int crlf_input_action(60,1042
static int crlf_load_attributes(74,1301
#define NUM_CONV_ATTRS 76,1398
static int drop_crlf(106,2007
static int crlf_apply_to_odb(135,2794
static int convert_line_endings(187,3950
static const char *line_ending(line_ending204,4392
static int crlf_apply_to_workdir(244,5036
static int find_and_add_filter(266,5650
int git_filter_add__crlf_to_odb(308,6794
int git_filter_add__crlf_to_workdir(313,6962

src/date.c,1489
	DATE_NORMAL 21,271
	DATE_RELATIVE,22,289
	DATE_SHORT,23,305
	DATE_LOCAL,24,318
	DATE_ISO8601,25,331
	DATE_RFC2822,26,346
	DATE_RAW27,361
} date_mode;28,371
static git_time_t tm_to_time_t(33,466
static const char *month_names[month_names54,1078
static const char *weekday_names[weekday_names59,1242
} timezone_names[timezone_names75,1609
static size_t match_string(124,3738
static int skip_alpha(140,4008
static size_t match_alpha(152,4165
static int is_date(202,5216
static size_t match_multi_number(244,6197
static int nodate(309,7730
static size_t match_digit(322,7920
static size_t match_tz(416,9871
static int match_object_header_date(457,10946
static int parse_date_basic(482,11650
static git_time_t update_tm(549,13018
static void date_now(568,13380
static void date_yesterday(574,13491
static void date_time(580,13615
static void date_midnight(589,13796
static void date_noon(595,13912
static void date_tea(601,14025
static void date_pm(607,14137
static void date_am(622,14371
static void date_never(637,14600
static const struct special 645,14748
} special[special648,14843
static const char *number_name[number_name660,15073
static const struct typelen 665,15203
} typelen[typelen668,15265
static const char *approxidate_alpha(approxidate_alpha677,15404
static const char *approxidate_digit(approxidate_digit775,17209
static void pending_number(803,17838
static git_time_t approxidate_str(825,18346
int git__date_parse(862,19106

src/delta-apply.c,55
static int hdr_sz(18,515
int git__delta_apply(39,836

src/delta-apply.h,38
#define INCLUDE_delta_apply_h__8,235

src/diff.c,1056
static char *diff_prefix_from_pathspec(diff_prefix_from_pathspec15,346
static bool diff_pathspec_is_interesting(41,909
static bool diff_path_matches_pathspec(56,1239
static git_diff_delta *diff_delta__alloc(diff_delta__alloc85,2029
static git_diff_delta *diff_delta__dup(diff_delta__dup114,2703
static git_diff_delta *diff_delta__merge_like_cgit(diff_delta__merge_like_cgit142,3316
static int diff_delta__from_one(193,4888
static int diff_delta__from_two(238,6027
static char *diff_strdup_prefix(diff_strdup_prefix282,7145
static int diff_delta__cmp(293,7425
static int config_bool(300,7641
static git_diff_list *git_diff_list_alloc(git_diff_list_alloc310,7819
void git_diff_list_free(394,10325
static int oid_for_workdir_item(419,10798
#define MODE_BITS_MASK 452,11536
static int maybe_modified(454,11568
static int diff_from_iterators(560,15001
int git_diff_tree_to_tree(687,19015
int git_diff_index_to_tree(708,19593
int git_diff_workdir_to_index(733,20158
int git_diff_workdir_to_tree(758,20699
int git_diff_merge(783,21280

src/diff.h,316
#define INCLUDE_diff_h__8,228
#define DIFF_OLD_PREFIX_DEFAULT 17,378
#define DIFF_NEW_PREFIX_DEFAULT 18,415
	GIT_DIFFCAPS_HAS_SYMLINKS 21,460
	GIT_DIFFCAPS_ASSUME_UNCHANGED 22,531
	GIT_DIFFCAPS_TRUST_MODE_BITS 23,590
	GIT_DIFFCAPS_TRUST_CTIME 24,652
	GIT_DIFFCAPS_USE_DEV 25,715
struct git_diff_list 28,780

src/diff_output.c,944
} diff_output_info;28,619
static int read_next_int(30,640
static int diff_output_cb(44,984
#define BINARY_DIFF_FLAGS 104,2784
static int update_file_is_binary_by_attr(106,2859
static void update_delta_is_binary(121,3237
static int file_is_binary_by_attr(132,3640
static int file_is_binary_by_content(174,4822
static void setup_xdiff_options(208,5608
static int get_blob_content(230,6237
static int get_workdir_content(247,6542
static void release_content(282,7364
static void fill_map_from_mmfile(299,7775
int git_diff_foreach(309,7952
} diff_print_info;477,12436
static char pick_suffix(479,12456
static int print_compact(490,12663
int git_diff_print_compact(539,14208
static int print_oid_range(561,14566
static int print_patch_file(591,15556
static int print_patch_hunk(650,17040
static int print_patch_line(670,17446
int git_diff_print_patch(699,18172
int git_diff_entrycount(721,18557
int git_diff_blobs(740,18866

src/errors.c,263
static git_error g_git_oom_error 17,419
static void set_error(22,495
void giterr_set_oom(34,714
void giterr_set(39,789
void giterr_set_str(95,1908
void giterr_set_regex(103,2058
void giterr_clear(110,2248
const git_error *giterr_last(giterr_last120,2364

src/fetch.c,339
struct filter_payload 22,461
static int filter_ref__cb(29,568
static int filter_wants(54,1217
static int recv_pkt(77,1843
static int store_common(109,2422
int git_fetch_negotiate(136,2918
int git_fetch_download_pack(281,6233
static int no_sideband(295,6551
int git_fetch__download_pack(318,7064
int git_fetch_setup_walk(388,8677

src/fetch.h,32
#define INCLUDE_fetch_h__8,229

src/filebuf.c,687
#define GIT_LOCK_FILE_MODE 13,287
static const size_t WRITE_BUFFER_SIZE 15,320
enum buferr_t 17,373
	BUFERR_OK 18,389
	BUFERR_WRITE,19,405
	BUFERR_ZLIB,20,420
	BUFERR_MEM21,434
#define ENSURE_BUF_OK(24,450
static int verify_last_error(26,529
static int lock_file(47,881
void git_filebuf_cleanup(98,2172
GIT_INLINE(127,2806
int git_filebuf_flush(134,2957
static int write_normal(139,3031
static int write_deflate(154,3310
int git_filebuf_open(191,4031
int git_filebuf_hash(287,6500
int git_filebuf_commit_at(303,6772
int git_filebuf_commit(312,7011
GIT_INLINE(352,7860
int git_filebuf_write(358,8015
int git_filebuf_reserve(385,8524
int git_filebuf_printf(409,8925

src/filebuf.h,522
#define INCLUDE_filebuf_h__8,231
#	define GIT_FILEBUF_THREADS15,337
#define GIT_FILEBUF_HASH_CONTENTS	18,374
#define GIT_FILEBUF_APPEND	19,418
#define GIT_FILEBUF_FORCE	20,457
#define GIT_FILEBUF_TEMPORARY	21,495
#define GIT_FILEBUF_DO_NOT_BUFFER	22,536
#define GIT_FILEBUF_DEFLATE_SHIFT	23,580
#define GIT_FILELOCK_EXTENSION 25,620
#define GIT_FILELOCK_EXTLENGTH 26,661
struct git_filebuf 28,695
typedef struct git_filebuf git_filebuf;49,1030
#define GIT_FILEBUF_INIT 51,1071
int git_filebuf_printf(77,2199

src/fileops.c,1072
int git_futils_mkpath2file(11,264
int git_futils_mktmp(17,428
int git_futils_creat_withpath(36,780
int git_futils_creat_locked(52,1078
int git_futils_creat_locked_withpath(74,1513
int git_futils_open_ro(82,1721
git_off_t git_futils_filesize(93,1951
mode_t git_futils_canonical_mode(105,2138
int git_futils_readbuffer_updated(119,2434
int git_futils_readbuffer(183,3569
int git_futils_mv_withpath(188,3694
int git_futils_mmap_ro(201,3969
int git_futils_mmap_ro_file(206,4121
void git_futils_mmap_free(226,4508
int git_futils_mkdir(231,4569
int git_futils_mkdir_r(314,6450
static int _rmdir_recurs_foreach(319,6593
int git_futils_rmdir_r(359,7671
struct win32_path 372,7947
static int win32_expand_path(377,8008
static int win32_find_file(383,8194
int git_futils_find_system_file(429,9239
int git_futils_find_global_file(462,10016
int git_futils_fake_symlink(503,10955
static int cp_by_fd(514,11196
int git_futils_cp(539,11741
static int cp_link(557,12158
} cp_r_info;590,12876
static int _cp_r_callback(592,12890
int git_futils_cp_r(671,14990

src/fileops.h,679
#define INCLUDE_fileops_h__8,231
	GIT_MKDIR_EXCL 71,2167
	GIT_MKDIR_PATH 72,2188
	GIT_MKDIR_CHMOD 73,2209
	GIT_MKDIR_CHMOD_PATH 74,2231
	GIT_MKDIR_SKIP_LAST 75,2258
} git_futils_mkdir_flags;76,2284
	GIT_DIRREMOVAL_EMPTY_HIERARCHY 100,3071
	GIT_DIRREMOVAL_FILES_AND_DIRS 101,3108
	GIT_DIRREMOVAL_ONLY_EMPTY_DIRS 102,3144
} git_directory_removal_type;103,3181
	GIT_CPDIR_CREATE_EMPTY_DIRS 146,4455
	GIT_CPDIR_COPY_SYMLINKS 147,4489
	GIT_CPDIR_COPY_DOTFILES 148,4519
	GIT_CPDIR_OVERWRITE 149,4549
	GIT_CPDIR_CHMOD 150,4575
} git_futils_cpdir_flags;151,4597
#define GIT_MODE_PERMS_MASK	181,5402
#define GIT_CANONICAL_PERMS(182,5437
#define GIT_MODE_TYPE(183,5503

src/filter.c,246
void git_text_gather_stats(17,419
int git_text_is_binary(70,1421
int git_filters_load(89,1928
void git_filters_free(107,2369
int git_filters_apply(122,2611
static int unfiltered_blob_contents(168,3683
int git_filter_blob_contents(182,3973

src/filter.h,360
#define INCLUDE_filter_h__8,230
typedef struct git_filter 15,350
} git_filter;18,499
	GIT_FILTER_TO_WORKTREE,21,529
	GIT_FILTER_TO_ODB22,554
} git_filter_mode;23,573
	GIT_CRLF_GUESS 26,608
	GIT_CRLF_BINARY 27,630
	GIT_CRLF_TEXT,28,652
	GIT_CRLF_INPUT,29,668
	GIT_CRLF_CRLF,30,685
	GIT_CRLF_AUTO,31,701
} git_crlf_t;32,717
} git_text_stats;40,895

src/global.c,627
git_mutex git__mwindow_mutex;13,298
static DWORD _tls_index;43,1282
static int _tls_init 44,1307
void git_threads_init(46,1334
void git_threads_shutdown(56,1474
git_global_st *git__global_state(git__global_state63,1587
static pthread_key_t _tls_key;81,1916
static int _tls_init 82,1947
static void cb__free_status(84,1974
void git_threads_init(89,2033
void git_threads_shutdown(98,2159
git_global_st *git__global_state(git__global_state104,2243
static git_global_st __state;122,2536
void git_threads_init(124,2567
void git_threads_shutdown(129,2613
git_global_st *git__global_state(git__global_state134,2662

src/global.h,84
#define INCLUDE_global_h__8,230
} git_global_st;15,341
#define GIT_GLOBAL 21,438

src/hash.c,252
struct git_hash_ctx 17,321
git_hash_ctx *git_hash_new_ctx(git_hash_new_ctx21,359
void git_hash_free_ctx(33,512
void git_hash_init(38,576
void git_hash_update(44,654
void git_hash_final(50,777
void git_hash_buf(56,880
void git_hash_vec(65,1031

src/hash.h,102
#define INCLUDE_hash_h__8,228
typedef struct git_hash_ctx git_hash_ctx;12,277
} git_buf_vec;17,363

src/ignore.c,585
#define GIT_IGNORE_INTERNAL	5,64
#define GIT_IGNORE_FILE_INREPO	6,113
#define GIT_IGNORE_FILE	7,159
static int parse_ignore_file(9,199
#define push_ignore_file(61,1370
static int push_one_ignore(64,1493
int git_ignore__for_path(70,1672
int git_ignore__push_dir(129,3159
int git_ignore__pop_dir(138,3389
void git_ignore__free(149,3676
static bool ignore_lookup_in_rules(157,3902
int git_ignore__lookup(173,4226
static int get_internal_ignores(208,5040
int git_ignore_add_rule(218,5266
int git_ignore_clear_internal_rules(231,5513
int git_ignore_path_is_ignored(243,5740

src/ignore.h,55
#define INCLUDE_ignore_h__8,230
} git_ignores;26,725

src/index.c,2711
#define entry_size(21,441
#define short_entry_size(22,512
#define long_entry_size(23,578
#define minimal_entry_size 25,643
static const size_t INDEX_FOOTER_SIZE 27,708
static const size_t INDEX_HEADER_SIZE 28,763
static const unsigned int INDEX_VERSION_NUMBER 30,808
static const unsigned int INDEX_VERSION_NUMBER_EXT 31,860
static const unsigned int INDEX_HEADER_SIG 33,917
static const char INDEX_EXT_TREECACHE_SIG[INDEX_EXT_TREECACHE_SIG34,974
static const char INDEX_EXT_UNMERGED_SIG[INDEX_EXT_UNMERGED_SIG35,1042
#define INDEX_OWNER(37,1110
struct index_header 39,1182
struct index_extension 45,1271
struct entry_time 50,1346
struct entry_short 55,1412
struct entry_long 69,1655
static int index_srch(95,2444
static int index_cmp(102,2595
static int unmerged_srch(110,2772
static int unmerged_cmp(117,2935
static unsigned int index_create_mode(125,3129
static unsigned int index_merge_mode(136,3372
int git_index_open(150,3765
static void index_free(174,4341
void git_index_free(193,4721
void git_index_clear(201,4833
int git_index_set_caps(229,5386
unsigned int git_index_caps(261,6269
int git_index_read(268,6509
int git_index_write(302,7213
unsigned int git_index_entrycount(330,7798
unsigned int git_index_entrycount_unmerged(336,7916
git_index_entry *git_index_get(git_index_get342,8044
void git_index__init_entry_from_stat(348,8187
static int index_entry_init(362,8663
static git_index_entry *index_entry_dup(index_entry_dup413,9986
static void index_entry_free(431,10363
static int index_insert(439,10488
static int index_add(479,11618
int git_index_add(495,11981
int git_index_append(500,12093
static int index_add2(505,12208
int git_index_add2(524,12593
int git_index_append2(529,12716
int git_index_remove(534,12842
int git_index_find(553,13233
unsigned int git_index__prefix_position(558,13357
void git_index_uniq(567,13535
const git_index_entry_unmerged *git_index_get_unmerged_bypath(git_index_get_unmerged_bypath572,13613
const git_index_entry_unmerged *git_index_get_unmerged_byindex(git_index_get_unmerged_byindex587,13939
static int index_error_invalid(594,14098
static int read_unmerged(600,14233
static size_t read_entry(664,15673
static int read_header(726,17436
static size_t read_extension(743,17956
static int parse_index(780,19104
#define seek_forward(786,19283
#undef seek_forward853,21303
static int is_index_extended(861,21456
static int write_disk_entry(879,21812
static int write_entries(939,23488
static int write_index(953,23762
int git_index_entry_stage(984,24555
typedef struct read_tree_data 989,24692
} read_tree_data;992,24759
static int read_tree_cb(994,24778
int git_index_read_tree(1024,25396

src/index.h,124
#define INCLUDE_index_h__8,229
#define GIT_INDEX_FILE 17,389
#define GIT_INDEX_FILE_MODE 18,420
struct git_index 20,454

src/indexer.c,855
#define UINT31_MAX 23,458
struct entry 25,491
struct git_indexer 32,580
struct git_indexer_stream 41,736
struct delta_info 55,1012
const git_oid *git_indexer_hash(git_indexer_hash59,1058
const git_oid *git_indexer_stream_hash(git_indexer_stream_hash64,1133
static int open_pack(69,1222
static int parse_header(103,1906
static int objects_cmp(126,2441
static int cache_cmp(134,2615
int git_indexer_stream_new(142,2791
static int store_delta(173,3486
static int hash_and_save(213,4400
int git_indexer_stream_add(277,5881
static int index_path_stream(406,9279
static int resolve_deltas(428,9864
int git_indexer_stream_finalize(451,10355
void git_indexer_stream_free(583,14054
int git_indexer_new(608,14583
static int index_path(653,15506
int git_indexer_write(675,16076
int git_indexer_run(804,19276
void git_indexer_free(906,21577

src/iterator.c,2395
#define ITERATOR_BASE_INIT(14,313
static int empty_iterator__no_item(31,1016
static int empty_iterator__at_end(39,1155
static int empty_iterator__noop(45,1244
static int empty_iterator__seek(51,1331
static void empty_iterator__free(58,1460
int git_iterator_for_nothing(63,1537
typedef struct tree_iterator_frame tree_iterator_frame;82,1958
struct tree_iterator_frame 83,2014
} tree_iterator;97,2280
static const git_tree_entry *tree_iterator__tree_entry(tree_iterator__tree_entry99,2298
static char *tree_iterator__current_filename(tree_iterator__current_filename105,2475
static void tree_iterator__pop_frame(117,2744
static int tree_iterator__to_end(126,2967
static int tree_iterator__current(137,3182
static int tree_iterator__at_end(165,3764
static tree_iterator_frame *tree_iterator__alloc_frame(tree_iterator__alloc_frame170,3890
static int tree_iterator__expand_tree(187,4213
static int tree_iterator__advance(230,5269
static int tree_iterator__seek(264,5973
static void tree_iterator__free(274,6228
static int tree_iterator__reset(282,6414
int git_iterator_for_tree_range(298,6756
} index_iterator;329,7333
static int index_iterator__current(331,7352
static int index_iterator__at_end(351,7753
static int index_iterator__advance(357,7916
static int index_iterator__seek(368,8172
static int index_iterator__reset(376,8337
static void index_iterator__free(383,8470
int git_iterator_for_index_range(390,8621
typedef struct workdir_iterator_frame workdir_iterator_frame;412,9025
struct workdir_iterator_frame 413,9087
} workdir_iterator;429,9398
static workdir_iterator_frame *workdir_iterator__alloc_frame(workdir_iterator__alloc_frame431,9419
static void workdir_iterator__free_frame(443,9718
static int workdir_iterator__entry_cmp(456,10013
static int workdir_iterator__expand_dir(462,10189
static int workdir_iterator__current(498,11186
static int workdir_iterator__at_end(506,11398
static int workdir_iterator__advance(511,11517
static int workdir_iterator__seek(555,12501
static int workdir_iterator__reset(565,12773
static void workdir_iterator__free(579,13132
static int workdir_iterator__update_entry(593,13437
int git_iterator_for_workdir_range(651,15100
int git_iterator_current_tree_entry(697,15922
int git_iterator_current_is_ignored(705,16141
int git_iterator_advance_into_directory(711,16295
int git_iterator_cmp(729,16783

src/iterator.h,457
#define INCLUDE_iterator_h__8,232
typedef struct git_iterator git_iterator;13,307
	GIT_ITERATOR_EMPTY 16,365
	GIT_ITERATOR_TREE 17,390
	GIT_ITERATOR_INDEX 18,414
	GIT_ITERATOR_WORKDIR 19,439
} git_iterator_type_t;20,465
struct git_iterator 22,489
GIT_INLINE(40,1028
GIT_INLINE(50,1323
GIT_INLINE(60,1600
GIT_INLINE(75,2142
GIT_INLINE(81,2273
GIT_INLINE(86,2362
GIT_INLINE(92,2493
GIT_INLINE(98,2608
GIT_INLINE(103,2695
GIT_INLINE(118,2906

src/khash.h,2227
#define __AC_KHASH_H105,2799
#define AC_VERSION_KHASH_H 113,2871
typedef unsigned int khint32_t;122,3036
typedef unsigned long khint32_t;124,3099
typedef unsigned long khint64_t;128,3168
typedef unsigned long long khint64_t;130,3207
#define kh_inline 134,3269
#define kh_inline 136,3302
typedef khint32_t khint_t;139,3335
typedef khint_t khiter_t;140,3362
#define __ac_isempty(142,3389
#define __ac_isdel(143,3451
#define __ac_iseither(144,3511
#define __ac_set_isdel_false(145,3574
#define __ac_set_isempty_false(146,3648
#define __ac_set_isboth_false(147,3724
#define __ac_set_isdel_true(148,3799
#define __ac_inc(151,3890
#define __ac_inc(153,3921
#define __ac_fsize(156,3982
#define kroundup32(159,4047
#define kcalloc(163,4174
#define kmalloc(166,4230
#define krealloc(169,4283
#define kfree(172,4339
static const double __ac_HASH_UPPER 175,4372
#define __KHASH_TYPE(177,4417
#define __KHASH_PROTOTYPES(185,4617
#define __KHASH_IMPL(194,5116
#define KHASH_DECLARE(341,11854
#define KHASH_INIT2(345,12002
#define KHASH_INIT(349,12225
#define kh_int_hash_func(359,12578
#define kh_int_hash_equal(363,12687
#define kh_int64_hash_func(369,12876
#define kh_int64_hash_equal(373,13016
static kh_inline khint_t __ac_X31_hash_string(379,13206
#define kh_str_hash_func(390,13556
#define kh_str_hash_equal(394,13678
static kh_inline khint_t __ac_Wang_hash(396,13731
#define kh_int_hash_func2(406,13952
#define khash_t(416,14174
#define kh_init(423,14375
#define kh_destroy(430,14578
#define kh_clear(437,14817
#define kh_resize(445,15060
#define kh_put(457,15573
#define kh_get(466,15934
#define kh_del(474,16221
#define kh_exist(482,16504
#define kh_key(490,16765
#define kh_val(499,17076
#define kh_value(504,17165
#define kh_begin(511,17365
#define kh_end(518,17556
#define kh_size(525,17793
#define kh_n_buckets(532,18024
#define kh_foreach(541,18355
#define kh_foreach_value(555,18839
#define KHASH_SET_INIT_INT(568,19217
#define KHASH_MAP_INIT_INT(576,19507
#define KHASH_SET_INIT_INT64(583,19773
#define KHASH_MAP_INIT_INT64(591,20076
typedef const char *kh_cstr_t;kh_cstr_t594,20212
#define KHASH_SET_INIT_STR(599,20376
#define KHASH_MAP_INIT_STR(607,20670

src/map.h,381
#define INCLUDE_map_h__8,227
#define GIT_PROT_NONE 14,301
#define GIT_PROT_READ 15,327
#define GIT_PROT_WRITE 16,353
#define GIT_PROT_EXEC 17,380
#define GIT_MAP_FILE	20,439
#define GIT_MAP_SHARED 21,462
#define GIT_MAP_PRIVATE 22,487
#define GIT_MAP_TYPE	23,513
#define GIT_MAP_FIXED	24,538
#define MAP_FAILED 27,586
} git_map;36,787
#define GIT_MMAP_VALIDATE(38,799

src/message.c,126
static size_t line_length_without_trailing_spaces(10,226
int git_message__prettify(24,580
int git_message_prettify(62,1582

src/message.h,34
#define INCLUDE_message_h__8,231

src/mwindow.c,513
#define DEFAULT_WINDOW_SIZE 15,324
#define DEFAULT_MAPPED_LIMIT 20,429
} _mw_options 30,675
static git_mwindow_ctl mem_ctl;36,814
void git_mwindow_free_all(42,939
int git_mwindow_contains(83,1755
static void git_mwindow_scan_lru(93,1996
static int git_mwindow_close_lru(121,2664
static git_mwindow *new_window(new_window159,3564
unsigned char *git_mwindow_open(git_mwindow_open214,4791
int git_mwindow_file_register(267,5916
int git_mwindow_file_deregister(285,6312
void git_mwindow_close(305,6794

src/mwindow.h,221
#define INCLUDE_mwindow__9,230
typedef struct git_mwindow 14,295
} git_mwindow;20,429
typedef struct git_mwindow_file 22,445
} git_mwindow_file;26,528
typedef struct git_mwindow_ctl 28,549
} git_mwindow_ctl;36,749

src/netops.c,739
static void net_set_error(36,707
static void net_set_error(48,1021
static int ssl_set_error(55,1148
int gitno_recv(64,1344
static int gitno__recv_ssl(70,1422
int gitno__recv(88,1764
void gitno_buffer_setup_callback(102,2006
void gitno_buffer_setup(119,2344
void gitno_consume(131,2720
void gitno_consume_n(146,3119
int gitno_ssl_teardown(153,3318
static int match_host(179,3693
static int check_host_name(217,4388
static int verify_server_cert(228,4557
static int ssl_setup(346,7332
static int ssl_setup(377,8111
int gitno_connect(385,8226
static int send_ssl(434,9333
int gitno_send(451,9593
int gitno_close(477,9997
int gitno_close(482,10086
int gitno_select_in(488,10146
int gitno_extract_host_and_port(503,10430

src/netops.h,61
#define INCLUDE_netops_h__8,230
struct gitno_buffer 13,298

src/notes.c,975
static int find_subtree_in_current_level(15,303
static int find_subtree_r(49,1150
static int find_blob(72,1644
static int tree_write(90,2050
static int manipulate_note_in_tree_r(125,2806
static int remove_note_in_tree_eexists_cb(192,4332
static int remove_note_in_tree_enotfound_cb(207,4658
static int insert_note_in_tree_eexists_cb(226,5062
static int insert_note_in_tree_enotfound_cb(244,5467
static int note_write(264,5860
static int note_new(300,6734
static int note_lookup(316,7078
static int note_remove(345,7696
static int note_get_default_ref(370,8406
static int normalize_namespace(389,8741
static int retrieve_note_tree_and_commit(397,8900
int git_note_read(421,9387
int git_note_create(444,9886
int git_note_remove(473,10536
int git_note_default_ref(498,11119
const char * git_note_message(504,11245
const git_oid * git_note_oid(510,11334
void git_note_free(516,11419
static int process_entry_path(525,11534
int git_note_foreach(581,12480

src/notes.h,176
#define INCLUDE_note_h__8,228
#define GIT_NOTES_DEFAULT_REF 14,298
#define GIT_NOTES_DEFAULT_MSG_ADD 16,350
#define GIT_NOTES_DEFAULT_MSG_RM 19,436
struct git_note 22,523

src/object.c,730
static const int OBJECT_BASE_SIZE 19,369
} git_objects_table[git_objects_table25,577
static int create_object(51,1060
int git_object_lookup_prefix(80,1580
int git_object_lookup(200,4673
void git_object__free(204,4859
void git_object_free(233,5302
const git_oid *git_object_id(git_object_id241,5448
git_otype git_object_type(247,5545
git_repository *git_object_owner(git_object_owner253,5632
const char *git_object_type2string(git_object_type2string259,5726
git_otype git_object_string2type(267,5900
int git_object_typeisloose(281,6155
size_t git_object__size(289,6322
int git_object__resolve_to_type(297,6485
static int dereference_object(337,7181
static int peel_error(356,7550
int git_object_peel(362,7696

src/odb.c,1523
#define GIT_ALTERNATES_FILE 19,402
#define GIT_LOOSE_PRIORITY 22,478
#define GIT_PACKED_PRIORITY 23,507
} backend_internal;30,616
static int format_object_header(32,637
int git_odb__hashobj(40,902
static git_odb_object *new_odb_object(new_odb_object66,1348
static void free_odb_object(77,1649
const git_oid *git_odb_object_id(git_odb_object_id87,1817
const void *git_odb_object_data(git_odb_object_data92,1908
size_t git_odb_object_size(97,1995
git_otype git_odb_object_type(102,2076
void git_odb_object_free(107,2161
int git_odb__hashfd(112,2283
int git_odb__hashlink(143,2880
int git_odb_hashfile(185,3770
int git_odb_hash(203,4185
} fake_wstream;225,4516
static int fake_wstream__fwrite(227,4533
static int fake_wstream__write(233,4758
static void fake_wstream__free(245,5046
static int init_fake_wstream(253,5205
static int backend_sort_cmp(287,6097
int git_odb_new(298,6451
static int add_backend_internal(315,6780
int git_odb_add_backend(341,7411
int git_odb_add_alternate(346,7551
static int add_default_backends(351,7693
static int load_alternates(368,8199
int git_odb_open(413,9354
static void odb_free(435,9673
void git_odb_free(454,10067
int git_odb_exists(462,10164
int git_odb_read_header(486,10657
int git_odb_read(525,11619
int git_odb_read_prefix(556,12362
int git_odb_foreach(609,13667
int git_odb_write(624,13981
int git_odb_open_wstream(662,14915
int git_odb_open_rstream(690,15554
int git_odb__error_notfound(711,16009
int git_odb__error_ambiguous(723,16352

src/odb.h,209
#define INCLUDE_odb_h__8,227
#define GIT_OBJECTS_DIR 18,380
#define GIT_OBJECT_DIR_MODE 19,415
#define GIT_OBJECT_FILE_MODE 20,448
} git_rawobj;27,675
struct git_odb_object 30,703
struct git_odb 36,785

src/odb_loose.c,1597
} obj_hdr;24,556
} loose_writestream;29,628
typedef struct loose_backend 31,650
} loose_backend;37,857
} loose_locate_object_state;50,1271
static int object_file_name(59,1465
static size_t get_binary_object_header(78,1925
static size_t get_object_header(106,2428
static void init_stream(160,3398
static void set_stream_input(167,3537
static void set_stream_output(173,3650
static int start_inflate(180,3769
static int finish_inflate(193,4021
static int is_zlib_compressed_data(210,4334
static int inflate_buffer(218,4507
static void *inflate_tail(inflate_tail251,5133
static int inflate_packlike_loose_disk_obj(295,6149
static int inflate_disk_obj(332,6948
static int read_loose(386,8151
static int read_header_loose(408,8503
static int locate_object(455,9548
static int fn_locate_object_short_oid(469,9895
static int locate_object_short_oid(500,10870
static int loose_backend__read_header(581,12963
static int loose_backend__read(604,13513
static int loose_backend__read_prefix(625,14054
static int loose_backend__exists(665,14954
struct foreach_state 679,15230
GIT_INLINE(686,15340
static int foreach_object_dir_cb(714,15806
static int foreach_cb(730,16121
static int loose_backend__foreach(737,16304
static int loose_backend__stream_fwrite(764,16919
static int loose_backend__stream_write(791,17800
static void loose_backend__stream_free(797,18011
static int format_object_header(805,18197
static int loose_backend__stream(816,18552
static int loose_backend__write(858,19816
static void loose_backend__free(897,20960
int git_odb_backend_loose(907,21162

src/odb_pack.c,565
struct pack_backend 22,470
GIT_INLINE(162,5393
GIT_INLINE(168,5545
static int packfile_sort__cb(179,5983
static int packfile_load__cb(210,6641
static int packfile_refresh_all(236,7340
static int pack_entry_find(266,8003
static int pack_entry_find_prefix(294,8660
static int pack_backend__read(363,10154
static int pack_backend__read_prefix(380,10572
static int pack_backend__exists(417,11427
static int pack_backend__foreach(423,11607
static void pack_backend__free(445,12125
int git_odb_backend_one_pack(464,12527
int git_odb_backend_pack(499,13421

src/oid.c,809
static char to_hex[to_hex14,311
static int oid_error_invalid(16,355
int git_oid_fromstrn(22,480
int git_oid_fromstr(54,1102
GIT_INLINE(59,1209
void git_oid_fmt(66,1339
void git_oid_pathfmt(74,1477
char *git_oid_allocfmt(git_oid_allocfmt84,1667
char *git_oid_tostr(git_oid_tostr94,1851
int git_oid__parse(115,2174
void git_oid__writebuf(141,2719
void git_oid_fromraw(151,2957
void git_oid_cpy(156,3063
int git_oid_ncmp(161,3163
int git_oid_streq(181,3457
int git_oid_iszero(191,3622
typedef short node_index;201,3803
} trie_node;206,3891
struct git_oid_shorten 208,3905
static int resize_trie(214,4002
static trie_node *push_leaf(push_leaf227,4332
git_oid_shorten *git_oid_shorten_new(git_oid_shorten_new251,4797
void git_oid_shorten_free(272,5149
int git_oid_shorten_add(323,7188

src/oidmap.h,272
#define INCLUDE_oidmap_h__8,225
#define kmalloc 13,296
#define kcalloc 14,324
#define krealloc 15,352
#define kfree 16,382
typedef khash_t(oid)20,470
GIT_INLINE(22,504
#define GIT__USE_OIDMAP 31,656
#define git_oidmap_alloc(34,777
#define git_oidmap_free(35,817

src/pack.c,879
static int packfile_error(43,1083
static void pack_index_free(55,1359
static int pack_index_check(63,1513
static int pack_index_open(164,3891
static unsigned char *pack_window_open(pack_window_open188,4373
static int packfile_unpack_header1(208,4942
int git_packfile_unpack_header(242,5476
static int packfile_unpack_delta(276,6400
int git_packfile_unpack(326,7667
static void *use_git_alloc(use_git_alloc378,8608
static void use_git_free(384,8744
int packfile_unpack_compressed(390,8833
git_off_t get_delta_base(455,10186
static struct git_pack_file *packfile_alloc(packfile_alloc523,12243
void packfile_free(532,12415
static int packfile_open(549,12696
int git_packfile_check(615,14425
static git_off_t nth_packed_object_offset(671,15795
int git_pack_foreach_entry(689,16353
static int pack_entry_find_offset(733,17017
int git_pack_entry_find(827,19263

src/pack.h,322
#define INCLUDE_pack_h__9,229
#define GIT_PACK_FILE_MODE 18,354
#define PACK_SIGNATURE 20,387
#define PACK_VERSION 21,434
#define pack_version_ok(22,457
struct git_pack_header 23,521
#define PACK_IDX_SIGNATURE 47,1461
struct git_pack_idx_header 49,1516
struct git_pack_file 54,1597
struct git_pack_entry 72,1990

src/path.c,1282
#define LOOKS_LIKE_DRIVE_PREFIX(20,417
int git_path_basename_r(26,594
int git_path_dirname_r(71,1464
char *git_path_dirname(git_path_dirname126,2464
char *git_path_basename(git_path_basename138,2697
size_t git_path_basename_offset(150,2935
const char *git_path_topdir(git_path_topdir165,3185
int git_path_root(183,3446
int git_path_join_unrooted(210,4063
int git_path_prettify(235,4515
int git_path_prettify_dir(261,5163
int git_path_to_dir(267,5360
void git_path_string_to_dir(277,5558
int git__percent_decode(287,5741
static int error_invalid_local_file_uri(322,6270
int git_path_fromurl(328,6415
int git_path_walk_up(359,7186
bool git_path_exists(403,7959
bool git_path_isdir(409,8053
bool git_path_isfile(418,8192
bool git_path_is_empty_dir(431,8366
bool git_path_is_empty_dir(464,9042
int git_path_lstat(492,9553
static bool _check_dir_contents(504,9781
bool git_path_contains(527,10275
bool git_path_contains_dir(532,10393
bool git_path_contains_file(537,10520
int git_path_find_dir(542,10645
int git_path_resolve_relative(562,11108
int git_path_apply_relative(621,12272
int git_path_cmp(627,12447
int git_path_direach(651,12855
int git_path_dirload(704,13815
int git_path_with_stat_cmp(770,15338
int git_path_dirload_with_stat(776,15492

src/path.h,160
#define INCLUDE_path_h__8,228
GIT_INLINE(91,3130
GIT_INLINE(99,3307
GIT_INLINE(109,3534
#	define git_path_mkposix(119,3658
} git_path_with_stat;321,10372

src/pkt.c,795
#define PKT_LEN_SIZE 24,461
static const char pkt_done_str[pkt_done_str25,484
static const char pkt_flush_str[pkt_flush_str26,533
static const char pkt_have_prefix[pkt_have_prefix27,577
static const char pkt_want_prefix[pkt_want_prefix28,628
static int flush_pkt(30,680
static int ack_pkt(44,910
static int nak_pkt(73,1425
static int pack_pkt(86,1595
static int comment_pkt(99,1767
static int err_pkt(115,2075
static int data_pkt(134,2421
static int progress_pkt(152,2723
static int ref_pkt(173,3076
static int32_t parse_len(218,3991
int git_pkt_parse_line(254,4746
void git_pkt_free(323,6281
int git_pkt_buffer_flush(333,6439
static int buffer_want_with_caps(338,6547
int git_pkt_buffer_wants(376,7549
int git_pkt_buffer_have(412,8259
int git_pkt_buffer_done(421,8479

src/pkt.h,634
#define INCLUDE_pkt_h__9,228
enum git_pkt_type 17,358
	GIT_PKT_CMD,18,378
	GIT_PKT_FLUSH,19,392
	GIT_PKT_REF,20,408
	GIT_PKT_HAVE,21,422
	GIT_PKT_ACK,22,437
	GIT_PKT_NAK,23,451
	GIT_PKT_PACK,24,465
	GIT_PKT_COMMENT,25,480
	GIT_PKT_ERR,26,498
	GIT_PKT_DATA,27,512
	GIT_PKT_PROGRESS,28,527
enum git_ack_status 32,575
	GIT_ACK_NONE,33,597
	GIT_ACK_CONTINUE,34,612
	GIT_ACK_COMMON,35,631
	GIT_ACK_READY36,648
} git_pkt;42,741
struct git_pkt_cmd 44,753
} git_pkt_ref;56,973
} git_pkt_ack;63,1093
} git_pkt_comment;68,1182
} git_pkt_data;74,1282
typedef git_pkt_data git_pkt_progress;76,1299
} git_pkt_err;81,1410

src/pool.c,792
struct git_pool_page 6,64
#define GIT_POOL_MIN_USABLE	13,174
#define GIT_POOL_MIN_PAGESZ	14,204
int git_pool_init(19,380
void git_pool_clear(44,1007
void git_pool_swap(69,1458
static void pool_insert_page(81,1644
static void *pool_alloc_page(pool_alloc_page102,2196
GIT_INLINE(133,2736
void *git_pool_malloc(git_pool_malloc142,2914
char *git_pool_strndup(git_pool_strndup187,4187
char *git_pool_strdup(git_pool_strdup202,4501
char *git_pool_strdup_safe(git_pool_strdup_safe209,4669
char *git_pool_strcat(git_pool_strcat214,4783
void git_pool_free(236,5271
uint32_t git_pool__open_pages(244,5441
uint32_t git_pool__full_pages(252,5608
bool git_pool__ptr_in_pool(260,5775
uint32_t git_pool__system_page_size(274,6197
uint32_t git_pool__suggest_items_per_page(295,6629

src/pool.h,144
#define INCLUDE_pool_h__8,223
typedef struct git_pool_page git_pool_page;12,270
} git_pool;40,1460
#define GIT_POOL_INIT_STRINGPOOL 42,1473

src/posix.c,238
int p_getaddrinfo(16,337
void p_freeaddrinfo(75,1779
const char *p_gai_strerror(p_gai_strerror88,1937
int p_open(106,2176
int p_creat(122,2428
int p_getcwd(127,2543
int p_rename(144,2840
int p_read(159,3023
int p_write(183,3423

src/posix.h,807
#define INCLUDE_posix_h__8,229
#define S_IFGITLINK 15,334
#define S_ISGITLINK(16,362
#define S_ISGID 21,499
#define O_BINARY 25,548
typedef int git_file;28,575
#define p_fstat(47,1064
#define p_lseek(48,1097
#define p_close(49,1135
#define p_umask(50,1165
#define p_stat(59,1425
#define p_chdir(60,1456
#define p_rmdir(61,1484
#define p_chmod(62,1512
#define p_access(63,1545
#define p_recv(64,1579
#define p_send(65,1617
typedef int GIT_SOCKET;66,1655
#define INVALID_SOCKET 67,1679
#define p_localtime_r 69,1706
#define p_gmtime_r 70,1740
#define p_gettimeofday 71,1768
typedef SOCKET GIT_SOCKET;75,1812
GIT_INLINE(95,2242
#	define p_readdir_r(102,2413
struct addrinfo 107,2505
#	define p_getaddrinfo(125,2970
#	define p_freeaddrinfo(126,3029
#	define p_gai_strerror(127,3072

src/ppc/sha1.c,82
int ppc_SHA1_Init(14,355
int ppc_SHA1_Update(26,561
int ppc_SHA1_Final(53,1053

src/ppc/sha1.h,127
} ppc_SHA_CTX;17,347
#define SHA_CTX	23,525
#define SHA1_Init	24,554
#define SHA1_Update	25,586
#define SHA1_Final	26,622

src/ppc/sha1ppc.S,335
add 100,3705
add 101,3779
add 102,3853
add 103,3927
add 111,4168
add 112,4248
add 113,4328
add 114,4408
add 115,4487
add 119,4605
add 120,4685
add 121,4765
add 122,4845
rotlwi 130,5146
add 131,5220
add 132,5294
add 140,5562
add 141,5642
add 142,5722
add 143,5802
add 144,5882
ppc_sha1_core:ppc_sha1_core166,6458

src/pqueue.c,407
#define left(11,245
#define right(12,272
#define parent(13,306
int git_pqueue_init(15,336
void git_pqueue_free(31,675
void git_pqueue_clear(37,748
size_t git_pqueue_size(42,804
static void bubble_up(49,940
static size_t maxchild(64,1241
static void percolate_down(79,1530
int git_pqueue_insert(94,1808
void *git_pqueue_pop(git_pqueue_pop121,2222
void *git_pqueue_peek(git_pqueue_peek136,2402

src/pqueue.h,106
#define INCLUDE_pqueue_h__9,231
typedef int (*git_pqueue_cmp)git_pqueue_cmp12,331
} git_pqueue;19,493

src/protocol.c,74
int git_protocol_store_refs(12,283
int git_protocol_detect_caps(58,1182

src/protocol.h,145
#define INCLUDE_protocol_h__8,232
#define GIT_SIDE_BAND_DATA 17,458
#define GIT_SIDE_BAND_PROGRESS 18,491
#define GIT_SIDE_BAND_ERROR 19,524

src/reflog.c,842
static int reflog_init(13,293
static int serialize_reflog_entry(37,730
static int reflog_entry_new(71,1376
static void reflog_entry_free(87,1611
static int reflog_parse(95,1754
#define seek_forward(100,1876
#undef seek_forward155,3179
void git_reflog_free(164,3262
static int retrieve_reflog_path(180,3564
static int create_new_reflog_file(186,3746
int git_reflog_read(198,3944
int git_reflog_write(240,4767
int git_reflog_append(285,5827
int git_reflog_rename(339,6930
int git_reflog_delete(391,8412
unsigned int git_reflog_entrycount(406,8657
const git_reflog_entry * git_reflog_entry_byindex(412,8780
const git_oid * git_reflog_entry_oidold(418,8931
const git_oid * git_reflog_entry_oidnew(424,9048
git_signature * git_reflog_entry_committer(430,9165
char * git_reflog_entry_msg(436,9286
int git_reflog_drop(442,9386

src/reflog.h,264
#define INCLUDE_reflog_h__8,230
#define GIT_REFLOG_DIR 14,324
#define GIT_REFLOG_DIR_MODE 15,355
#define GIT_REFLOG_FILE_MODE 16,388
#define GIT_REFLOG_SIZE_MIN 18,423
#define GIT_OID_HEX_ZERO 20,475
struct git_reflog_entry 22,544
struct git_reflog 31,651

src/refs.c,2757
GIT__USE_STRMAP;19,394
#define DEFAULT_NESTING_LEVEL	21,412
#define MAX_NESTING_LEVEL	22,444
	GIT_PACKREF_HAS_PEEL 25,482
	GIT_PACKREF_WAS_LOOSE 26,509
struct packref 29,540
void git_reference_free(76,2158
static int reference_alloc(92,2452
static int reference_read(114,2891
static int loose_parse_symbolic(136,3350
static int loose_parse_oid(160,3941
static git_ref_t loose_guess_rtype(171,4243
static int loose_lookup(189,4620
static int loose_lookup_to_packfile(224,5341
static int loose_write(260,6054
static int packed_parse_peel(305,7190
static int packed_parse_oid(344,7977
static int packed_load(395,9049
struct dirent_list_data 474,10987
static int _dirent_loose_listall(484,11176
static int _dirent_loose_load(508,11979
static int packed_loadloose(541,12788
static int packed_write_ref(566,13416
static int packed_find_peel(606,14519
static int packed_remove_loose(662,15846
static int packed_sort(700,16843
static int packed_write(711,17128
struct reference_available_t 795,19380
static int _reference_available_cb(801,19475
static int reference_path_available(823,19992
static int reference_exists(849,20497
static int reference_can_write(880,21201
static int packed_lookup(924,22444
static int reference_lookup(961,23430
static int reference_delete(988,24038
int git_reference_delete(1051,25717
int git_reference_lookup(1058,25846
int git_reference_name_to_oid(1064,26005
int git_reference_lookup_resolved(1078,26299
git_ref_t git_reference_type(1140,27692
int git_reference_is_packed(1153,27904
const char *git_reference_name(git_reference_name1159,28012
git_repository *git_reference_owner(git_reference_owner1165,28101
const git_oid *git_reference_oid(git_reference_oid1171,28196
const char *git_reference_target(git_reference_target1181,28349
int git_reference_create_symbolic(1191,28511
int git_reference_create_oid(1227,29258
int git_reference_set_oid(1271,30172
int git_reference_set_target(1307,31032
int git_reference_rename(1327,31522
int git_reference_resolve(1435,34267
int git_reference_packall(1443,34530
int git_reference_foreach(1453,34783
static int cb__reflist_add(1498,35857
int git_reference_list(1503,35983
int git_reference_reload(1529,36465
void git_repository__refcache_free(1534,36546
static int is_valid_ref_char(1549,36801
static int normalize_name(1568,37014
int git_reference__normalize_name(1658,39144
int git_reference__normalize_name_oid(1666,39295
#define GIT_REF_TYPEMASK 1674,39450
int git_reference_cmp(1676,39509
int git_reference__update(1691,39999
struct glob_cb_data 1750,41656
static int fromglob_cb(1756,41757
int git_reference_foreach_glob(1766,42006
int git_reference_has_log(1787,42402
int git_reference_is_branch(1804,42711

src/refs.h,645
#define INCLUDE_refs_h__8,228
#define GIT_REFS_DIR 15,340
#define GIT_REFS_HEADS_DIR 16,369
#define GIT_REFS_TAGS_DIR 17,418
#define GIT_REFS_REMOTES_DIR 18,465
#define GIT_REFS_DIR_MODE 19,518
#define GIT_REFS_FILE_MODE 20,549
#define GIT_RENAMED_REF_FILE 22,582
#define GIT_SYMREF 24,639
#define GIT_PACKEDREFS_FILE 25,666
#define GIT_PACKEDREFS_HEADER 26,708
#define GIT_PACKEDREFS_FILE_MODE 27,766
#define GIT_HEAD_FILE 29,805
#define GIT_FETCH_HEAD_FILE 30,834
#define GIT_MERGE_HEAD_FILE 31,875
#define GIT_REFS_HEADS_MASTER_FILE 32,916
#define GIT_REFNAME_MAX 34,980
struct git_reference 36,1010
} git_refcache;51,1227

src/refspec.c,275
int git_refspec_parse(15,309
const char *git_refspec_src(git_refspec_src46,857
const char *git_refspec_dst(git_refspec_dst51,965
int git_refspec_force(56,1073
int git_refspec_src_matches(63,1171
int git_refspec_transform(71,1368
int git_refspec_transform_r(109,2245

src/refspec.h,61
#define INCLUDE_refspec_h__8,231
struct git_refspec 13,307

src/remote.c,1104
static int refspec_parse(21,415
static int parse_remote_refspec(47,894
int git_remote_new(58,1130
int git_remote_load(96,1885
int git_remote_save(195,3789
const char *git_remote_name(git_remote_name270,5662
const char *git_remote_url(git_remote_url276,5754
int git_remote_set_url(282,5844
const char *git_remote_pushurl(git_remote_pushurl294,6045
int git_remote_set_pushurl(300,6143
int git_remote_set_fetchspec(314,6398
const git_refspec *git_remote_fetchspec(git_remote_fetchspec331,6715
int git_remote_set_pushspec(337,6821
const git_refspec *git_remote_pushspec(git_remote_pushspec354,7133
const char* git_remote__urlfordirection(360,7237
int git_remote_connect(375,7506
int git_remote_ls(406,8016
int git_remote_download(434,8540
int git_remote_update_tips(446,8802
int git_remote_connected(511,10187
void git_remote_disconnect(517,10324
void git_remote_free(525,10506
struct cb_data 549,10986
static int remote_list_cb(554,11042
int git_remote_list(572,11504
int git_remote_add(617,12409
void git_remote_check_cert(640,12860
void git_remote_set_callbacks(647,12970

src/remote.h,59
#define INCLUDE_remote_h__8,230
struct git_remote 16,353

src/repo_template.h,665
#define INCLUDE_repo_template_h__8,232
#define GIT_OBJECTS_INFO_DIR 10,267
#define GIT_OBJECTS_PACK_DIR 11,320
#define GIT_HOOKS_DIR 13,374
#define GIT_HOOKS_DIR_MODE 14,405
#define GIT_HOOKS_README_FILE 16,438
#define GIT_HOOKS_README_MODE 17,498
#define GIT_HOOKS_README_CONTENT 18,533
#define GIT_INFO_DIR 25,770
#define GIT_INFO_DIR_MODE 26,799
#define GIT_INFO_EXCLUDE_FILE 28,831
#define GIT_INFO_EXCLUDE_MODE 29,884
#define GIT_INFO_EXCLUDE_CONTENT 30,919
#define GIT_DESC_FILE 34,1077
#define GIT_DESC_MODE 35,1113
#define GIT_DESC_CONTENT 36,1140
} repo_template_item;43,1317
static repo_template_item repo_template[repo_template45,1340

src/repository.c,2286
#define GIT_FILE_CONTENT_PREFIX 21,428
#define GIT_BRANCH_MASTER 23,471
#define GIT_REPO_VERSION 25,507
#define GIT_TEMPLATE_DIR 27,535
static void drop_odb(29,593
static void drop_config(38,758
static void drop_index(49,983
void git_repository_free(58,1160
static bool valid_repository_path(83,1611
static git_repository *repository_alloc(repository_alloc99,2059
static int load_config_data(118,2480
static int load_workdir(135,2843
static int find_ceiling_dir_offset(183,4159
static int read_gitfile(232,5314
static int find_repo(262,6133
int git_repository_open_ext(357,8426
int git_repository_open(392,9142
int git_repository_wrap_odb(398,9305
int git_repository_discover(411,9526
static int load_config(442,10278
int git_repository_config__weakptr(485,11128
int git_repository_config(515,11831
void git_repository_set_config(524,12004
int git_repository_odb__weakptr(534,12194
int git_repository_odb(558,12660
void git_repository_set_odb(567,12824
int git_repository_index__weakptr(578,13014
int git_repository_index(605,13585
void git_repository_set_index(614,13755
static int check_repositoryformatversion(625,13963
static int repo_init_create_head(642,14344
static bool is_chmod_supported(673,15022
static bool is_filesystem_case_insensitive(695,15429
static bool are_symlinks_supported(713,15809
static int repo_init_config(738,16367
#define SET_REPO_CONFIG(747,16559
static int repo_write_template(808,18445
static int repo_write_gitlink(855,19277
static mode_t pick_dir_mode(897,20192
static int repo_init_structure(910,20534
static int repo_init_directories(996,22651
static int repo_init_create_origin(1091,25321
int git_repository_init(1104,25579
int git_repository_init_ext(1117,25927
int git_repository_head_detached(1170,27248
int git_repository_head(1193,27694
int git_repository_head_orphan(1198,27845
int git_repository_is_empty(1215,28096
const char *git_repository_path(git_repository_path1247,28673
const char *git_repository_workdir(git_repository_workdir1253,28778
int git_repository_set_workdir(1263,28915
int git_repository_is_bare(1307,29887
int git_repository_head_tree(1313,29979
#define MERGE_MSG_FILE 1333,30443
int git_repository_message(1335,30479
int git_repository_message_remove(1362,31094

src/repository.h,1209
#define INCLUDE_repository_h__8,234
#define DOT_GIT 24,522
#define GIT_DIR 25,545
#define GIT_DIR_MODE 26,573
#define GIT_BARE_DIR_MODE 27,599
	GIT_CVAR_AUTO_CRLF 31,676
	GIT_CVAR_EOL,32,721
	GIT_CVAR_CACHE_MAX33,751
} git_cvar_cached;34,771
	GIT_CVAR_NOT_CACHED 46,1150
	GIT_SAFE_CRLF_FALSE 49,1222
	GIT_SAFE_CRLF_FAIL 50,1248
	GIT_SAFE_CRLF_WARN 51,1273
	GIT_AUTO_CRLF_FALSE 54,1342
	GIT_AUTO_CRLF_TRUE 55,1368
	GIT_AUTO_CRLF_INPUT 56,1393
	GIT_AUTO_CRLF_DEFAULT 57,1419
	GIT_AUTO_CRLF_DEFAULT = GIT_AUTO_CRLF_FALSE,57,1419
	GIT_EOL_UNSET 60,1513
	GIT_EOL_CRLF 61,1533
	GIT_EOL_LF 62,1552
	GIT_EOL_NATIVE 64,1586
	GIT_EOL_NATIVE = GIT_EOL_CRLF,64,1586
	GIT_EOL_NATIVE 66,1624
	GIT_EOL_NATIVE = GIT_EOL_LF,66,1624
	GIT_EOL_DEFAULT 68,1661
	GIT_EOL_DEFAULT = GIT_EOL_NATIVE68,1661
} git_cvar_value;69,1695
	GIT_REPOSITORY_INIT__HAS_DOTGIT 73,1758
	GIT_REPOSITORY_INIT__HAS_DOTGIT = (1u u73,1758
	GIT_REPOSITORY_INIT__NATURAL_WD 74,1805
	GIT_REPOSITORY_INIT__NATURAL_WD = (1u u74,1805
	GIT_REPOSITORY_INIT__IS_REINIT 75,1852
	GIT_REPOSITORY_INIT__IS_REINIT  = (1u u75,1852
struct git_object 79,1942
struct git_repository 86,2078
GIT_INLINE(108,2500
GIT_INLINE(120,2886

src/reset.c,87
#define ERROR_MSG 13,286
static int reset_error_invalid(15,328
int git_reset(21,449

src/revparse.c,1291
static int revspec_error(16,303
static int disambiguate_refname(22,465
static int maybe_sha_or_abbrev(71,1437
static int build_regex(82,1723
static int maybe_describe(101,2026
static int revparse_lookup_object(124,2463
static int try_parse_numeric(157,3187
static int retrieve_previously_checked_out_branch_or_revision(172,3447
static int retrieve_oid_from_reflog(234,4923
static int retrieve_revobject_from_reflog(289,6095
static int retrieve_remote_tracking_reference(318,6781
static int handle_at_syntax(341,7264
static git_otype parse_obj_type(385,8533
static int dereference_to_non_tag(402,8815
static int handle_caret_parent_syntax(410,9011
static int handle_linear_syntax(429,9398
static int handle_colon_syntax(443,9732
static int walk_and_search(476,10349
static int handle_grep_syntax(502,10896
static int handle_caret_curly_syntax(532,11598
static int extract_curly_braces_content(550,12110
static int extract_path(575,12524
static int extract_how_many(591,12755
static int object_from_reference(622,13343
static int ensure_base_rev_loaded(636,13685
static int ensure_base_rev_is_not_known_yet(665,14400
static bool any_left_hand_identifier(673,14550
static int ensure_left_hand_identifier_is_not_known_yet(687,14794
int git_revparse_single(695,15036

src/revwalk.c,2154
GIT__USE_OIDMAP;20,391
#define PARENT1 22,409
#define PARENT2 23,435
#define RESULT 24,461
#define STALE 25,487
typedef struct commit_object 27,514
} commit_object;40,755
typedef struct commit_list 42,773
} commit_list;45,851
struct git_revwalk 47,867
static int commit_time_cmp(70,1310
static commit_list *commit_list_insert(commit_list_insert78,1498
static commit_list *commit_list_insert_by_date(commit_list_insert_by_date89,1764
static void commit_list_free(103,2045
static commit_object *commit_list_pop(commit_list_pop119,2267
#define PARENTS_PER_COMMIT	131,2476
#define COMMIT_ALLOC 132,2505
static commit_object *alloc_commit(alloc_commit135,2601
static commit_object **alloc_parents(alloc_parents140,2736
static commit_object *commit_lookup(commit_lookup151,3064
static int commit_error(175,3596
static int commit_quick_parse(186,3867
static int commit_parse(257,5845
static int interesting(279,6331
static int merge_bases_many(291,6543
int git_merge_base_many(374,8374
int git_merge_base(427,9463
static void mark_uninteresting(471,10333
static int process_commit(487,10729
static int process_commit_parents(505,11020
static int push_commit(516,11280
int git_revwalk_push(535,11703
int git_revwalk_hide(542,11826
static int push_ref(548,11948
struct push_cb_data 558,12154
static int push_glob_cb(563,12211
static int push_glob(570,12385
int git_revwalk_push_glob(616,13378
int git_revwalk_hide_glob(622,13503
int git_revwalk_push_head(628,13628
int git_revwalk_hide_head(634,13735
int git_revwalk_push_ref(640,13842
int git_revwalk_hide_ref(646,13974
static int revwalk_enqueue_timesort(652,14106
static int revwalk_enqueue_unsorted(657,14246
static int revwalk_next_timesort(662,14396
static int revwalk_next_unsorted(680,14754
static int revwalk_next_toposort(698,15113
static int revwalk_next_reverse(728,15723
static int prepare_walk(735,15908
int git_revwalk_new(801,17294
void git_revwalk_free(833,18049
git_repository *git_revwalk_repository(git_revwalk_repository848,18337
void git_revwalk_sorting(854,18435
int git_revwalk_next(872,18828
void git_revwalk_reset(897,19219

src/sha1.c,687
#define SHA_ASM(20,571
#define SHA_ROL(21,682
#define SHA_ROR(22,724
#define SHA_ROT(26,774
#define SHA_ROL(27,827
#define SHA_ROR(28,868
 #define setW(55,1998
 #define setW(57,2106
 #define setW(59,2189
#define get_be32(75,2732
#define put_be32(76,2786
#define get_be32(80,2867
#define put_be32(85,3075
#define W(95,3367
#define SHA_SRC(101,3535
#define SHA_MIX(102,3573
#define SHA_ROUND(104,3638
#define T_0_15(109,3832
#define T_16_19(110,3931
#define T_20_39(111,4031
#define T_40_59(112,4125
#define T_60_79(113,4229
static void blk_SHA1_Block(115,4324
void git__blk_SHA1_Init(223,7088
void git__blk_SHA1_Update(235,7350
void git__blk_SHA1_Final(263,7969

src/sha1.h,158
#define INCLUDE_sha1_h__9,229
} blk_SHA_CTX;15,339
#define SHA_CTX	21,547
#define SHA1_Init	22,576
#define SHA1_Update	23,613
#define SHA1_Final	24,654

src/sha1_lookup.c,28
int sha1_entry_pos(75,2833

src/sha1_lookup.h,38
#define INCLUDE_sha1_lookup_h__8,235

src/signature.c,710
void git_signature_free(13,297
static const char *skip_leading_spaces(skip_leading_spaces25,478
static const char *skip_trailing_spaces(skip_trailing_spaces33,642
static int signature_error(41,831
static int process_trimming(47,962
static bool contains_angle_brackets(75,1621
int git_signature_new(83,1766
git_signature *git_signature_dup(git_signature_dup116,2487
int git_signature_now(124,2691
static int timezone_error(154,3264
static int parse_timezone_offset(160,3392
static int process_next_token(209,4492
static const char *scan_for_previous_token(scan_for_previous_token224,4850
static int parse_time(240,5191
int git_signature__parse(258,5568
void git_signature__writebuf(320,7332

src/signature.h,36
#define INCLUDE_signature_h__8,233

src/status.c,304
static unsigned int index_delta2status(21,431
static unsigned int workdir_delta2status(44,847
int git_status_foreach_ext(71,1348
int git_status_foreach(157,4118
struct status_file_info 173,4539
static int get_one_status(180,4645
int git_status_file(199,5074
int git_status_should_ignore(241,6034

src/strmap.h,737
#define INCLUDE_strmap_h__8,225
#define kmalloc 12,274
#define kcalloc 13,302
#define krealloc 14,330
#define kfree 15,360
typedef khash_t(str)19,445
#define GIT__USE_STRMAP 21,479
#define git_strmap_alloc(24,605
#define git_strmap_free(25,646
#define git_strmap_clear(26,703
#define git_strmap_num_entries(28,749
#define git_strmap_lookup_index(30,795
#define git_strmap_valid_index(31,852
#define git_strmap_exists(33,911
#define git_strmap_value_at(35,977
#define git_strmap_set_value_at(36,1035
#define git_strmap_delete_at(37,1097
#define git_strmap_insert(39,1161
#define git_strmap_insert2(46,1368
#define git_strmap_delete(56,1647
#define git_strmap_foreach	61,1829
#define git_strmap_foreach_value	62,1868

src/submodule.c,2392
#define GIT_MODULES_FILE 24,541
static git_cvar_map _sm_update_map[_sm_update_map26,581
static git_cvar_map _sm_ignore_map[_sm_ignore_map33,860
static kh_inline khint_t str_hash_no_trailing_slash(40,1135
static kh_inline int str_equal_no_trailing_slash(51,1313
static int submodule_cmp(82,2747
static int submodule_config_key_trunc_puts(87,2879
int git_submodule_lookup(98,3102
int git_submodule_foreach(138,3963
void git_submodule_config_free(176,4814
int git_submodule_add_setup(195,5110
int git_submodule_add_finalize(326,8514
int git_submodule_add_to_index(340,8808
int git_submodule_save(411,10564
git_repository *git_submodule_owner(git_submodule_owner479,12568
const char *git_submodule_name(git_submodule_name485,12681
const char *git_submodule_path(git_submodule_path491,12788
const char *git_submodule_url(git_submodule_url497,12895
int git_submodule_set_url(503,13000
const git_oid *git_submodule_index_oid(git_submodule_index_oid515,13216
const git_oid *git_submodule_head_oid(git_submodule_head_oid525,13423
const git_oid *git_submodule_wd_oid(git_submodule_wd_oid535,13627
git_submodule_ignore_t git_submodule_ignore(555,14091
git_submodule_ignore_t git_submodule_set_ignore(561,14213
git_submodule_update_t git_submodule_update(576,14528
git_submodule_update_t git_submodule_set_update(582,14650
int git_submodule_init(597,14965
int git_submodule_sync(628,15756
int git_submodule_open(642,16083
int git_submodule_reload_all(687,17158
int git_submodule_reload(693,17272
int git_submodule_status(790,19433
static git_submodule *submodule_alloc(submodule_alloc815,19907
static void submodule_release(842,20366
static int submodule_get(867,20705
static int submodule_load_from_index(911,21654
static int submodule_load_from_head(932,22120
static int submodule_config_error(948,22448
static int submodule_load_from_config(955,22639
static int submodule_load_from_wd_lite(1057,25531
static void submodule_mode_mismatch(1080,26038
static int load_submodule_config_from_index(1092,26351
static int load_submodule_config_from_head(1126,27069
static git_config_file *open_gitmodules(open_gitmodules1168,27988
static int load_submodule_config(1206,28987
static int lookup_head_remote(1261,30310
static int submodule_update_config(1326,32043
static int submodule_index_status(1368,32915
static int submodule_wd_status(1385,33375

src/submodule.h,993
#define INCLUDE_submodule_h__8,228
struct git_submodule 68,2777
	GIT_SUBMODULE_STATUS__WD_SCANNED 89,3309
	GIT_SUBMODULE_STATUS__WD_SCANNED          = (1u u89,3309
	GIT_SUBMODULE_STATUS__HEAD_OID_VALID 90,3366
	GIT_SUBMODULE_STATUS__HEAD_OID_VALID      = (1u u90,3366
	GIT_SUBMODULE_STATUS__INDEX_OID_VALID 91,3423
	GIT_SUBMODULE_STATUS__INDEX_OID_VALID     = (1u u91,3423
	GIT_SUBMODULE_STATUS__WD_OID_VALID 92,3480
	GIT_SUBMODULE_STATUS__WD_OID_VALID        = (1u u92,3480
	GIT_SUBMODULE_STATUS__HEAD_NOT_SUBMODULE 93,3537
	GIT_SUBMODULE_STATUS__HEAD_NOT_SUBMODULE  = (1u u93,3537
	GIT_SUBMODULE_STATUS__INDEX_NOT_SUBMODULE 94,3594
	GIT_SUBMODULE_STATUS__INDEX_NOT_SUBMODULE = (1u u94,3594
	GIT_SUBMODULE_STATUS__WD_NOT_SUBMODULE 95,3651
	GIT_SUBMODULE_STATUS__WD_NOT_SUBMODULE    = (1u u95,3651
	GIT_SUBMODULE_STATUS__INDEX_MULTIPLE_ENTRIES 96,3708
	GIT_SUBMODULE_STATUS__INDEX_MULTIPLE_ENTRIES = (1u u96,3708
#define GIT_SUBMODULE_STATUS__CLEAR_INTERNAL(99,3772

src/tag.c,952
void git_tag__free(17,388
const git_oid *git_tag_id(git_tag_id25,530
int git_tag_target(30,613
const git_oid *git_tag_target_oid(git_tag_target_oid36,754
git_otype git_tag_type(42,837
const char *git_tag_name(git_tag_name48,906
const git_signature *git_tag_tagger(git_tag_tagger54,981
const char *git_tag_message(git_tag_message59,1053
static int tag_error(65,1130
int git_tag__parse_buffer(71,1242
static int retrieve_tag_reference(156,3189
static int retrieve_tag_reference_oid(179,3664
static int write_tag_annotation(191,3942
static int git_tag_create__internal(226,4788
int git_tag_create(274,6088
int git_tag_create_lightweight(286,6390
int git_tag_create_frombuffer(296,6645
int git_tag_delete(373,8525
int git_tag__parse(389,8832
} tag_filter_data;398,9031
#define GIT_REFS_TAGS_DIR_LEN 400,9051
static int tag_list_cb(402,9108
int git_tag_list_match(416,9482
int git_tag_list(441,10049
int git_tag_peel(446,10167

src/tag.h,53
#define INCLUDE_tag_h__8,227
struct git_tag 14,316

src/thread-utils.c,142
#	define WIN32_LEAN_AND_MEAN11,264
#		define _SC_NPROCESSORS_ONLN 24,600
#		define _SC_NPROCESSORS_ONLN 26,675
int git_online_cpus(30,736

src/thread-utils.h,1165
#define INCLUDE_thread_utils_h__8,236
} git_atomic;19,443
GIT_INLINE(21,458
#define git_thread 28,554
#define git_thread_create(29,583
#define git_thread_kill(30,692
#define git_thread_exit(31,747
#define git_thread_join(32,800
#define git_mutex 35,883
#define git_mutex_init(36,917
#define git_mutex_lock(37,971
#define git_mutex_unlock(38,1019
#define git_mutex_free(39,1071
#define git_cond 42,1172
#define git_cond_init(43,1219
#define git_cond_free(44,1282
#define git_cond_wait(45,1342
#define git_cond_signal(46,1405
#define git_cond_broadcast(47,1466
GIT_INLINE(49,1533
GIT_INLINE(60,1782
#define git_thread 73,2038
#define git_thread_create(74,2070
#define git_thread_kill(75,2138
#define git_thread_exit(76,2178
#define git_thread_join(77,2218
#define git_mutex 80,2284
#define git_mutex_init(81,2315
#define git_mutex_lock(82,2349
#define git_mutex_unlock(83,2383
#define git_mutex_free(84,2419
#define git_cond 87,2484
#define git_cond_init(88,2514
#define git_cond_free(89,2550
#define git_cond_wait(90,2583
#define git_cond_signal(91,2619
#define git_cond_broadcast(92,2654
GIT_INLINE(94,2693
GIT_INLINE(99,2762

src/transport.c,254
} transports[transports17,389
#define GIT_TRANSPORT_COUNT 27,636
static git_transport_cb transport_find_fn(29,712
int git_transport_dummy(54,1449
int git_transport_new(61,1609
int git_remote_valid_url(87,2040
int git_remote_supported_url(92,2127

src/transport.h,388
#define INCLUDE_transport_h__8,233
#define GIT_CAP_OFS_DELTA 22,467
#define GIT_CAP_MULTI_ACK 23,505
#define GIT_CAP_SIDE_BAND 24,543
#define GIT_CAP_SIDE_BAND_64K 25,581
typedef struct git_transport_caps 27,628
} git_transport_caps;33,744
typedef struct gitno_ssl 36,782
} gitno_ssl;39,835
struct git_transport 69,2063
typedef int (*git_transport_cb)git_transport_cb142,4077

src/transports/git.c,286
} transport_git;31,633
static int gen_proto(38,765
static int send_request(74,1524
static int do_connect(95,1977
static int git_connect(128,2653
static int git_negotiation_step(155,3296
static int git_close(160,3435
static void git_free(184,3866
int git_transport_git(207,4343

src/transports/http.c,677
enum last_cb 24,491
	NONE,25,506
	FIELD,26,513
	VALUE27,521
} transport_http;50,886
static int gen_request(52,905
static int do_connect(80,1845
static const char *typestr typestr101,2405
static int on_header_field(103,2451
static int on_header_value(130,2998
static int on_headers_complete(154,3468
static int on_message_complete(183,4134
static int on_body_fill_buffer(197,4410
static int http_recv_cb(214,4852
static void setup_gitno_buffer(240,5503
static int http_connect(257,6130
static int http_negotiation_step(332,8065
static int http_close(363,8832
static void http_free(379,9115
int git_transport_http(412,9865
int git_transport_https(446,10614

src/transports/local.c,263
} transport_local;23,524
static int add_ref(25,544
static int store_refs(106,2415
static int local_connect(143,3299
static int local_negotiate_fetch(182,4030
static int local_close(192,4296
static void local_free(203,4489
int git_transport_local(226,4893

src/tree-cache.c,274
static git_tree_cache *find_child(find_child10,229
void git_tree_cache_invalidate_path(32,670
const git_tree_cache *git_tree_cache_get(git_tree_cache_get56,1069
static int read_tree_internal(79,1444
int git_tree_cache_read(157,3420
void git_tree_cache_free(172,3784

src/tree-cache.h,120
#define INCLUDE_tree_cache_h__9,235
struct git_tree_cache 14,310
typedef struct git_tree_cache git_tree_cache;24,490

src/tree.c,1988
#define DEFAULT_TREE_SIZE 14,317
#define MAX_FILEMODE_BYTES 15,346
static bool valid_filemode(17,376
static int valid_entry_name(27,672
static int entry_sort_cmp(32,787
static git_tree_entry *alloc_entry(alloc_entry42,1152
struct tree_key_search 59,1565
static int homing_search_cmp(64,1639
static int tree_key_search(99,2831
void git_tree_entry_free(145,4091
git_tree_entry *git_tree_entry_dup(git_tree_entry_dup153,4194
void git_tree__free(170,4498
const git_oid *git_tree_id(git_tree_id183,4742
git_filemode_t git_tree_entry_filemode(188,4827
const char *git_tree_entry_name(git_tree_entry_name193,4937
const git_oid *git_tree_entry_id(git_tree_entry_id199,5044
git_otype git_tree_entry_type(205,5148
int git_tree_entry_to_object(217,5369
static git_tree_entry *entry_fromname(entry_fromname226,5584
const git_tree_entry *git_tree_entry_byname(git_tree_entry_byname235,5813
const git_tree_entry *git_tree_entry_byindex(git_tree_entry_byindex241,5985
const git_tree_entry *git_tree_entry_byoid(git_tree_entry_byoid247,6123
int git_tree__prefix_position(262,6394
unsigned int git_tree_entrycount(289,7077
static int tree_error(295,7190
static int tree_parse_buffer(301,7283
int git_tree__parse(343,8316
static unsigned int find_next_dir(349,8487
static int append_entry(367,8936
static int write_tree(387,9286
int git_tree_create_fromindex(494,12049
static void sort_entries(515,12556
GIT_INLINE(520,12641
int git_treebuilder_create(533,13037
int git_treebuilder_insert(569,13820
static git_tree_entry *treebuilder_get(treebuilder_get615,14759
const git_tree_entry *git_treebuilder_get(git_treebuilder_get633,15103
int git_treebuilder_remove(638,15234
int git_treebuilder_write(649,15530
void git_treebuilder_filter(691,16406
void git_treebuilder_clear(704,16738
void git_treebuilder_free(717,16981
static size_t subpath_len(727,17142
int git_tree_entry_bypath(736,17309
static int tree_walk(799,18747
int git_tree_walk(852,19780

src/tree.h,185
#define INCLUDE_tree_h__8,228
struct git_tree_entry 15,339
struct git_tree 23,457
struct git_treebuilder 28,520
GIT_INLINE(33,571
#define GIT_FILEMODE_BLOB_GROUP_WRITABLE 53,1163

src/tsort.c,490
#	define MAX(19,447
#	define MIN(23,511
typedef int (*cmp_ptr_t)cmp_ptr_t26,563
static int binsearch(28,618
static void bisort(74,1430
struct tsort_run 98,1983
struct tsort_store 103,2039
static void reverse_elements(109,2112
static ssize_t count_run(121,2302
static size_t compute_minrun(153,2997
static int check_invariant(163,3115
static int resize(180,3574
static void merge(200,4004
static ssize_t collapse(250,5133
#define PUSH_NEXT(304,6609
void git__tsort(332,7301

src/unix/map.c,40
int p_mmap(15,307
int p_munmap(47,972

src/unix/posix.h,370
#define INCLUDE_posix__w32_h__8,234
#	define p_fnmatch(12,334
#define p_lstat(19,442
#define p_readlink(20,474
#define p_symlink(21,520
#define p_link(22,557
#define p_unlink(23,588
#define p_mkdir(24,618
#define p_fsync(25,651
#define p_realpath(26,681
#define p_vsnprintf(27,723
#define p_snprintf(28,777
#define p_mkstemp(29,841
#define p_setenv(30,873

src/util.c,581
void git_libgit2_version(18,365
int git_libgit2_capabilities(25,517
void git_strarray_free(37,652
int git_strarray_copy(46,809
int git__strtol64(75,1311
int git__strtol32(157,2562
void git__strntolower(177,2974
void git__strtolower(186,3103
int git__prefixcmp(191,3177
int git__suffixcmp(202,3356
char *git__strtok(git__strtok211,3534
void git__hexdump(236,3839
uint32_t git__hash(282,4853
uint32_t git__hash(325,5539
#define MURMUR_BLOCK(328,5602
int git__bsearch(383,6559
int git__strcmp_cb(419,7249
int git__parse_bool(427,7406
size_t git__unescape(451,7804

src/util.h,815
#define INCLUDE_util_h__8,228
#define ARRAY_SIZE(10,254
#define bitsizeof(11,301
#define MSB(12,345
# define min(14,421
GIT_INLINE(22,581
GIT_INLINE(29,697
GIT_INLINE(36,840
GIT_INLINE(43,961
GIT_INLINE(64,1257
#define git__free(71,1405
GIT_INLINE(83,1927
#	define git__rotl(91,2108
#	define git__rotl(93,2236
GIT_INLINE(101,2486
} git_refcount;127,3149
typedef void (*git_refcount_freeptr)git_refcount_freeptr129,3166
#define GIT_REFCOUNT_INC(131,3214
#define GIT_REFCOUNT_DEC(135,3287
#define GIT_REFCOUNT_OWN(141,3455
#define GIT_REFCOUNT_OWNER(145,3530
static signed char from_hex[from_hex147,3592
GIT_INLINE(166,4789
GIT_INLINE(171,4868
GIT_INLINE(180,5017
GIT_INLINE(192,5160
GIT_INLINE(197,5251
GIT_INLINE(202,5328
GIT_INLINE(207,5433
GIT_INLINE(212,5510
GIT_INLINE(217,5673

src/vector.c,573
static const double resize_factor 12,269
static const unsigned int minimum_size 13,311
static int resize_vector(15,356
void git_vector_free(27,664
int git_vector_init(38,802
int git_vector_insert(59,1179
int git_vector_insert_sorted(73,1388
void git_vector_sort(108,2211
int git_vector_bsearch3(119,2373
int git_vector_search2(143,2818
static int strict_comparison(158,3078
int git_vector_search(163,3169
int git_vector_remove(168,3307
void git_vector_pop(184,3568
void git_vector_uniq(190,3643
void git_vector_clear(210,4018
void git_vector_swap(217,4104

src/vector.h,376
#define INCLUDE_vector_h__8,230
typedef int (*git_vector_cmp)git_vector_cmp12,284
typedef struct git_vector 14,344
} git_vector;20,462
#define GIT_VECTOR_INIT 22,477
GIT_INLINE(37,985
GIT_INLINE(42,1109
GIT_INLINE(48,1252
GIT_INLINE(53,1386
#define GIT_VECTOR_GET(58,1538
GIT_INLINE(60,1615
#define git_vector_foreach(65,1737
#define git_vector_rforeach(68,1872

src/win32/dir.c,256
#define GIT__WIN32_NO_WRAP_DIR7,203
static int init_filter(12,300
git__DIR *git__opendir(git__opendir27,537
int git__readdir_ext(65,1190
struct git__dirent *git__readdir(git__readdir106,2033
void git__rewinddir(114,2200
int git__closedir(141,2705

src/win32/dir.h,253
#define INCLUDE_dir_h__8,227
struct git__dirent 12,273
} git__DIR;23,429
#	define dirent 33,746
#	define DIR 34,774
#	define opendir	35,796
#	define readdir	36,826
#   define readdir_r(37,856
#	define rewinddir 38,919
#	define closedir 39,953

src/win32/map.c,76
static DWORD get_page_size(12,242
int p_mmap(25,432
int p_munmap(90,2029

src/win32/mingw-compat.h,181
#define INCLUDE_mingw_compat__8,234
# define lseek 13,328
# define stat 14,353
# define fstat 15,376
# define _S_IFLNK 18,444
# define S_IFLNK 19,470
# define S_ISLNK(20,496

src/win32/msvc-compat.h,461
#define INCLUDE_msvc_compat__8,233
#	define F_OK 13,326
#	define W_OK 14,364
#	define R_OK 15,403
#	define lseek 17,442
#	define stat 18,467
#	define fstat 19,489
#	define _S_IFLNK 22,556
#	define S_IFLNK 23,582
#	define S_IXUSR 24,608
#	define S_ISDIR(26,632
#	define S_ISREG(27,682
#	define S_ISFIFO(28,732
#	define S_ISLNK(29,783
#	define mode_t 31,834
#	define strcasecmp	34,907
#	define strncasecmp 35,936
typedef SSIZE_T ssize_t;38,1009

src/win32/posix.h,106
#define INCLUDE_posix__w32_h__8,234
GIT_INLINE(14,337
GIT_INLINE(22,464
extern int p_snprintf(40,1071

src/win32/posix_w32.c,798
int p_unlink(16,345
int p_fsync(30,537
GIT_INLINE(53,842
static int do_lstat(61,1140
int p_lstat(108,2343
int p_readlink(140,2927
	typedef DWORD (WINAPI 142,2995
int p_symlink(228,5033
int p_open(236,5281
int p_creat(261,5642
int p_getcwd(272,5861
int p_stat(292,6226
int p_chdir(297,6307
int p_chmod(308,6466
int p_rmdir(319,6644
int p_hide_directory__w32(330,6803
char *p_realpath(p_realpath343,7085
int p_vsnprintf(395,8247
int p_snprintf(409,8559
int p_mkstemp(423,8799
int p_setenv(436,9022
int p_access(444,9189
int p_rename(457,9371
int p_recv(474,9690
int p_send(482,9907
p_localtime_r 495,10324
p_gmtime_r 507,10610
#define DELTA_EPOCH_IN_MICROSECS 520,10927
#define DELTA_EPOCH_IN_MICROSECS 522,10989
struct timezone 525,11053
int p_gettimeofday(531,11183

src/win32/pthread.c,222
int pthread_create(10,226
int pthread_join(22,530
int pthread_mutex_init(31,733
int pthread_mutex_destroy(39,925
int pthread_mutex_lock(45,1022
int pthread_mutex_unlock(51,1115
int pthread_num_processors_np(57,1210

src/win32/pthread.h,326
#define GIT_PTHREAD_H9,226
#	define GIT_RESTRICT 14,296
#	define GIT_RESTRICT 16,335
typedef int pthread_mutexattr_t;19,378
typedef int pthread_condattr_t;20,411
typedef int pthread_attr_t;21,443
typedef CRITICAL_SECTION pthread_mutex_t;22,471
typedef HANDLE pthread_t;23,513
#define PTHREAD_MUTEX_INITIALIZER 25,540

src/win32/utf-conv.c,238
static int _active_codepage 15,306
void gitwin_set_codepage(17,346
unsigned int gitwin_get_codepage(22,429
void gitwin_set_utf8(27,499
wchar_t* gitwin_to_utf16(32,560
int gitwin_append_utf16(57,1062
char* gitwin_from_utf16(66,1320

src/win32/utf-conv.h,39
#define INCLUDE_git_utfconv_h__11,256

src/xdiff/xdiff.h,1584
#define XDIFF_H24,931
#define XDF_NEED_MINIMAL 31,1014
#define XDF_IGNORE_WHITESPACE 32,1048
#define XDF_IGNORE_WHITESPACE_CHANGE 33,1087
#define XDF_IGNORE_WHITESPACE_AT_EOL 34,1133
#define XDF_PATIENCE_DIFF 35,1179
#define XDF_HISTOGRAM_DIFF 36,1214
#define XDF_WHITESPACE_FLAGS 37,1250
#define XDL_PATCH_NORMAL 39,1366
#define XDL_PATCH_REVERSE 40,1395
#define XDL_PATCH_MODEMASK 41,1425
#define XDL_PATCH_IGNOREBSPACE 42,1467
#define XDL_EMIT_FUNCNAMES 44,1508
#define XDL_EMIT_COMMON 45,1544
#define XDL_EMIT_FUNCCONTEXT 46,1577
#define XDL_MMB_READONLY 48,1616
#define XDL_MMF_ATOMIC 50,1651
#define XDL_BDOP_INS 52,1684
#define XDL_BDOP_CPY 53,1707
#define XDL_BDOP_INSB 54,1730
#define XDL_MERGE_MINIMAL 57,1789
#define XDL_MERGE_EAGER 58,1817
#define XDL_MERGE_ZEALOUS 59,1843
#define XDL_MERGE_ZEALOUS_ALNUM 60,1871
#define XDL_MERGE_FAVOR_OURS 63,1930
#define XDL_MERGE_FAVOR_THEIRS 64,1961
#define XDL_MERGE_FAVOR_UNION 65,1994
#define XDL_MERGE_DIFF3 68,2053
typedef struct s_mmfile 70,2080
} mmfile_t;73,2132
typedef struct s_mmbuffer 75,2145
} mmbuffer_t;78,2199
typedef struct s_xpparam 80,2214
} xpparam_t;82,2263
typedef struct s_xdemitcb 84,2277
} xdemitcb_t;87,2359
typedef long (*find_func_t)find_func_t89,2374
typedef struct s_xdemitconf 91,2481
} xdemitconf_t;98,2643
typedef struct s_bdiffparam 100,2660
} bdiffparam_t;102,2703
#define xdl_malloc(105,2721
#define xdl_free(106,2753
#define xdl_realloc(107,2785
typedef struct s_xmparam 115,3034
} xmparam_t;124,3255
#define DEFAULT_CONFLICT_MARKER_SIZE 126,3269

src/xdiff/xdiffi.c,478
#define XDL_MAX_COST_MIN 27,933
#define XDL_HEUR_MIN_COST 28,962
#define XDL_LINE_MAX 29,992
#define XDL_SNAKE_CNT 30,1064
#define XDL_K_HEUR 31,1089
typedef struct s_xdpsplit 35,1113
} xdpsplit_t;38,1176
static long xdl_split(62,2029
int xdl_recs_cmp(268,7377
int xdl_do_diff(324,8694
static xdchange_t *xdl_add_change(xdl_add_change386,10119
int xdl_change_compact(402,10414
int xdl_build_script(506,13604
void xdl_free_script(532,14209
int xdl_diff(542,14346

src/xdiff/xdiffi.h,196
#define XDIFFI_H24,932
typedef struct s_diffdata 27,951
} diffdata_t;32,1045
typedef struct s_xdalgoenv 34,1060
} xdalgoenv_t;38,1136
typedef struct s_xdchange 40,1152
} xdchange_t;44,1238

src/xdiff/xemit.c,271
static long xdl_get_rec(34,1091
static int xdl_emit_record(42,1222
xdchange_t *xdl_get_hunk(xdl_get_hunk60,1656
static long def_ff(72,1971
static int xdl_emit_common(90,2398
struct func_line 108,2767
static long get_func_line(113,2816
int xdl_emit_diff(136,3484

src/xdiff/xemit.h,69
#define XEMIT_H24,931
typedef int (*emit_func_t)emit_func_t27,949

src/xdiff/xhistogram.c,584
#define MAX_PTR	48,1991
#define MAX_CNT	49,2016
#define LINE_END(51,2042
#define LINE_END_PTR(52,2087
struct histindex 54,2139
	struct record 55,2158
struct region 77,2570
#define LINE_MAP(82,2646
#define NEXT_PTR(84,2704
#define CNT(87,2782
#define REC(90,2840
static int cmp_recs(93,2893
#define CMP_ENV(101,3072
#define CMP(104,3170
#define TABLE_HASH(107,3266
static int scanA(110,3375
static int try_lcs(164,4565
static int find_lcs(239,6038
static int fall_back_to_classic_diff(257,6489
static int histogram_diff(267,6757
int xdl_do_histogram_diff(362,9022

src/xdiff/xinclude.h,26
#define XINCLUDE_H24,934

src/xdiff/xmacros.h,335
#define XMACROS_H24,933
#define XDL_MIN(29,955
#define XDL_MAX(30,1000
#define XDL_ABS(31,1045
#define XDL_ISDIGIT(32,1087
#define XDL_ISSPACE(33,1137
#define XDL_ADDBITS(34,1190
#define XDL_MASKBITS(35,1236
#define XDL_HASHLONG(36,1280
#define XDL_PTRFREE(37,1361
#define XDL_LE32_PUT(38,1437
#define XDL_LE32_GET(46,1685

src/xdiff/xmerge.c,637
typedef struct s_xdmerge 25,960
} xdmerge_t;48,1595
static int xdl_append_merge(50,1609
static int xdl_cleanup_merge(81,2238
static int xdl_merge_cmp_lines(96,2458
static int xdl_recs_copy_0(112,2837
static int xdl_recs_copy(136,3341
static int xdl_orig_copy(141,3483
static int fill_conflict_hunk(146,3625
static int xdl_fill_merge_buffer(224,5601
static int xdl_refine_conflicts(267,6799
static int line_contains_alnum(336,8526
static int lines_contain_alnum(344,8670
static void xdl_merge_two_conflicts(357,8972
static int xdl_simplify_non_conflicts(371,9383
static int xdl_do_merge(409,10352
int xdl_merge(571,14225

src/xdiff/xpatience.c,454
#define NON_UNIQUE 43,1707
struct hashmap 49,1834
	struct entry 51,1867
static void insert_record(74,2499
static int fill_hashmap(130,4229
static int binary_search(163,5148
static struct entry *find_longest_common_sequence(find_longest_common_sequence189,5950
static int match(222,6773
static int walk_common_sequence(234,7193
static int fall_back_to_classic_diff(287,8306
static int patience_diff(303,8770
int xdl_do_patience_diff(349,9801

src/xdiff/xprepare.c,699
#define XDL_KPDIS_RUN 26,933
#define XDL_MAX_EQLIMIT 27,957
#define XDL_SIMSCAN_WINDOW 28,986
#define XDL_GUESS_NLINES1 29,1017
#define XDL_GUESS_NLINES2 30,1047
typedef struct s_xdlclass 33,1078
} xdlclass_t;40,1211
typedef struct s_xdlclassifier 42,1226
} xdlclassifier_t;51,1394
static int xdl_init_classifier(71,2162
static void xdl_free_classifier(102,2818
static int xdl_classify_record(110,2950
static int xdl_prepare_ctx(160,4096
static void xdl_free_ctx(251,6241
int xdl_prepare_env(262,6430
void xdl_free_env(315,7705
static int xdl_clean_mmatch(322,7796
static int xdl_cleanup_records(385,9682
static int xdl_trim_ends(448,11392
static int xdl_optimize_ctxs(474,11971

src/xdiff/xprepare.h,26
#define XPREPARE_H24,934

src/xdiff/xtypes.h,296
#define XTYPES_H24,932
typedef struct s_chanode 28,952
} chanode_t;31,1017
typedef struct s_chastore 33,1031
} chastore_t;39,1155
typedef struct s_xrecord 41,1170
} xrecord_t;46,1271
typedef struct s_xdfile 48,1285
} xdfile_t;59,1482
typedef struct s_xdfenv 61,1495
} xdfenv_t;63,1543

src/xdiff/xutils.c,629
long xdl_bogosqrt(28,934
int xdl_emit_diffrec(41,1099
void *xdl_mmfile_first(xdl_mmfile_first63,1547
long xdl_mmfile_size(70,1647
int xdl_cha_init(76,1714
void xdl_cha_free(88,1924
void *xdl_cha_alloc(xdl_cha_alloc98,2075
void *xdl_cha_first(xdl_cha_first124,2586
void *xdl_cha_next(xdl_cha_next136,2780
long xdl_guess_lines(152,3085
int xdl_recmatch(173,3523
static unsigned long xdl_hash_record_with_whitespace(241,5181
unsigned long xdl_hash_record(280,6072
unsigned int xdl_hashbits(297,6449
int xdl_num_out(305,6640
long xdl_atol(328,7007
int xdl_emit_hunk_hdr(341,7281
int xdl_fall_back_diff(390,8144

src/xdiff/xutils.h,24
#define XUTILS_H24,932

tests-clar/attr/attr_expect.h,198
#define __CLAR_TEST_ATTR_EXPECT__2,34
enum attr_expect_t 4,69
	EXPECT_FALSE,5,90
	EXPECT_TRUE,6,105
	EXPECT_UNDEFINED,7,119
	EXPECT_STRING8,138
struct attr_expected 11,157
GIT_INLINE(18,279

tests-clar/attr/file.c,270
#define get_rule(5,75
#define get_assign(6,147
void test_attr_file__simple_read(8,231
void test_attr_file__match_variants(34,935
static void check_one_assign(100,3117
void test_attr_file__assign_variants(120,3687
void test_attr_file__check_attr_examples(186,6277

tests-clar/attr/flags.c,155
void test_attr_flags__cleanup(4,50
void test_attr_flags__bare(9,118
void test_attr_flags__index_vs_workdir(21,414
void test_attr_flags__subdir(61,1609

tests-clar/attr/lookup.c,265
void test_attr_lookup__simple(6,76
static void run_test_cases(31,780
void test_attr_lookup__match_variants(53,1292
void test_attr_lookup__assign_variants(146,5208
void test_attr_lookup__check_attr_examples(201,7234
void test_attr_lookup__from_buffer(236,8618

tests-clar/attr/repo.c,683
static git_repository *g_repo g_repo8,115
void test_attr_repo__initialize(10,154
void test_attr_repo__cleanup(20,505
void test_attr_repo__get_one(26,588
void test_attr_repo__get_many(76,3047
static int count_attrs(103,3922
static int cancel_iteration(116,4083
void test_attr_repo__foreach(132,4291
void test_attr_repo__manpage_example(158,4947
void test_attr_repo__macros(178,5537
void test_attr_repo__bad_macros(208,6568
#define CONTENT 248,7972
#define GITATTR 253,8112
static void add_to_workdir(257,8184
static void assert_proper_normalization(267,8417
void test_attr_repo__staging_properly_normalizes_line_endings_according_to_gitattributes_directives(282,8838

tests-clar/buf/basic.c,120
static const char *test_string test_string4,47
void test_buf_basic__resize(6,127
void test_buf_basic__printf(18,448

tests-clar/checkout/checkout.c,828
static git_repository *g_repo;g_repo7,80
void test_checkout_checkout__initialize(9,112
void test_checkout_checkout__cleanup(17,309
static void test_file_contents(23,385
void test_checkout_checkout__bare(41,789
void test_checkout_checkout__default(48,961
void test_checkout_checkout__crlf(57,1245
void test_checkout_checkout__win32_autocrlf(75,1823
static void enable_symlinks(91,2271
void test_checkout_checkout__symlinks(99,2474
void test_checkout_checkout__existing_file_skip(129,3312
void test_checkout_checkout__existing_file_overwrite(138,3652
void test_checkout_checkout__disable_filters(147,3990
void test_checkout_checkout__dir_modes(158,4427
void test_checkout_checkout__override_file_modes(180,4985
void test_checkout_checkout__open_flags(193,5291
void test_checkout_checkout__detached_head(203,5591

tests-clar/clar,56
import re,5,89
import re, fnmatch,5,89
VERSION 7,113

tests-clar/clar.h,575
#define __CLAR_TEST_H__2,24
#define cl_must_pass_(29,689
#define cl_must_fail_(30,810
#define cl_assert_(31,940
#define cl_check_pass_(36,1113
#define cl_check_fail_(37,1235
#define cl_check_(38,1366
#define cl_must_pass(43,1536
#define cl_must_fail(44,1589
#define cl_assert(45,1642
#define cl_check_pass(50,1736
#define cl_check_fail(51,1791
#define cl_check(52,1846
#define cl_fail(57,1926
#define cl_warning(58,2009
#define cl_assert_equal_s(63,2148
#define cl_assert_equal_i(64,2269
#define cl_assert_equal_b(65,2370
#define cl_assert_equal_p(66,2475

tests-clar/clar_helpers.c,570
void clar_on_init(4,46
void clar_on_shutdown(9,96
void cl_git_mkfile(14,154
void cl_git_write2file(31,492
void cl_git_append2file(42,792
void cl_git_rewritefile(47,948
char *cl_getenv(cl_getenv56,1150
int cl_setenv(80,1720
char *cl_getenv(cl_getenv97,2061
int cl_setenv(102,2124
static const char *_cl_sandbox _cl_sandbox108,2254
static git_repository *_cl_repo _cl_repo109,2293
git_repository *cl_git_sandbox_init(cl_git_sandbox_init111,2334
void cl_git_sandbox_cleanup(147,3538
bool cl_toggle_filemode(159,3729
bool cl_is_chmod_supported(170,3975

tests-clar/clar_libgit2.h,233
#define __CLAR_LIBGIT2__2,25
#define cl_git_pass(15,306
#define cl_git_fail(26,654
#define cl_assert_equal_sz(28,700
#define REP4(33,819
#define REP15(34,854
#define REP16(35,916
#define REP256(36,952
#define REP1024(37,991

tests-clar/clar_main.c,12558
#	define _MAIN_CC 19,312
#	define stat(21,339
#	define mkdir(22,379
#	define chdir(23,419
#	define access(24,453
#	define strdup(25,501
#		define strncpy(29,591
#		define W_OK 30,668
#		define S_ISDIR(31,686
#		define snprint_eq(32,729
#		define snprint_eq 34,811
	typedef struct _stat STAT_T;36,849
#	define _MAIN_CC40,946
#	define snprint_eq 41,964
	typedef struct stat STAT_T;42,993
struct clar_error 53,1229
} _clar;84,1741
struct clar_func 86,1751
struct clar_suite 91,1813
#define clar_on_test(113,2578
#define clar_on_suite(114,2611
static const struct clar_func _clar_cb_attr_file[_clar_cb_attr_file117,2684
static const struct clar_func _clar_cb_attr_flags[_clar_cb_attr_flags123,2966
static const struct clar_func _clar_cb_attr_lookup[_clar_cb_attr_lookup128,3160
static const struct clar_func _clar_cb_attr_repo[_clar_cb_attr_repo135,3492
static const struct clar_func _clar_cb_buf_basic[_clar_cb_buf_basic144,3996
static const struct clar_func _clar_cb_checkout_checkout[_clar_cb_checkout_checkout148,4132
static const struct clar_func _clar_cb_clone_clone[_clar_cb_clone_clone162,4896
static const struct clar_func _clar_cb_commit_commit[_clar_cb_commit_commit169,5198
static const struct clar_func _clar_cb_commit_parent[_clar_cb_commit_parent172,5348
static const struct clar_func _clar_cb_commit_parse[_clar_cb_commit_parse175,5510
static const struct clar_func _clar_cb_commit_signature[_clar_cb_commit_signature181,5761
static const struct clar_func _clar_cb_commit_write[_clar_cb_commit_write190,6421
static const struct clar_func _clar_cb_config_add[_clar_cb_config_add194,6572
static const struct clar_func _clar_cb_config_multivar[_clar_cb_config_multivar198,6753
static const struct clar_func _clar_cb_config_new[_clar_cb_config_new205,7051
static const struct clar_func _clar_cb_config_read[_clar_cb_config_read208,7171
static const struct clar_func _clar_cb_config_stress[_clar_cb_config_stress225,8111
static const struct clar_func _clar_cb_config_write[_clar_cb_config_write230,8381
static const struct clar_func _clar_cb_core_buffer[_clar_cb_core_buffer238,8804
static const struct clar_func _clar_cb_core_copy[_clar_cb_core_copy255,9382
static const struct clar_func _clar_cb_core_dirent[_clar_cb_core_dirent260,9558
static const struct clar_func _clar_cb_core_env[_clar_cb_core_env268,10050
static const struct clar_func _clar_cb_core_errors[_clar_cb_core_errors272,10163
static const struct clar_func _clar_cb_core_filebuf[_clar_cb_core_filebuf275,10273
static const struct clar_func _clar_cb_core_hex[_clar_cb_core_hex282,10491
static const struct clar_func _clar_cb_core_mkdir[_clar_cb_core_mkdir285,10589
static const struct clar_func _clar_cb_core_oid[_clar_cb_core_oid290,10771
static const struct clar_func _clar_cb_core_path[_clar_cb_core_path293,10865
static const struct clar_func _clar_cb_core_pool[_clar_cb_core_pool308,11643
static const struct clar_func _clar_cb_core_rmdir[_clar_cb_core_rmdir313,11787
static const struct clar_func _clar_cb_core_string[_clar_cb_core_string318,12063
static const struct clar_func _clar_cb_core_strmap[_clar_cb_core_strmap322,12185
static const struct clar_func _clar_cb_core_strtol[_clar_cb_core_strtol328,12367
static const struct clar_func _clar_cb_core_vector[_clar_cb_core_vector332,12505
static const struct clar_func _clar_cb_date_date[_clar_cb_date_date340,12747
static const struct clar_func _clar_cb_diff_blob[_clar_cb_diff_blob343,12849
static const struct clar_func _clar_cb_diff_index[_clar_cb_diff_index351,13457
static const struct clar_func _clar_cb_diff_iterator[_clar_cb_diff_iterator355,13576
static const struct clar_func _clar_cb_diff_patch[_clar_cb_diff_patch384,15220
static const struct clar_func _clar_cb_diff_tree[_clar_cb_diff_tree387,15392
static const struct clar_func _clar_cb_diff_workdir[_clar_cb_diff_workdir393,15590
static const struct clar_func _clar_cb_index_filemodes[_clar_cb_index_filemodes402,16138
static const struct clar_func _clar_cb_index_read_tree[_clar_cb_index_read_tree407,16340
static const struct clar_func _clar_cb_index_rename[_clar_cb_index_rename410,16480
static const struct clar_func _clar_cb_index_tests[_clar_cb_index_tests413,16594
static const struct clar_func _clar_cb_network_createremotethenload[_clar_cb_network_createremotethenload424,17084
static const struct clar_func _clar_cb_network_remotelocal[_clar_cb_network_remotelocal427,17222
static const struct clar_func _clar_cb_network_remotes[_clar_cb_network_remotes433,17686
static const struct clar_func _clar_cb_notes_notes[_clar_cb_notes_notes452,18888
static const struct clar_func _clar_cb_notes_notesref[_clar_cb_notes_notesref464,20194
static const struct clar_func _clar_cb_object_blob_filter[_clar_cb_object_blob_filter467,20328
static const struct clar_func _clar_cb_object_blob_fromchunks[_clar_cb_object_blob_fromchunks472,20544
static const struct clar_func _clar_cb_object_blob_write[_clar_cb_object_blob_write476,20913
static const struct clar_func _clar_cb_object_commit_commitstagedfile[_clar_cb_object_commit_commitstagedfile481,21565
static const struct clar_func _clar_cb_object_lookup[_clar_cb_object_lookup485,21834
static const struct clar_func _clar_cb_object_message[_clar_cb_object_message491,22358
static const struct clar_func _clar_cb_object_peel[_clar_cb_object_peel508,24408
static const struct clar_func _clar_cb_object_raw_chars[_clar_cb_object_raw_chars516,24952
static const struct clar_func _clar_cb_object_raw_compare[_clar_cb_object_raw_compare520,25195
static const struct clar_func _clar_cb_object_raw_convert[_clar_cb_object_raw_convert529,25853
static const struct clar_func _clar_cb_object_raw_fromstr[_clar_cb_object_raw_fromstr533,26140
static const struct clar_func _clar_cb_object_raw_hash[_clar_cb_object_raw_hash537,26385
static const struct clar_func _clar_cb_object_raw_short[_clar_cb_object_raw_short550,27201
static const struct clar_func _clar_cb_object_raw_size[_clar_cb_object_raw_size554,27468
static const struct clar_func _clar_cb_object_raw_type2string[_clar_cb_object_raw_type2string557,27600
static const struct clar_func _clar_cb_object_raw_write[_clar_cb_object_raw_write562,27916
static const struct clar_func _clar_cb_object_tag_peel[_clar_cb_object_tag_peel571,28356
static const struct clar_func _clar_cb_object_tag_read[_clar_cb_object_tag_read576,28686
static const struct clar_func _clar_cb_object_tag_write[_clar_cb_object_tag_write582,28962
static const struct clar_func _clar_cb_object_tree_attributes[_clar_cb_object_tree_attributes590,29353
static const struct clar_func _clar_cb_object_tree_frompath[_clar_cb_object_tree_frompath596,30064
static const struct clar_func _clar_cb_object_tree_read[_clar_cb_object_tree_read600,30353
static const struct clar_func _clar_cb_object_tree_walk[_clar_cb_object_tree_walk604,30504
static const struct clar_func _clar_cb_object_tree_write[_clar_cb_object_tree_write608,30641
static const struct clar_func _clar_cb_odb_foreach[_clar_cb_odb_foreach613,30877
static const struct clar_func _clar_cb_odb_loose[_clar_cb_odb_loose618,31087
static const struct clar_func _clar_cb_odb_mixed[_clar_cb_odb_mixed622,31235
static const struct clar_func _clar_cb_odb_packed[_clar_cb_odb_packed625,31335
static const struct clar_func _clar_cb_odb_packed_one[_clar_cb_odb_packed_one630,31547
static const struct clar_func _clar_cb_odb_sorting[_clar_cb_odb_sorting634,31718
static const struct clar_func _clar_cb_refs_branches_create[_clar_cb_refs_branches_create638,31932
static const struct clar_func _clar_cb_refs_branches_delete[_clar_cb_refs_branches_delete645,32682
static const struct clar_func _clar_cb_refs_branches_foreach[_clar_cb_refs_branches_foreach654,33544
static const struct clar_func _clar_cb_refs_branches_lookup[_clar_cb_refs_branches_lookup661,34046
static const struct clar_func _clar_cb_refs_branches_move[_clar_cb_refs_branches_move666,34464
static const struct clar_func _clar_cb_refs_branches_tracking[_clar_cb_refs_branches_tracking674,35275
static const struct clar_func _clar_cb_refs_crashes[_clar_cb_refs_crashes680,36052
static const struct clar_func _clar_cb_refs_create[_clar_cb_refs_create683,36166
static const struct clar_func _clar_cb_refs_delete[_clar_cb_refs_delete689,36410
static const struct clar_func _clar_cb_refs_foreachglob[_clar_cb_refs_foreachglob693,36574
static const struct clar_func _clar_cb_refs_list[_clar_cb_refs_list700,37024
static const struct clar_func _clar_cb_refs_listall[_clar_cb_refs_listall704,37168
static const struct clar_func _clar_cb_refs_lookup[_clar_cb_refs_lookup708,37459
static const struct clar_func _clar_cb_refs_normalize[_clar_cb_refs_normalize712,37607
static const struct clar_func _clar_cb_refs_overwrite[_clar_cb_refs_overwrite717,37813
static const struct clar_func _clar_cb_refs_pack[_clar_cb_refs_pack723,38128
static const struct clar_func _clar_cb_refs_read[_clar_cb_refs_read727,38260
static const struct clar_func _clar_cb_refs_reflog_drop[_clar_cb_refs_reflog_drop741,38994
static const struct clar_func _clar_cb_refs_reflog_reflog[_clar_cb_refs_reflog_reflog751,39871
static const struct clar_func _clar_cb_refs_rename[_clar_cb_refs_rename758,40455
static const struct clar_func _clar_cb_refs_revparse[_clar_cb_refs_revparse770,41023
static const struct clar_func _clar_cb_refs_unicode[_clar_cb_refs_unicode793,42223
static const struct clar_func _clar_cb_repo_discover[_clar_cb_repo_discover796,42349
static const struct clar_func _clar_cb_repo_getters[_clar_cb_repo_getters799,42445
static const struct clar_func _clar_cb_repo_init[_clar_cb_repo_init805,42758
static const struct clar_func _clar_cb_repo_message[_clar_cb_repo_message823,43924
static const struct clar_func _clar_cb_repo_open[_clar_cb_repo_open827,44067
static const struct clar_func _clar_cb_repo_setters[_clar_cb_repo_setters839,44811
static const struct clar_func _clar_cb_reset_mixed[_clar_cb_reset_mixed846,45621
static const struct clar_func _clar_cb_reset_soft[_clar_cb_reset_soft850,45901
static const struct clar_func _clar_cb_revwalk_basic[_clar_cb_revwalk_basic857,46677
static const struct clar_func _clar_cb_revwalk_mergebase[_clar_cb_revwalk_mergebase864,47041
static const struct clar_func _clar_cb_revwalk_signatureparsing[_clar_cb_revwalk_signatureparsing872,47555
static const struct clar_func _clar_cb_status_ignore[_clar_cb_status_ignore875,47763
static const struct clar_func _clar_cb_status_single[_clar_cb_status_single883,48235
static const struct clar_func _clar_cb_status_submodules[_clar_cb_status_submodules886,48361
static const struct clar_func _clar_cb_status_worktree[_clar_cb_status_worktree892,48597
static const struct clar_func _clar_cb_submodule_lookup[_clar_cb_submodule_lookup921,50681
static const struct clar_func _clar_cb_submodule_modify[_clar_cb_submodule_modify926,50905
static const struct clar_func _clar_cb_submodule_status[_clar_cb_submodule_status932,51152
static const struct clar_func _clar_cb_threads_basic[_clar_cb_threads_basic939,51500
static const struct clar_suite _clar_suites[_clar_suites943,51605
static size_t _clar_suite_count 1793,72362
static size_t _clar_callback_count 1794,72401
clar_report_errors(1798,72482
clar_run_test(1816,72777
clar_run_suite(1858,73565
clar_run_single(1878,74027
clar_usage(1890,74283
clar_parse_args(1900,74524
clar_test(1943,75315
clar__assert(1980,75904
void clar__assert_equal_s(2027,76788
void clar__assert_equal_i(2044,77140
void cl_set_cleanup(2059,77393
static char _clar_path[_clar_path2065,77528
is_valid_tmp_path(2068,77570
find_tmp_path(2082,77750
static void clar_unsandbox(2123,78508
static int build_sandbox_path(2135,78641
static int clar_sandbox(2181,79476
fixture_path(2194,79656
const char *cl_fixture(cl_fixture2216,80050
void cl_fixture_sandbox(2221,80159
void cl_fixture_cleanup(2226,80262
#define FOF_FLAGS 2234,80387
fileops_path(2237,80491
fileops(2264,80869
fs_rm(2288,81286
fs_copy(2294,81366
cl_fs_cleanup(2300,81459
shell_out(2307,81540
fs_copy(2329,81826
fs_rm(2356,82267
cl_fs_cleanup(2372,82478
static void clar_print_init(2380,82547
static void clar_print_shutdown(2388,82726
static void clar_print_error(2402,83053
static void clar_print_ontest(2420,83523
static void clar_print_onsuite(2431,83717
static void clar_print_onabort(2436,83852
int _MAIN_CC main(2446,84025

tests-clar/clone/clone.c,478
#define DO_LOCAL_TEST 6,76
#define DO_LIVE_NETWORK_TESTS 7,100
#define LIVE_REPO_URL 8,132
static git_repository *g_repo;g_repo11,196
void test_clone_clone__initialize(13,228
void test_clone_clone__cleanup(18,289
static void build_local_file_url(27,454
void test_clone_clone__bad_url(67,1365
void test_clone_clone__local(77,1703
void test_clone_clone__network_full(94,2195
void test_clone_clone__network_bare(106,2535
void test_clone_clone__already_exists(119,2870

tests-clar/commit/commit.c,186
static git_repository *_repo;_repo3,27
void test_commit_commit__initialize(5,58
void test_commit_commit__cleanup(11,201
void test_commit_commit__create_unexisting_update_ref(17,311

tests-clar/commit/parent.c,274
static git_repository *_repo;_repo3,27
static git_commit *commit;commit4,57
void test_commit_parent__initialize(6,85
void test_commit_parent__cleanup(16,342
static void assert_nth_gen_parent(22,441
void test_commit_parent__can_retrieve_nth_generation_parent(51,1185

tests-clar/commit/parse.c,856
static git_repository *g_repo;g_repo7,111
void test_commit_parse__initialize(8,142
void test_commit_parse__cleanup(12,232
} parse_test_case;22,384
static parse_test_case passing_header_cases[passing_header_cases24,404
static parse_test_case failing_header_cases[failing_header_cases36,1052
void test_commit_parse__header(49,1640
} passing_signature_test_case;81,2438
passing_signature_test_case passing_signature_cases[passing_signature_cases83,2470
} failing_signature_test_case;130,6476
failing_signature_test_case failing_signature_cases[failing_signature_cases132,6508
void test_commit_parse__signature(143,6976
static char *failing_commit_cases[failing_commit_cases173,8098
static char *passing_commit_cases[passing_commit_cases214,9451
void test_commit_parse__entire_commit(241,10480
void test_commit_parse__details0(293,11943

tests-clar/commit/signature.c,524
static int try_build_signature(3,27
static void assert_name_and_email(16,318
void test_commit_signature__leading_and_trailing_spaces_are_trimmed(31,670
void test_commit_signature__angle_brackets_in_names_are_not_supported(36,864
void test_commit_signature__angle_brackets_in_email_are_not_supported(43,1185
void test_commit_signature__create_empties(50,1507
void test_commit_signature__create_one_char(61,2016
void test_commit_signature__create_two_char(67,2176
void test_commit_signature__create_zero_char(73,2338

tests-clar/commit/write.c,659
static const char *committer_name committer_name3,27
static const char *committer_email committer_email4,79
static const char *commit_message commit_message5,137
static const char *tree_oid tree_oid7,294
static const char *root_commit_message root_commit_message8,368
static char *head_old;head_old10,506
static git_reference *head,head11,529
static git_reference *head, *branch;branch11,529
static git_commit *commit;commit12,566
static git_repository *g_repo;g_repo15,611
void test_commit_write__initialize(16,642
void test_commit_write__cleanup(20,732
void test_commit_write__from_memory(34,969
void test_commit_write__root(91,2838

tests-clar/config/add.c,171
void test_config_add__initialize(3,27
void test_config_add__cleanup(8,111
void test_config_add__to_existing_section(13,185
void test_config_add__to_new_section(26,534

tests-clar/config/multivar.c,397
static const char *_name _name3,27
void test_config_multivar__initialize(5,75
void test_config_multivar__cleanup(10,155
static int mv_read_cb(15,232
void test_config_multivar__foreach(27,403
static int cb(40,655
void test_config_multivar__get(51,768
void test_config_multivar__add(69,1117
void test_config_multivar__replace(102,1934
void test_config_multivar__replace_multiple(130,2562

tests-clar/config/new.c,72
#define TEST_CONFIG 7,89
void test_config_new__write_new_config(9,127

tests-clar/config/read.c,833
void test_config_read__simple_read(3,27
void test_config_read__case_sensitive(22,547
void test_config_read__multiline_value(50,1316
void test_config_read__subsection_header(66,1693
void test_config_read__lone_variable(82,2116
void test_config_read__number_suffixes(99,2496
void test_config_read__blank_lines(130,3313
void test_config_read__invalid_ext_headers(146,3672
void test_config_read__empty_files(152,3819
void test_config_read__header_in_last_line(159,3980
void test_config_read__prefixes(167,4151
void test_config_read__escaping_quotes(182,4572
static int count_cfg_entries(194,4910
static int cfg_callback_countdown(204,5092
void test_config_read__foreach(216,5312
void test_config_read__foreach_match(234,5723
void test_config_read__whitespace_not_required_around_assignment(269,6555
BEGIN_TEST(287,6946

tests-clar/config/stress.c,244
void test_config_stress__initialize(7,89
void test_config_stress__cleanup(19,392
void test_config_stress__dont_break_on_invalid_input(24,466
void test_config_stress__comments(41,978
void test_config_stress__escape_subsection_names(63,1712

tests-clar/config/write.c,377
void test_config_write__initialize(3,27
void test_config_write__cleanup(8,112
void test_config_write__replace_value(13,187
void test_config_write__delete_value(51,1400
void test_config_write__write_subsection(70,1957
void test_config_write__delete_inexistent(85,2366
void test_config_write__value_containing_quotes(94,2587
void test_config_write__escape_value(123,3711

tests-clar/core/buffer.c,992
#define TESTSTR 4,47
const char *test_string test_string5,108
const char *test_string_x2 test_string_x26,143
#define TESTSTR_4096 8,190
#define TESTSTR_8192 9,227
const char *test_4096 test_409610,268
const char *test_8192 test_819211,306
void test_core_buffer__0(14,381
void test_core_buffer__1(32,773
void test_core_buffer__2(48,1202
void test_core_buffer__3(160,4232
void test_core_buffer__4(183,4835
check_buf_append(217,5803
check_buf_append_abc(239,6298
void test_core_buffer__5(279,7326
void test_core_buffer__6(323,8983
void test_core_buffer__7(347,9470
check_joinbuf_2(391,10285
check_joinbuf_n_2(406,10560
check_joinbuf_n_4(425,10901
void test_core_buffer__8(441,11224
void test_core_buffer__9(505,13520
void test_core_buffer__10(548,15073
void test_core_buffer__11(565,15598
void test_core_buffer__rfind_variants(615,16804
void test_core_buffer__puts_escaped(639,17375
static void assert_unescape(662,18041
void test_core_buffer__unescape(673,18321

tests-clar/core/copy.c,108
void test_core_copy__file(6,85
void test_core_copy__file_in_dir(23,503
void test_core_copy__tree(48,1276

tests-clar/core/dirent.c,1037
typedef struct name_data 4,48
} name_data;7,135
typedef struct walk_data 9,149
} walk_data;13,270
static char *top_dir top_dir16,285
static walk_data *state_loc;state_loc17,320
static void setup(19,350
static void dirent_cleanup__cb(42,744
static void check_counts(61,1056
static int one_entry(70,1183
static int dont_call_me(91,1508
static name_data dot_names[dot_names100,1625
static walk_data dot 106,1734
void test_core_dirent__dont_traverse_dot(113,1848
static name_data sub_names[sub_names126,2052
static walk_data sub 132,2167
void test_core_dirent__traverse_subfolder(139,2257
static walk_data sub_slash 152,2462
void test_core_dirent__traverse_slash_terminated_folder(159,2576
static name_data empty_names[empty_names172,2825
static walk_data empty 175,2876
void test_core_dirent__dont_traverse_empty_folders(182,2998
static name_data odd_names[odd_names199,3336
static walk_data odd 207,3522
void test_core_dirent__traverse_weird_filenames(214,3654
void test_core_dirent__length_limits(227,3898

tests-clar/core/env.c,279
static char *env_userprofile env_userprofile6,83
static char *env_programfiles env_programfiles7,120
static char *env_home env_home9,164
void test_core_env__initialize(12,202
void test_core_env__cleanup(22,397
void test_core_env__0(34,645
void test_core_env__1(86,2108

tests-clar/core/errors.c,40
void test_core_errors__new_school(6,84

tests-clar/core/filebuf.c,172
void test_core_filebuf__0(5,113
void test_core_filebuf__1(24,512
void test_core_filebuf__2(44,1029
void test_core_filebuf__4(60,1459
void test_core_filebuf__5(76,1790

tests-clar/core/hex.c,34
void test_core_hex__fromhex(4,45

tests-clar/core/mkdir.c,289
static void cleanup_basic_dirs(6,85
void test_core_mkdir__basic(16,445
static void cleanup_basedir(56,1796
void test_core_mkdir__with_base(62,1919
#define BASEDIR 64,1959
static void cleanup_chmod_root(102,3418
static void check_mode(114,3611
void test_core_mkdir__chmods(124,3861

tests-clar/core/oid.c,130
static git_oid id;3,27
const char *str_oid str_oid4,46
void test_core_oid__initialize(6,113
void test_core_oid__streq(11,200

tests-clar/core/path.c,1042
check_dirname(5,60
check_basename(20,361
check_topdir(35,673
check_joinpath(44,828
check_joinpath_n(55,1109
void test_core_path__00_dirname(73,1491
void test_core_path__01_basename(93,2024
void test_core_path__02_topdir(110,2472
void test_core_path__05_joins(127,2961
void test_core_path__06_long_joins(162,4245
check_path_to_dir(184,5112
check_string_to_dir(198,5348
void test_core_path__07_path_to_dir(217,5672
void test_core_path__08_self_join(245,6600
static void check_percent_decoding(279,7684
void test_core_path__09_percent_decode(289,7929
static void check_fromurl(303,8423
#define ABS_PATH_MARKER 319,8808
#define ABS_PATH_MARKER 321,8841
void test_core_path__10_fromurl(324,8877
} check_walkup_info;345,9733
static int check_one_walkup_step(347,9755
void test_core_path__11_walkup(356,10019
void test_core_path__12_offset_to_path_root(394,11099
#define NON_EXISTING_FILEPATH 409,11599
void test_core_path__13_cannot_prettify_a_non_existing_file(411,11654
void test_core_path__14_apply_relative(422,12022

tests-clar/core/pool.c,127
void test_core_pool__0(5,67
void test_core_pool__1(30,585
static char to_hex[to_hex58,1236
void test_core_pool__2(60,1280

tests-clar/core/rmdir.c,255
static const char *empty_tmp_dir empty_tmp_dir4,48
void test_core_rmdir__initialize(6,116
void test_core_rmdir__delete_recursive(31,856
void test_core_rmdir__fail_to_delete_non_empty_dir(37,1046
void test_core_rmdir__can_skip__non_empty_dir(53,1479

tests-clar/core/string.c,64
void test_core_string__0(4,50
void test_core_string__1(17,449

tests-clar/core/strmap.c,189
GIT__USE_STRMAP;4,47
void test_core_strmap__0(6,65
static void insert_strings(14,242
void test_core_strmap__1(36,743
void test_core_strmap__2(57,1219
void test_core_strmap__3(88,2056

tests-clar/core/strtol.c,72
void test_core_strtol__int32(3,27
void test_core_strtol__int64(20,534

tests-clar/core/vector.c,445
void test_core_vector__0(5,109
void test_core_vector__1(18,340
static int test_cmp(32,677
void test_core_vector__2(38,799
static int compare_them(67,1394
void test_core_vector__3(73,1507
void test_core_vector__4(96,1957
} my_struct;129,2595
static int _struct_count 131,2609
static int compare_structs(133,2640
static int merge_structs(139,2779
static my_struct *alloc_struct(alloc_struct149,3039
void test_core_vector__5(159,3260

tests-clar/date/date.c,36
void test_date_date__overflow(5,46

tests-clar/diff/blob.c,753
static git_repository *g_repo g_repo4,53
static diff_expects expected;5,91
static git_diff_options opts;6,121
static git_blob *d,d7,151
static git_blob *d, *alien;alien7,151
void test_diff_blob__initialize(9,180
void test_diff_blob__cleanup(30,695
void test_diff_blob__can_compare_text_blobs(38,805
void test_diff_blob__can_compare_against_null_blobs(120,3423
static void assert_identical_blobs_comparison(177,5075
void test_diff_blob__can_compare_identical_blobs(185,5291
static void assert_binary_blobs_comparison(208,6072
void test_diff_blob__can_compare_two_binary_blobs(218,6341
void test_diff_blob__can_compare_a_binary_blob_and_a_text_blob(242,6944
void test_diff_blob__comparing_two_text_blobs_honors_interhunkcontext(280,7866

tests-clar/diff/diff_helpers.c,147
git_tree *resolve_commit_oid_to_tree(resolve_commit_oid_to_tree4,53
int diff_file_fn(24,592
int diff_hunk_fn(49,1166
int diff_line_fn(68,1494

tests-clar/diff/diff_helpers.h,23
} diff_expects;26,434

tests-clar/diff/index.c,230
static git_repository *g_repo g_repo4,53
void test_diff_index__initialize(6,92
void test_diff_index__cleanup(11,177
void test_diff_index__0(16,245
static int diff_stop_after_2_files(94,2227
void test_diff_index__1(109,2437

tests-clar/diff/iterator.c,2818
void test_diff_iterator__initialize(5,75
void test_diff_iterator__cleanup(14,347
static void tree_iterator_test(22,452
const char *expected_tree_0[expected_tree_057,1246
void test_diff_iterator__tree_0(77,1559
const char *expected_tree_1[expected_tree_183,1729
void test_diff_iterator__tree_1(100,2000
const char *expected_tree_2[expected_tree_2106,2175
void test_diff_iterator__tree_2(122,2506
const char *expected_tree_3[expected_tree_3128,2673
void test_diff_iterator__tree_3(139,2909
const char *expected_tree_4[expected_tree_4145,3106
void test_diff_iterator__tree_4(172,3543
void test_diff_iterator__tree_4_ranged(179,3697
const char *expected_tree_ranged_0[expected_tree_ranged_0187,3867
void test_diff_iterator__tree_ranged_0(198,4029
const char *expected_tree_ranged_1[expected_tree_ranged_1206,4201
void test_diff_iterator__tree_ranged_1(211,4277
void test_diff_iterator__tree_range_empty_0(219,4482
void test_diff_iterator__tree_range_empty_1(226,4642
void test_diff_iterator__tree_range_empty_2(233,4807
static void index_iterator_test(242,5010
static const char *expected_index_0[expected_index_0277,5836
static const char *expected_index_oids_0[expected_index_oids_0303,6275
void test_diff_iterator__index_0(329,7360
static const char *expected_index_range[expected_index_range335,7494
static const char *expected_index_oids_range[expected_index_oids_range342,7608
void test_diff_iterator__index_range(349,7843
void test_diff_iterator__index_range_empty_0(355,7992
void test_diff_iterator__index_range_empty_1(361,8114
void test_diff_iterator__index_range_empty_2(367,8241
static const char *expected_index_1[expected_index_1373,8372
static const char* expected_index_oids_1[expected_index_oids_1389,8729
void test_diff_iterator__index_1(405,9364
static void workdir_iterator_test(414,9537
void test_diff_iterator__workdir_0(458,10581
static const char *status_paths[status_paths463,10691
void test_diff_iterator__workdir_1(481,11043
static const char *status_paths_range_0[status_paths_range_0487,11175
void test_diff_iterator__workdir_1_ranged_0(496,11369
static const char *status_paths_range_1[status_paths_range_1502,11515
void test_diff_iterator__workdir_1_ranged_1(506,11588
static const char *status_paths_range_3[status_paths_range_3513,11750
void test_diff_iterator__workdir_1_ranged_3(520,11870
static const char *status_paths_range_4[status_paths_range_4527,12032
void test_diff_iterator__workdir_1_ranged_4(535,12174
static const char *status_paths_range_5[status_paths_range_5541,12317
void test_diff_iterator__workdir_1_ranged_5(546,12398
void test_diff_iterator__workdir_1_ranged_empty_0(553,12574
void test_diff_iterator__workdir_1_ranged_empty_1(560,12721
void test_diff_iterator__workdir_1_ranged_empty_2(567,12857

tests-clar/diff/patch.c,292
static git_repository *g_repo g_repo4,53
void test_diff_patch__initialize(6,92
void test_diff_patch__cleanup(11,177
#define EXPECTED_HEADER 16,245
#define EXPECTED_HUNK 22,418
static int check_removal_cb(24,461
void test_diff_patch__can_properly_display_the_removal_of_a_file(69,1474

tests-clar/diff/tree.c,260
static git_repository *g_repo g_repo4,53
void test_diff_tree__initialize(6,92
void test_diff_tree__cleanup(10,135
void test_diff_tree__0(15,202
void test_diff_tree__options(83,1939
void test_diff_tree__bare(171,5117
void test_diff_tree__merge(212,6112

tests-clar/diff/workdir.c,508
static git_repository *g_repo g_repo4,53
void test_diff_workdir__initialize(6,92
void test_diff_workdir__cleanup(10,138
void test_diff_workdir__to_index(15,208
void test_diff_workdir__to_tree(58,1287
void test_diff_workdir__to_index_with_pathspec(172,4962
void test_diff_workdir__filemode_changes(247,7136
void test_diff_workdir__filemode_changes_with_filemode_false(295,8286
void test_diff_workdir__head_index_and_workdir_all_differ(343,9457
void test_diff_workdir__eof_newline_changes(416,11812

tests-clar/index/filemodes.c,388
static git_repository *g_repo g_repo6,85
void test_index_filemodes__initialize(8,124
void test_index_filemodes__cleanup(13,217
void test_index_filemodes__read(18,290
static void replace_file_with_mode(36,719
static void add_and_check_mode(53,1214
static void append_and_check_mode(68,1543
void test_index_filemodes__untrusted(88,2089
void test_index_filemodes__trusted(151,4537

tests-clar/index/read_tree.c,56
void test_index_read_tree__read_write_involution(5,100

tests-clar/index/rename.c,42
void test_index_rename__single_file(4,46

tests-clar/index/tests.c,808
static const int index_entry_count 4,46
static const int index_entry_count_2 5,88
#define TEST_INDEX_PATH 6,133
#define TEST_INDEX2_PATH 7,190
#define TEST_INDEXBIG_PATH 8,242
struct test_entry 12,309
static struct test_entry test_entries[test_entries19,411
static void copy_file(29,687
static void files_are_equal(47,1075
void test_index_tests__initialize(71,1539
void test_index_tests__cleanup(75,1584
void test_index_tests__empty_index(80,1627
void test_index_tests__default_test_index(93,1902
void test_index_tests__gitgit_index(118,2609
void test_index_tests__find_in_existing(132,2946
void test_index_tests__find_in_empty(147,3288
void test_index_tests__write(162,3616
void test_index_tests__sort0(179,3973
void test_index_tests__sort1(193,4338
void test_index_tests__add(206,4603

tests-clar/network/createremotethenload.c,320
static git_remote *_remote;_remote3,27
static git_repository *_repo;_repo4,55
static git_config *_config;_config5,85
static char url[url6,113
void test_network_createremotethenload__initialize(8,175
void test_network_createremotethenload__cleanup(22,655
void test_network_createremotethenload__parsing(29,807

tests-clar/network/remotelocal.c,669
static git_repository *repo;repo7,107
static git_buf file_path_buf 8,136
static git_remote *remote;remote9,181
static void build_local_file_url(11,209
void test_network_remotelocal__initialize(50,1120
void test_network_remotelocal__cleanup(56,1260
static int count_ref__cb(64,1431
static int ensure_peeled__cb(74,1568
static void connect_to_local_repository(84,1805
void test_network_remotelocal__connected(93,2083
void test_network_remotelocal__retrieve_advertised_references(102,2311
void test_network_remotelocal__retrieve_advertised_references_from_spaced_repository(113,2577
void test_network_remotelocal__nested_tags_are_completely_peeled(132,3109

tests-clar/network/remotes.c,1156
static git_remote *_remote;_remote7,111
static git_repository *_repo;_repo8,139
static const git_refspec *_refspec;_refspec9,169
void test_network_remotes__initialize(11,206
void test_network_remotes__cleanup(22,482
void test_network_remotes__parsing(29,621
void test_network_remotes__pushurl(55,1702
void test_network_remotes__parsing_ssh_remote(64,2025
void test_network_remotes__parsing_local_path_fails_if_path_not_found(69,2156
void test_network_remotes__supported_transport_methods_are_supported(74,2305
void test_network_remotes__unsupported_transport_methods_are_unsupported(79,2462
void test_network_remotes__refspec_parsing(84,2625
void test_network_remotes__set_fetchspec(90,2812
void test_network_remotes__set_pushspec(98,3087
void test_network_remotes__save(106,3359
void test_network_remotes__fnmatch(146,4977
void test_network_remotes__transform(152,5171
void test_network_remotes__transform_r(161,5408
void test_network_remotes__missing_refspecs(170,5654
void test_network_remotes__list(183,5977
void test_network_remotes__loading_a_missing_remote_returns_ENOTFOUND(201,6423
void test_network_remotes__add(215,6835

tests-clar/notes/notes.c,1277
static git_repository *_repo;_repo3,27
static git_signature *_sig;_sig4,57
void test_notes_notes__initialize(6,86
void test_notes_notes__cleanup(12,247
static void assert_note_equal(18,343
static void create_note(30,719
} list_expectations[list_expectations41,1079
#define EXPECTATIONS_COUNT 49,1497
static int note_list_cb(51,1586
void test_notes_notes__can_retrieve_a_list_of_notes_for_a_given_namespace(88,3468
static int note_cancel_cb(104,4313
void test_notes_notes__can_cancel_foreach(115,4495
void test_notes_notes__retrieving_a_list_of_notes_for_an_unknown_namespace_returns_ENOTFOUND(131,5293
void test_notes_notes__inserting_a_note_without_passing_a_namespace_uses_the_default_namespace(143,5638
void test_notes_notes__can_insert_a_note_with_a_custom_namespace(164,6422
void test_notes_notes__creating_a_note_on_a_target_which_already_has_one_returns_EEXISTS(184,7084
static char *messages[messages202,7854
#define MESSAGES_COUNT 221,8567
void test_notes_notes__can_insert_a_note_in_an_existing_fanout(233,8952
void test_notes_notes__can_read_a_note_in_an_existing_fanout(254,9598
void test_notes_notes__can_remove_a_note_in_an_existing_fanout(268,10051
void test_notes_notes__removing_a_note_which_doesnt_exists_returns_ENOTFOUND(279,10414

tests-clar/notes/notesref.c,292
static git_repository *_repo;_repo5,47
static git_note *_note;_note6,77
static git_signature *_sig;_sig7,101
static git_config *_cfg;_cfg8,129
void test_notes_notesref__initialize(10,155
void test_notes_notesref__cleanup(16,299
void test_notes_notesref__config_corenotesref(26,485

tests-clar/object/blob/filter.c,518
static git_repository *g_repo g_repo6,84
#define NUM_TEST_OBJECTS 7,122
static git_oid g_oids[g_oids8,149
static const char *g_raw[g_raw9,190
static int g_len[g_len17,394
static git_text_stats g_stats[g_stats18,459
static git_buf g_crlf_filtered[g_crlf_filtered26,652
void test_object_blob_filter__initialize(35,917
void test_object_blob_filter__cleanup(54,1399
void test_object_blob_filter__unfiltered(61,1538
void test_object_blob_filter__stats(74,1873
void test_object_blob_filter__to_odb(92,2293

tests-clar/object/blob/fromchunks.c,542
static git_repository *repo;repo7,105
static char textual_content[textual_content8,134
void test_object_blob_fromchunks__initialize(10,186
void test_object_blob_fromchunks__cleanup(15,287
static int text_chunked_source_cb(20,367
void test_object_blob_fromchunks__can_create_a_blob_from_a_in_memory_chunk_provider(36,638
#define GITATTR 52,1158
static void write_attributes(56,1230
static void assert_named_chunked_blob(69,1598
void test_object_blob_fromchunks__creating_a_blob_from_chunks_honors_the_attributes_directives(80,1948

tests-clar/object/blob/write.c,611
static git_repository *repo;repo7,105
#define WORKDIR 9,135
#define BARE_REPO 10,173
#define ELSEWHERE 11,206
typedef int (*blob_creator_fn)blob_creator_fn13,237
void test_object_blob_write__cleanup(18,317
static void assert_blob_creation(23,392
void test_object_blob_write__can_create_a_blob_in_a_standard_repo_from_a_file_located_in_the_working_directory(32,722
void test_object_blob_write__can_create_a_blob_in_a_standard_repo_from_a_absolute_filepath_pointing_outside_of_the_working_directory(39,966
void test_object_blob_write__can_create_a_blob_in_a_bare_repo_from_a_absolute_filepath(55,1551

tests-clar/object/commit/commitstagedfile.c,307
static git_repository *repo;repo4,46
void test_object_commit_commitstagedfile__initialize(6,76
void test_object_commit_commitstagedfile__cleanup(13,255
void test_object_commit_commitstagedfile__generate_predictable_object_ids(19,380
void test_object_commit_commitstagedfile__message_prettify(132,3433

tests-clar/object/lookup.c,433
static git_repository *g_repo;g_repo5,52
void test_object_lookup__initialize(7,84
void test_object_lookup__cleanup(12,205
void test_object_lookup__lookup_wrong_type_returns_enotfound(17,281
void test_object_lookup__lookup_nonexisting_returns_enotfound(28,593
void test_object_lookup__lookup_wrong_type_by_abbreviated_id_returns_enotfound(39,908
void test_object_lookup__lookup_wrong_type_eventually_returns_enotfound(50,1245

tests-clar/object/message.c,1431
static void assert_message_prettifying(5,68
#define t40 15,390
#define s40 16,445
#define sss 17,500
#define ttt 18,561
void test_object_message__long_lines_without_spaces_should_be_unchanged(22,720
void test_object_message__lines_with_spaces_at_the_beginning_should_be_unchanged(30,1039
void test_object_message__lines_with_intermediate_spaces_should_be_unchanged(37,1320
void test_object_message__consecutive_blank_lines_should_be_unified(43,1542
void test_object_message__only_consecutive_blank_lines_should_be_completely_removed(60,2565
void test_object_message__consecutive_blank_lines_at_the_beginning_should_be_removed(68,2873
void test_object_message__consecutive_blank_lines_at_the_end_should_be_removed(83,3777
void test_object_message__text_without_newline_at_end_should_end_with_newline(98,4653
void test_object_message__text_plus_spaces_without_newline_should_not_show_spaces_and_end_with_newline(106,4978
void test_object_message__text_plus_spaces_ending_with_newline_should_be_cleaned_and_newline_must_remain(116,5446
void test_object_message__spaces_with_newline_at_end_should_be_replaced_with_empty_string(125,5945
void test_object_message__spaces_without_newline_at_end_should_be_replaced_with_empty_string(133,6254
void test_object_message__consecutive_text_lines_should_be_unchanged(141,6545
void test_object_message__strip_comments(151,7239
void test_object_message__keep_comments(162,7663

tests-clar/object/peel.c,547
static git_repository *g_repo;g_repo3,27
void test_object_peel__initialize(5,59
void test_object_peel__cleanup(10,176
static void assert_peel(15,248
static void assert_peel_error(33,770
void test_object_peel__peeling_an_object_into_its_own_type_returns_another_instance_of_it(47,1121
void test_object_peel__can_peel_a_tag(55,1687
void test_object_peel__can_peel_a_commit(61,1970
void test_object_peel__cannot_peel_a_tree(66,2138
void test_object_peel__cannot_peel_a_blob(71,2285
void test_object_peel__cannot_target_any_object(76,2429

tests-clar/object/raw/chars.c,127
void test_object_raw_chars__find_invalid_chars_in_oid(6,46
void test_object_raw_chars__build_valid_oid_from_raw_bytes(30,650

tests-clar/object/raw/compare.c,448
void test_object_raw_compare__succeed_on_copy_oid(6,46
void test_object_raw_compare__succeed_on_oid_comparison_lesser(21,402
void test_object_raw_compare__succeed_on_oid_comparison_equal(41,900
void test_object_raw_compare__succeed_on_oid_comparison_greater(55,1240
void test_object_raw_compare__compare_fmt_oids(75,1739
void test_object_raw_compare__compare_allocfmt_oids(93,2177
void test_object_raw_compare__compare_pathfmt_oids(107,2465

tests-clar/object/raw/convert.c,151
void test_object_raw_convert__succeed_on_oid_to_string_conversion(6,46
void test_object_raw_convert__succeed_on_oid_to_string_conversion_big(51,1427

tests-clar/object/raw/data.h,930
static unsigned char commit_data[commit_data5,20
static unsigned char tree_data[tree_data54,2368
static unsigned char tag_data[tag_data73,3229
static unsigned char zero_data[zero_data101,4416
static unsigned char one_data[one_data105,4467
static unsigned char two_data[two_data109,4517
static unsigned char some_data[some_data113,4573
static char *commit_id commit_id266,12238
static char *tree_id tree_id267,12307
static char *tag_id tag_id268,12374
static char *zero_id zero_id269,12440
static char *one_id one_id270,12507
static char *two_id two_id271,12573
static char *some_id some_id272,12639
static git_rawobj tree_obj 277,12735
static git_rawobj tag_obj 283,12816
static git_rawobj zero_obj 289,12893
static git_rawobj one_obj 295,12958
static git_rawobj two_obj 301,13036
static git_rawobj commit_obj 307,13114
static git_rawobj some_obj 313,13203
static git_rawobj junk_obj 319,13284

tests-clar/object/raw/fromstr.c,129
void test_object_raw_fromstr__fail_on_invalid_oid_string(6,46
void test_object_raw_fromstr__succeed_on_valid_oid_string(14,294

tests-clar/object/raw/hash.c,840
static void hash_object_pass(9,83
static void hash_object_fail(13,214
static char *hello_id hello_id18,346
static char *hello_text hello_text19,414
static char *bye_id bye_id21,458
static char *bye_text bye_text22,524
void test_object_raw_hash__hash_by_blocks(24,564
void test_object_raw_hash__hash_buffer_in_single_call(47,1197
void test_object_raw_hash__hash_vector(56,1436
void test_object_raw_hash__hash_junk_data(73,1786
void test_object_raw_hash__hash_commit_object(105,2573
void test_object_raw_hash__hash_tree_object(114,2790
void test_object_raw_hash__hash_tag_object(123,3001
void test_object_raw_hash__hash_zero_length_object(132,3209
void test_object_raw_hash__hash_one_byte_object(141,3427
void test_object_raw_hash__hash_two_byte_object(150,3640
void test_object_raw_hash__hash_multi_byte_object(159,3853

tests-clar/object/raw/short.c,188
void test_object_raw_short__oid_shortener_no_duplicates(7,64
void test_object_raw_short__oid_shortener_stresstest_git_oid_shorten(25,584
#define MAX_OIDS 27,661
#undef MAX_OIDS93,2125

tests-clar/object/raw/size.c,51
void test_object_raw_size__validate_oid_size(6,46

tests-clar/object/raw/type2string.c,191
void test_object_raw_type2string__convert_type_to_string(7,64
void test_object_raw_type2string__convert_string_to_type(24,895
void test_object_raw_type2string__check_type_is_loose(39,1580

tests-clar/object/raw/write.c,647
typedef struct object_data 6,66
} object_data;10,293
static const char *odb_dir odb_dir12,309
static void remove_object_files(19,416
static void streaming_write(27,609
static void check_object_files(39,945
static void cmp_objects(45,1076
static void make_odb_dir(53,1286
void test_body(60,1398
void test_object_raw_write__loose_object(83,1881
void test_object_raw_write__loose_tree(148,4680
void test_object_raw_write__loose_tag(184,5940
void test_object_raw_write__zero_length(227,7510
void test_object_raw_write__one_byte(248,7932
void test_object_raw_write__two_byte(269,8343
void test_object_raw_write__several_bytes(290,8760

tests-clar/object/tag/peel.c,431
static git_repository *repo;repo4,44
static git_tag *tag;tag5,73
static git_object *target;target6,94
void test_object_tag_peel__initialize(8,122
void test_object_tag_peel__cleanup(14,266
static void retrieve_tag_from_oid(23,424
void test_object_tag_peel__can_peel_to_a_commit(31,630
void test_object_tag_peel__can_peel_several_nested_tags_to_a_commit(40,963
void test_object_tag_peel__can_peel_to_a_non_commit(49,1316

tests-clar/object/tag/read.c,621
static const char *tag1_id tag1_id5,45
static const char *tag2_id tag2_id6,118
static const char *tagged_commit tagged_commit7,191
static const char *bad_tag_id bad_tag_id8,270
static const char *badly_tagged_commit badly_tagged_commit9,346
static git_repository *g_repo;g_repo11,432
static void ensure_tag_pattern_match(15,476
void test_object_tag_read__initialize(35,958
void test_object_tag_read__cleanup(40,1052
void test_object_tag_read__parse(46,1128
void test_object_tag_read__list(77,1953
void test_object_tag_read__list_pattern(89,2187
void test_object_tag_read__parse_without_tagger(101,2643

tests-clar/object/tag/write.c,641
static const char* tagger_name 3,27
static const char* tagger_email 4,76
static const char* tagger_message 5,131
static const char *tag2_id tag2_id7,234
static const char *tagged_commit tagged_commit8,307
static git_repository *g_repo;g_repo10,387
void test_object_tag_write__initialize(13,449
void test_object_tag_write__cleanup(18,544
void test_object_tag_write__basic(23,620
void test_object_tag_write__overwrite(67,1932
void test_object_tag_write__replace(94,2742
void test_object_tag_write__lightweight(131,3950
void test_object_tag_write__lightweight_over_existing(160,4879
void test_object_tag_write__delete(182,5667

tests-clar/object/tree/attributes.c,501
static const char *blob_oid blob_oid4,45
static const char *tree_oid tree_oid5,119
void test_object_tree_attributes__ensure_correctness_of_attributes_on_insertion(7,195
void test_object_tree_attributes__group_writable_tree_entries_created_with_an_antique_git_version_can_still_be_accessed(23,749
void test_object_tree_attributes__normalize_attributes_when_inserting_in_a_new_tree(44,1337
void test_object_tree_attributes__normalize_attributes_when_creating_a_tree_from_an_existing_one(83,2232

tests-clar/object/tree/frompath.c,366
static git_repository *repo;repo3,27
static	git_tree *tree;tree4,56
void test_object_tree_frompath__initialize(6,80
void test_object_tree_frompath__cleanup(19,462
static void assert_tree_from_path(25,563
void test_object_tree_frompath__retrieve_tree_from_path_to_treeentry(37,853
void test_object_tree_frompath__fail_when_processing_an_invalid_path(57,1847

tests-clar/object/tree/read.c,261
static const char *tree_oid tree_oid5,46
static git_repository *g_repo;g_repo7,121
void test_object_tree_read__initialize(10,183
void test_object_tree_read__cleanup(15,278
void test_object_tree_read__loaded(22,356
void test_object_tree_read__two(43,993

tests-clar/object/tree/walk.c,376
static const char *tree_oid tree_oid4,45
static git_repository *g_repo;g_repo5,119
void test_object_tree_walk__initialize(7,151
void test_object_tree_walk__cleanup(12,246
static int treewalk_count_cb(17,322
void test_object_tree_walk__0(30,512
static int treewalk_stop_cb(52,931
static int treewalk_stop_immediately_cb(65,1141
void test_object_tree_walk__1(74,1325

tests-clar/object/tree/write.c,476
static const char *blob_oid blob_oid5,46
static const char *first_tree first_tree6,120
static const char *second_tree second_tree7,197
static const char *third_tree third_tree8,274
static git_repository *g_repo;g_repo10,351
void test_object_tree_write__initialize(13,413
void test_object_tree_write__cleanup(18,509
void test_object_tree_write__from_memory(23,586
void test_object_tree_write__subtree(56,1569
void test_object_tree_write__sorted_subtrees(96,2797

tests-clar/odb/foreach.c,331
static git_odb *_odb;_odb6,92
static git_repository *_repo;_repo7,114
static int nobj;8,144
void test_odb_foreach__cleanup(10,162
static int foreach_cb(19,284
void test_odb_foreach__foreach(39,586
void test_odb_foreach__one_pack(48,849
static int foreach_stop_cb(62,1263
void test_odb_foreach__interrupt_foreach(72,1393

tests-clar/odb/loose.c,264
static void write_object_files(6,87
static void cmp_objects(19,351
static void test_read_object(28,568
void test_odb_loose__initialize(46,958
void test_odb_loose__cleanup(51,1062
void test_odb_loose__exists(56,1139
void test_odb_loose__simple_reads(75,1572

tests-clar/odb/loose_data.h,1015
typedef struct object_data 1,0
} object_data;10,629
static unsigned char one_bytes[one_bytes13,699
static unsigned char one_data[one_data18,808
static object_data one 22,858
static unsigned char commit_bytes[commit_bytes35,1166
static unsigned char commit_data[commit_data67,2688
static object_data commit 115,5035
static unsigned char tree_bytes[tree_bytes127,5357
static unsigned char tree_data[tree_data147,6259
static object_data tree 166,7120
static unsigned char tag_bytes[tag_bytes178,7429
static unsigned char tag_data[tag_data200,8458
static object_data tag 225,9624
static unsigned char zero_bytes[zero_bytes237,9928
static unsigned char zero_data[zero_data242,10068
static object_data zero 246,10136
static unsigned char two_bytes[two_bytes258,10429
static unsigned char two_data[two_data264,10584
static object_data two 268,10640
static unsigned char some_bytes[some_bytes280,10945
static unsigned char some_data[some_data363,15135
static object_data some 513,22778

tests-clar/odb/mixed.c,144
static git_odb *_odb;_odb4,44
void test_odb_mixed__initialize(6,67
void test_odb_mixed__cleanup(11,182
void test_odb_mixed__dup_oid(16,243

tests-clar/odb/pack_data.h,111
static const char *packed_objects[packed_objects2,1
static const char *loose_objects[loose_objects131,5714

tests-clar/odb/pack_data_one.h,63
static const char *packed_objects_one[packed_objects_one2,71

tests-clar/odb/packed.c,238
static git_odb *_odb;_odb5,67
void test_odb_packed__initialize(7,90
void test_odb_packed__cleanup(12,208
void test_odb_packed__mass_read(17,270
void test_odb_packed__read_header_0(33,600
void test_odb_packed__read_header_1(55,1053

tests-clar/odb/packed_one.c,210
static git_odb *_odb;_odb6,89
void test_odb_packed_one__initialize(8,112
void test_odb_packed_one__cleanup(17,423
void test_odb_packed_one__mass_read(22,489
void test_odb_packed_one__read_header_0(38,831

tests-clar/odb/sorting.c,348
} fake_backend;8,129
static git_odb_backend *new_backend(new_backend10,146
static void check_backend_sorting(23,386
static git_odb *_odb;_odb36,666
void test_odb_sorting__initialize(38,689
void test_odb_sorting__cleanup(43,768
void test_odb_sorting__basic_backends_sorting(49,845
void test_odb_sorting__alternate_backends_sorting(59,1173

tests-clar/refs/branches/create.c,794
static git_repository *repo;repo4,45
static git_object *target;target5,74
static git_reference *branch;branch6,101
void test_refs_branches_create__initialize(8,132
void test_refs_branches_create__cleanup(16,298
static void retrieve_target_from_oid(26,471
static void retrieve_known_commit(34,704
#define NEW_BRANCH_NAME 39,871
void test_refs_branches_create__can_create_a_local_branch(41,922
void test_refs_branches_create__can_not_create_a_branch_if_its_name_collide_with_an_existing_one(49,1184
void test_refs_branches_create__can_force_create_over_an_existing_branch(56,1398
void test_refs_branches_create__creating_a_branch_targeting_a_tag_dereferences_it_to_its_commit(65,1731
void test_refs_branches_create__can_not_create_a_branch_pointing_to_a_non_commit_object(74,2175

tests-clar/refs/branches/delete.c,803
static git_repository *repo;repo4,45
static git_reference *fake_remote;fake_remote5,74
void test_refs_branches_delete__initialize(7,110
void test_refs_branches_delete__cleanup(18,455
void test_refs_branches_delete__can_not_delete_a_non_existing_branch(26,606
void test_refs_branches_delete__can_not_delete_a_branch_pointed_at_by_HEAD(32,852
void test_refs_branches_delete__can_not_delete_a_branch_if_HEAD_is_missing(44,1245
void test_refs_branches_delete__can_delete_a_branch_pointed_at_by_detached_HEAD(54,1512
void test_refs_branches_delete__can_delete_a_local_branch(67,1995
void test_refs_branches_delete__can_delete_a_remote_branch(72,2128
static void assert_non_exisitng_branch_removal(77,2276
void test_refs_branches_delete__deleting_a_non_existing_branch_returns_ENOTFOUND(86,2516

tests-clar/refs/branches/foreach.c,774
static git_repository *repo;repo4,45
static git_reference *fake_remote;fake_remote5,74
void test_refs_branches_foreach__initialize(7,110
void test_refs_branches_foreach__cleanup(18,456
static int count_branch_list_cb(26,608
static void assert_retrieval(39,828
void test_refs_branches_foreach__retrieve_all_branches(48,1049
void test_refs_branches_foreach__retrieve_remote_branches(53,1176
void test_refs_branches_foreach__retrieve_local_branches(58,1286
struct expectations 63,1395
static void assert_branch_has_been_found(68,1464
static int contains_branch_list_cb(85,1826
void test_refs_branches_foreach__retrieve_remote_symbolic_HEAD_when_present(110,2267
static int branch_list_interrupt_cb(129,2868
void test_refs_branches_foreach__can_cancel(143,3106

tests-clar/refs/branches/lookup.c,420
static git_repository *repo;repo4,45
static git_reference *branch;branch5,74
void test_refs_branches_lookup__initialize(7,105
void test_refs_branches_lookup__cleanup(14,246
void test_refs_branches_lookup__can_retrieve_a_local_branch(21,355
void test_refs_branches_lookup__can_retrieve_a_remote_tracking_branch(26,499
void test_refs_branches_lookup__trying_to_retrieve_an_unknown_branch_returns_ENOTFOUND(31,662

tests-clar/refs/branches/move.c,704
static git_repository *repo;repo4,45
static git_reference *ref;ref5,74
void test_refs_branches_move__initialize(7,102
void test_refs_branches_move__cleanup(14,266
#define NEW_BRANCH_NAME 20,368
void test_refs_branches_move__can_move_a_local_branch(22,419
void test_refs_branches_move__can_move_a_local_branch_to_a_different_namespace(28,621
void test_refs_branches_move__can_move_a_local_branch_to_a_partially_colliding_namespace(37,857
void test_refs_branches_move__can_not_move_a_branch_if_its_destination_name_collide_with_an_existing_one(46,1097
void test_refs_branches_move__can_not_move_a_non_branch(51,1262
void test_refs_branches_move__can_force_move_over_an_existing_branch(61,1503

tests-clar/refs/branches/tracking.c,631
static git_repository *repo;repo4,45
static git_reference *branch;branch5,74
void test_refs_branches_tracking__initialize(7,105
void test_refs_branches_tracking__cleanup(14,248
void test_refs_branches_tracking__can_retrieve_the_remote_tracking_reference_of_a_local_branch(21,359
void test_refs_branches_tracking__can_retrieve_the_local_tracking_reference_of_a_local_branch(35,768
void test_refs_branches_tracking__cannot_retrieve_a_remote_tracking_reference_from_a_non_branch(49,1174
void test_refs_branches_tracking__trying_to_retrieve_a_remote_tracking_reference_from_a_plain_local_branch_returns_GIT_ENOTFOUND(60,1474

tests-clar/refs/crashes.c,42
void test_refs_crashes__double_free(3,27

tests-clar/refs/create.c,422
static const char *current_master_tip current_master_tip7,97
static const char *current_head_target current_head_target8,181
static git_repository *g_repo;g_repo10,244
void test_refs_create__initialize(12,276
void test_refs_create__cleanup(17,366
void test_refs_create__symbolic(22,437
void test_refs_create__deep_symbolic(70,2210
void test_refs_create__oid(93,3051
void test_refs_create__oid_unknown(134,4442

tests-clar/refs/delete.c,347
static const char *packed_test_head_name packed_test_head_name7,97
static const char *current_master_tip current_master_tip8,166
static git_repository *g_repo;g_repo10,251
void test_refs_delete__initialize(14,285
void test_refs_delete__cleanup(19,375
void test_refs_delete__packed_loose(26,448
void test_refs_delete__packed_only(55,1555

tests-clar/refs/foreachglob.c,577
static git_repository *repo;repo4,45
static git_reference *fake_remote;fake_remote5,74
void test_refs_foreachglob__initialize(7,110
void test_refs_foreachglob__cleanup(18,451
static int count_cb(26,598
static void assert_retrieval(37,752
void test_refs_foreachglob__retrieve_all_refs(46,984
void test_refs_foreachglob__retrieve_remote_branches(52,1159
void test_refs_foreachglob__retrieve_local_branches(57,1280
void test_refs_foreachglob__retrieve_partially_named_references(62,1399
static int interrupt_cb(73,1623
void test_refs_foreachglob__can_cancel(84,1794

tests-clar/refs/list.c,196
static git_repository *g_repo;g_repo7,97
void test_refs_list__initialize(11,131
void test_refs_list__cleanup(16,219
void test_refs_list__all(23,290
void test_refs_list__symbolic_only(44,836

tests-clar/refs/listall.c,290
static git_repository *repo;repo4,46
static git_strarray ref_list;5,75
static void ensure_no_refname_starts_with_a_forward_slash(7,106
void test_refs_listall__from_repository_opened_through_workdir_path(23,507
void test_refs_listall__from_repository_opened_through_gitdir_path(33,765

tests-clar/refs/lookup.c,201
static git_repository *g_repo;g_repo4,45
void test_refs_lookup__initialize(6,77
void test_refs_lookup__cleanup(11,169
void test_refs_lookup__with_resolve(16,238
void test_refs_lookup__oid(35,752

tests-clar/refs/normalize.c,268
static void ensure_refname_normalized(9,109
static void ensure_refname_invalid(24,634
#define OID_REF 34,978
#define SYM_REF 35,996
void test_refs_normalize__direct(39,1017
void test_refs_normalize__symbolic(63,2214
void test_refs_normalize__jgit_suite(75,2682

tests-clar/refs/overwrite.c,553
static const char *ref_name ref_name7,97
static const char *ref_master_name ref_master_name8,147
static const char *ref_branch_name ref_branch_name9,205
static const char *ref_test_name ref_test_name10,263
static git_repository *g_repo;g_repo12,318
void test_refs_overwrite__initialize(14,350
void test_refs_overwrite__cleanup(19,443
void test_refs_overwrite__symbolic(24,517
void test_refs_overwrite__object_id(54,1732
void test_refs_overwrite__object_id_with_symbolic(86,2755
void test_refs_overwrite__symbolic_with_object_id(111,3660

tests-clar/refs/pack.c,254
static const char *loose_tag_ref_name loose_tag_ref_name7,97
static git_repository *g_repo;g_repo9,159
void test_refs_pack__initialize(11,191
void test_refs_pack__cleanup(16,279
void test_refs_pack__empty(21,348
void test_refs_pack__loose(33,721

tests-clar/refs/read.c,1204
static const char *loose_tag_ref_name loose_tag_ref_name7,97
static const char *non_existing_tag_ref_name non_existing_tag_ref_name8,158
static const char *head_tracker_sym_ref_name head_tracker_sym_ref_name9,233
static const char *current_head_target current_head_target10,296
static const char *current_master_tip current_master_tip11,358
static const char *packed_head_name packed_head_name12,442
static const char *packed_test_head_name packed_test_head_name13,501
static git_repository *g_repo;g_repo15,571
void test_refs_read__initialize(17,603
void test_refs_read__cleanup(22,718
void test_refs_read__loose_tag(27,788
void test_refs_read__nonexisting_tag(53,1725
void test_refs_read__symbolic(64,1972
void test_refs_read__nested_symbolic(92,2864
void test_refs_read__head_then_master(120,3794
void test_refs_read__master_then_head(144,4768
void test_refs_read__packed(161,5328
void test_refs_read__loose_first(181,5919
void test_refs_read__chomped(196,6454
void test_refs_read__trailing(208,6811
void test_refs_read__unfound_return_ENOTFOUND(220,7174
static void assert_is_branch(230,7660
void test_refs_read__can_determine_if_a_reference_is_a_local_branch(238,7936

tests-clar/refs/reflog/drop.c,790
static git_repository *g_repo;g_repo5,48
static git_reflog *g_reflog;g_reflog6,79
static unsigned int entrycount;7,108
void test_refs_reflog_drop__initialize(9,141
void test_refs_reflog_drop__cleanup(22,429
void test_refs_reflog_drop__dropping_a_non_exisiting_entry_from_the_log_returns_ENOTFOUND(29,532
void test_refs_reflog_drop__can_drop_an_entry(36,776
void test_refs_reflog_drop__can_drop_an_entry_and_rewrite_the_log_history(44,978
void test_refs_reflog_drop__can_drop_the_first_entry(66,1799
void test_refs_reflog_drop__can_drop_the_last_entry(74,2008
void test_refs_reflog_drop__can_drop_the_last_entry_and_rewrite_the_log_history(87,2391
void test_refs_reflog_drop__can_drop_all_the_entries(100,2802
void test_refs_reflog_drop__can_persist_deletion_on_disk(113,3095

tests-clar/refs/reflog/reflog.c,721
static const char *new_ref new_ref8,98
static const char *current_master_tip current_master_tip9,153
#define commit_msg 10,237
static git_repository *g_repo;g_repo12,275
static void assert_signature(16,319
void test_refs_reflog_reflog__initialize(27,666
void test_refs_reflog_reflog__cleanup(32,767
void test_refs_reflog_reflog__append_then_read(37,845
void test_refs_reflog_reflog__renaming_the_reference_moves_the_reflog(91,2710
static void assert_has_reflog(115,3738
void test_refs_reflog_reflog__reference_has_reflog(126,3984
void test_refs_reflog_reflog__reading_the_reflog_from_a_reference_with_no_log_returns_an_empty_one(133,4177
void test_refs_reflog_reflog__cannot_write_a_moved_reflog(153,4854

tests-clar/refs/rename.c,1057
static const char *loose_tag_ref_name loose_tag_ref_name7,97
static const char *packed_head_name packed_head_name8,158
static const char *packed_test_head_name packed_test_head_name9,217
static const char *ref_one_name ref_one_name10,286
static const char *ref_one_name_new ref_one_name_new11,345
static const char *ref_two_name ref_two_name12,408
static const char *ref_master_name ref_master_name13,460
static const char *ref_two_name_new ref_two_name_new14,518
static git_repository *g_repo;g_repo16,579
void test_refs_rename__initialize(20,613
void test_refs_rename__cleanup(25,703
void test_refs_rename__loose(32,776
void test_refs_rename__packed(73,2318
void test_refs_rename__packed_doesnt_pack_others(114,3925
void test_refs_rename__name_collision(155,5453
void test_refs_rename__invalid_name(174,6129
void test_refs_rename__force_loose_packed(196,6926
void test_refs_rename__force_loose(220,7895
void test_refs_rename__overwrite(247,8874
void test_refs_rename__prefix(278,9865
void test_refs_rename__move_up(310,10959

tests-clar/refs/revparse.c,1345
static git_repository *g_repo;g_repo8,111
static git_object *g_obj;g_obj9,142
static char g_orig_tz[g_orig_tz10,168
static void test_object_inrepo(15,218
static void test_object(33,652
void test_refs_revparse__initialize(38,774
void test_refs_revparse__cleanup(48,982
void test_refs_revparse__nonexistant_object(55,1100
void test_refs_revparse__invalid_reference_name(62,1288
void test_refs_revparse__shas(71,1641
void test_refs_revparse__head(77,1853
void test_refs_revparse__full_refs(85,2164
void test_refs_revparse__partial_refs(92,2442
void test_refs_revparse__describe_output(99,2704
void test_refs_revparse__nth_parent(105,2903
void test_refs_revparse__not_tag(123,3756
void test_refs_revparse__to_type(134,4321
void test_refs_revparse__linear_history(145,4842
void test_refs_revparse__chaining(160,5559
void test_refs_revparse__upstream(179,6560
void test_refs_revparse__ordinal(191,7126
void test_refs_revparse__previous_head(213,7925
static void create_fake_stash_reference_and_reflog(225,8324
void test_refs_revparse__reflog_of_a_ref_under_refs(243,8874
void test_refs_revparse__revwalk(272,9838
void test_refs_revparse__date(284,10414
void test_refs_revparse__colon(355,13222
void test_refs_revparse__disambiguation(397,15300
void test_refs_revparse__a_too_short_objectid_returns_EAMBIGUOUS(446,16520

tests-clar/refs/unicode.c,170
static git_repository *repo;repo3,27
void test_refs_unicode__initialize(5,57
void test_refs_unicode__cleanup(12,199
void test_refs_unicode__create_and_lookup(18,307

tests-clar/repo/discover.c,814
#define TEMP_REPO_FOLDER 7,70
#define DISCOVER_FOLDER 8,107
#define SUB_REPOSITORY_FOLDER_NAME 10,164
#define SUB_REPOSITORY_FOLDER 11,210
#define SUB_REPOSITORY_FOLDER_SUB 12,287
#define SUB_REPOSITORY_FOLDER_SUB_SUB 13,350
#define SUB_REPOSITORY_FOLDER_SUB_SUB_SUB 14,424
#define REPOSITORY_ALTERNATE_FOLDER 16,510
#define REPOSITORY_ALTERNATE_FOLDER_SUB 17,584
#define REPOSITORY_ALTERNATE_FOLDER_SUB_SUB 18,659
#define REPOSITORY_ALTERNATE_FOLDER_SUB_SUB_SUB 19,745
#define ALTERNATE_MALFORMED_FOLDER1 21,843
#define ALTERNATE_MALFORMED_FOLDER2 22,924
#define ALTERNATE_MALFORMED_FOLDER3 23,1005
#define ALTERNATE_NOT_FOUND_FOLDER 24,1086
static void ensure_repository_discover(26,1166
static void write_file(36,1618
static void append_ceiling_dir(54,2036
void test_repo_discover__0(70,2478

tests-clar/repo/getters.c,281
void test_repo_getters__initialize(3,27
void test_repo_getters__cleanup(8,110
void test_repo_getters__empty(13,190
void test_repo_getters__head_detached(26,609
void test_repo_getters__head_orphan(50,1316
void test_repo_getters__retrieving_the_odb_honors_the_refcount(72,1949

tests-clar/repo/init.c,1245
enum repo_mode 7,110
	STANDARD_REPOSITORY 8,127
	BARE_REPOSITORY 9,153
static git_repository *_repo;_repo12,178
void test_repo_init__initialize(14,209
static void cleanup_repository(19,267
static void ensure_repository_init(25,385
void test_repo_init__standard_repo(60,1235
void test_repo_init__standard_repo_noslash(66,1403
void test_repo_init__bare_repo(72,1578
void test_repo_init__bare_repo_noslash(78,1742
void test_repo_init__bare_repo_escaping_current_workdir(84,1913
void test_repo_init__reinit_bare_repo(114,2990
void test_repo_init__reinit_too_recent_bare_repo(126,3310
void test_repo_init__additional_templates(149,3930
static void assert_config_entry_on_init_bytype(173,4623
static void assert_config_entry_on_init(207,5503
void test_repo_init__detect_filemode(215,5765
#define CASE_INSENSITIVE_FILESYSTEM 224,5950
void test_repo_init__detect_ignorecase(226,6028
void test_repo_init__reinit_doesnot_overwrite_ignorecase(235,6242
void test_repo_init__reinit_overwrites_filemode(262,7089
void test_repo_init__sets_logAllRefUpdates_according_to_type_of_repository(296,8052
void test_repo_init__extended_0(303,8325
void test_repo_init__extended_1(323,8996
void test_repo_init__extended_with_template(366,10520

tests-clar/repo/message.c,265
static git_repository *_repo;_repo6,84
static git_buf _path;7,114
static char *_actual;_actual8,136
void test_repo_message__initialize(10,159
void test_repo_message__cleanup(15,258
void test_repo_message__none(23,396
void test_repo_message__message(28,511

tests-clar/repo/open.c,593
void test_repo_open__cleanup(5,67
void test_repo_open__bare_empty_repo(13,235
void test_repo_open__standard_empty_repo_through_gitdir(22,509
void test_repo_open__standard_empty_repo_through_workdir(37,946
void test_repo_open__open_with_discover(49,1315
void test_repo_open__gitlinked(72,1966
void test_repo_open__from_git_new_workdir(93,2772
void test_repo_open__failures(157,4886
void test_repo_open__bad_gitlinks(183,5731
static void unposix_path(210,6503
void test_repo_open__win32_path(233,6844
void test_repo_open__opening_a_non_existing_repository_returns_ENOTFOUND(278,8743

tests-clar/repo/setters.c,592
static git_repository *repo;repo8,123
void test_repo_setters__initialize(10,153
void test_repo_setters__cleanup(17,339
void test_repo_setters__setting_a_workdir_turns_a_bare_repository_into_a_standard_one(24,483
void test_repo_setters__setting_a_workdir_prettifies_its_path(35,848
void test_repo_setters__setting_a_workdir_creates_a_gitlink(42,1073
void test_repo_setters__setting_a_new_index_on_a_repo_which_has_already_loaded_one_properly_honors_the_refcount(63,1767
void test_repo_setters__setting_a_new_odb_on_a_repo_which_already_loaded_one_properly_honors_the_refcount(84,2358

tests-clar/reset/mixed.c,304
static git_repository *repo;repo6,91
static git_object *target;target7,120
void test_reset_mixed__initialize(9,148
void test_reset_mixed__cleanup(15,246
void test_reset_mixed__cannot_reset_in_a_bare_repository(21,341
void test_reset_mixed__resetting_refreshes_the_index_to_the_commit_tree(35,709

tests-clar/reset/reset_helpers.c,36
void retrieve_target_from_oid(4,54

tests-clar/reset/reset_helpers.h,80
#define KNOWN_COMMIT_IN_BARE_REPO 3,21
#define KNOWN_COMMIT_IN_ATTR_REPO 4,98

tests-clar/reset/soft.c,676
static git_repository *repo;repo4,54
static git_object *target;target5,83
void test_reset_soft__initialize(7,111
void test_reset_soft__cleanup(12,200
static void assert_reset_soft(18,294
void test_reset_soft__can_reset_the_non_detached_Head_to_the_specified_commit(37,884
static void detach_head(42,1000
void test_reset_soft__can_reset_the_detached_Head_to_the_specified_commit(53,1234
void test_reset_soft__resetting_to_the_commit_pointed_at_by_the_Head_does_not_change_the_target_of_the_Head(60,1362
void test_reset_soft__resetting_to_a_tag_sets_the_Head_to_the_peeled_commit(77,1891
void test_reset_soft__cannot_reset_to_a_tag_not_pointing_at_a_commit(91,2396

tests-clar/resources/duplicate.git/hooks/pre-rebase.sample,16
publish=18,587

tests-clar/resources/duplicate.git/hooks/prepare-commit-msg.sample,16
  merge,24,859

tests-clar/resources/duplicate.git/hooks/update.sample,78
refname=28,930
allowunannotated=46,1316
zero=63,1897
	newrev_type=65,1978

tests-clar/resources/submod2/not_submodule/.gitted/hooks/pre-rebase.sample,16
publish=18,587

tests-clar/resources/submod2/not_submodule/.gitted/hooks/prepare-commit-msg.sample,16
  merge,24,859

tests-clar/resources/submod2/not_submodule/.gitted/hooks/update.sample,78
refname=28,930
allowunannotated=46,1316
zero=63,1897
	newrev_type=65,1978

tests-clar/resources/template/hooks/pre-rebase.sample,16
publish=18,587

tests-clar/resources/template/hooks/prepare-commit-msg.sample,16
  merge,24,859

tests-clar/resources/template/hooks/update.sample,78
refname=28,930
allowunannotated=46,1316
zero=63,1897
	newrev_type=65,1978

tests-clar/revwalk/basic.c,957
static const char *commit_head commit_head14,279
static const char *commit_ids[commit_ids16,357
static const int commit_sorting_topo[commit_sorting_topo26,771
static const int commit_sorting_time[commit_sorting_time30,861
static const int commit_sorting_topo_reverse[commit_sorting_topo_reverse34,931
static const int commit_sorting_time_reverse[commit_sorting_time_reverse38,1029
#define commit_count 42,1107
static const int result_bytes 43,1130
static int get_commit_index(46,1168
static int test_walk(60,1377
static git_repository *_repo;_repo94,2044
static git_revwalk *_walk;_walk95,2074
void test_revwalk_basic__initialize(97,2102
void test_revwalk_basic__cleanup(103,2266
void test_revwalk_basic__sorting_modes(109,2365
void test_revwalk_basic__glob_heads(121,2838
void test_revwalk_basic__push_head(136,3094
void test_revwalk_basic__push_head_hide_ref(151,3332
void test_revwalk_basic__push_head_hide_ref_nobase(167,3677

tests-clar/revwalk/mergebase.c,530
static git_repository *_repo;_repo5,67
void test_revwalk_mergebase__initialize(7,98
void test_revwalk_mergebase__cleanup(12,220
void test_revwalk_mergebase__single1(17,297
void test_revwalk_mergebase__single2(29,741
void test_revwalk_mergebase__merged_branch(41,1184
void test_revwalk_mergebase__no_common_ancestor_returns_ENOTFOUND(56,1742
static void assert_mergebase_many(70,2139
void test_revwalk_mergebase__many_no_common_ancestor_returns_ENOTFOUND(109,3109
void test_revwalk_mergebase__many_merge_branch(121,3633

tests-clar/revwalk/signatureparsing.c,275
static git_repository *_repo;_repo3,27
static git_revwalk *_walk;_walk4,57
void test_revwalk_signatureparsing__initialize(6,85
void test_revwalk_signatureparsing__cleanup(12,260
void test_revwalk_signatureparsing__do_not_choke_when_name_contains_angle_brackets(18,370

tests-clar/status/ignore.c,454
static git_repository *g_repo g_repo7,117
void test_status_ignore__initialize(9,156
void test_status_ignore__cleanup(13,203
void test_status_ignore__0(18,274
void test_status_ignore__1(57,1264
void test_status_ignore__empty_repo_with_gitignore_rewrite(86,2011
void test_status_ignore__ignore_pattern_contains_space(134,3519
void test_status_ignore__adding_internal_ignores(155,4215
void test_status_ignore__add_internal_as_first_thing(203,5756

tests-clar/status/single.c,77
cleanup__remove_file(5,58
void test_status_single__hash_single_file(11,194

tests-clar/status/status_data.h,641
static const char *entry_paths0[entry_paths05,87
static const unsigned int entry_statuses0[entry_statuses026,516
static const int entry_count0 47,1074
static const char *entry_paths2[entry_paths253,1219
static const unsigned int entry_statuses2[entry_statuses271,1635
static const int entry_count2 89,2206
static const char *entry_paths3[entry_paths393,2310
static const unsigned int entry_statuses3[entry_statuses3118,2838
static const int entry_count3 143,3521
static const char *entry_paths4[entry_paths4150,3671
static const unsigned int entry_statuses4[entry_statuses4176,4256
static const int entry_count4 202,4958

tests-clar/status/status_helpers.c,87
int cb_status__normal(4,55
int cb_status__count(27,563
int cb_status__single(39,733

tests-clar/status/status_helpers.h,103
#define INCLUDE_cl_status_helpers_h__2,38
} status_entry_counts;11,264
} status_entry_single;27,625

tests-clar/status/submodules.c,453
static git_repository *g_repo g_repo8,156
void test_status_submodules__initialize(10,195
void test_status_submodules__cleanup(21,454
void test_status_submodules__api(27,566
void test_status_submodules__0(41,987
static const char *expected_files[expected_files56,1312
static unsigned int expected_status[expected_status65,1432
cb_status__match(75,1629
void test_status_submodules__1(86,1851
void test_status_submodules__single_file(101,2173

tests-clar/status/worktree.c,2200
void test_status_worktree__initialize(15,314
void test_status_worktree__cleanup(25,466
void test_status_worktree__whole_repository(34,653
void test_status_worktree__empty_repository(54,1279
static int remove_file_cb(64,1516
void test_status_worktree__purged_worktree(82,1922
void test_status_worktree__swap_subdir_and_file(109,2805
void test_status_worktree__swap_subdir_with_recurse_and_pathspec(143,3931
void test_status_worktree__single_file(179,5268
void test_status_worktree__single_nonexistent_file(194,5642
void test_status_worktree__single_nonexistent_file_empty_repo(206,5979
void test_status_worktree__single_file_empty_repo(218,6340
void test_status_worktree__single_folder(230,6732
void test_status_worktree__ignores(242,6995
static int cb_status__check_592(265,7524
void test_status_worktree__issue_592(275,7750
void test_status_worktree__issue_592_2(289,8112
void test_status_worktree__issue_592_3(303,8480
void test_status_worktree__issue_592_4(318,8884
void test_status_worktree__issue_592_5(333,9253
void test_status_worktree__issue_592_ignores_0(349,9702
void test_status_worktree__issue_592_ignored_dirs_with_tracked_content(394,11249
void test_status_worktree__cannot_retrieve_the_status_of_a_bare_repository(408,11695
void test_status_worktree__first_commit_in_progress(424,12051
void test_status_worktree__status_file_without_index_or_workdir(453,12895
static void fill_index_wth_head_entries(477,13555
void test_status_worktree__status_file_with_clean_index_and_empty_workdir(494,13996
void test_status_worktree__bracket_in_filename(520,14688
	#define FILE_WITH_BRACKET 528,14855
	#define FILE_WITHOUT_BRACKET 529,14898
void test_status_worktree__space_in_filename(600,17307
#define FILE_WITH_SPACE 607,17460
static const char *filemode_paths[filemode_paths664,19344
static unsigned int filemode_statuses[filemode_statuses675,19552
static const int filemode_count 686,19787
void test_status_worktree__filemode_changes(688,19825
static int cb_status__expected_path(730,21133
void test_status_worktree__disable_pathspec_match(744,21393
static int cb_status__interrupt(777,22371
void test_status_worktree__interruptable_foreach(789,22564

tests-clar/submodule/lookup.c,335
static git_repository *g_repo g_repo5,77
void test_submodule_lookup__initialize(7,116
void test_submodule_lookup__cleanup(19,507
void test_submodule_lookup__simple_lookup(25,620
void test_submodule_lookup__accessors(50,1477
} sm_lookup_data;94,3361
static int sm_lookup_cb(96,3380
void test_submodule_lookup__foreach(104,3574

tests-clar/submodule/modify.c,578
static git_repository *g_repo g_repo6,95
#define SM_LIBGIT2_URL 8,134
#define SM_LIBGIT2 9,198
#define SM_LIBGIT2B 10,234
void test_submodule_modify__initialize(12,272
void test_submodule_modify__cleanup(24,663
void test_submodule_modify__add(30,776
static int delete_one_config(76,2111
static int init_one_submodule(84,2293
void test_submodule_modify__init(92,2462
static int sync_one_submodule(126,3810
void test_submodule_modify__sync(134,3972
#define SM1 140,4083
#define SM2 141,4110
#define SM3 142,4140
void test_submodule_modify__edit_and_save(179,5709

tests-clar/submodule/status.c,419
static git_repository *g_repo g_repo7,116
void test_submodule_status__initialize(9,155
void test_submodule_status__cleanup(21,546
void test_submodule_status__unchanged(27,659
void test_submodule_status__ignore_none(46,1156
static int set_sm_ignore(122,4109
void test_submodule_status__ignore_untracked(130,4329
void test_submodule_status__ignore_dirty(190,6871
void test_submodule_status__ignore_all(250,9384

tests-clar/submodule/submodule_helpers.c,32
void rewrite_gitmodules(12,292

tests-clar/threads/basic.c,165
static git_repository *g_repo;g_repo6,48
void test_threads_basic__initialize(8,80
void test_threads_basic__cleanup(12,172
void test_threads_basic__cache(17,246

tests-clar/submodule/submodule_helpers.h,0

tests-clar/resources/template/hooks/pre-commit.sample,0

tests-clar/resources/template/hooks/pre-applypatch.sample,0

tests-clar/resources/template/hooks/post-update.sample,0

tests-clar/resources/template/hooks/post-receive.sample,0

tests-clar/resources/template/hooks/post-commit.sample,0

tests-clar/resources/template/hooks/commit-msg.sample,0

tests-clar/resources/template/hooks/applypatch-msg.sample,0

tests-clar/resources/submod2_target/.gitted/hooks/applypatch-msg.sample,0

tests-clar/resources/submod2/not_submodule/.gitted/hooks/pre-commit.sample,0

tests-clar/resources/submod2/not_submodule/.gitted/hooks/pre-applypatch.sample,0

tests-clar/resources/submod2/not_submodule/.gitted/hooks/post-update.sample,0

tests-clar/resources/submod2/not_submodule/.gitted/hooks/commit-msg.sample,0

tests-clar/resources/submod2/not_submodule/.gitted/hooks/applypatch-msg.sample,0

tests-clar/resources/submod2/.gitted/modules/sm_unchanged/hooks/applypatch-msg.sample,0

tests-clar/resources/submod2/.gitted/modules/sm_missing_commits/hooks/applypatch-msg.sample,0

tests-clar/resources/submod2/.gitted/modules/sm_changed_untracked_file/hooks/applypatch-msg.sample,0

tests-clar/resources/submod2/.gitted/modules/sm_changed_index/hooks/applypatch-msg.sample,0

tests-clar/resources/submod2/.gitted/modules/sm_changed_head/hooks/applypatch-msg.sample,0

tests-clar/resources/submod2/.gitted/modules/sm_changed_file/hooks/applypatch-msg.sample,0

tests-clar/resources/submod2/.gitted/modules/sm_added_and_uncommited/hooks/applypatch-msg.sample,0

tests-clar/resources/submod2/.gitted/hooks/applypatch-msg.sample,0

tests-clar/resources/issue_592b/.gitted/hooks/post-update.sample,0

tests-clar/resources/filemodes/.gitted/hooks/commit-msg.sample,0

tests-clar/resources/duplicate.git/hooks/pre-commit.sample,0

tests-clar/resources/duplicate.git/hooks/pre-applypatch.sample,0

tests-clar/resources/duplicate.git/hooks/post-update.sample,0

tests-clar/resources/duplicate.git/hooks/commit-msg.sample,0

tests-clar/resources/duplicate.git/hooks/applypatch-msg.sample,0

tests-clar/resources/deprecated-mode.git/hooks/README.sample,0

src/win32/precompiled.h,0

src/win32/precompiled.c,0

packaging/rpm/libgit2.spec,0

deps/zlib/inffast.h,0

build/xcode/libgit2.build/Debug/ZERO_CHECK.build/Script-FA70F9E2097D48E08E664552.sh,0

build/xcode/libgit2.build/Debug/libgit2_clar.build/Script-E6DE75B7BC674343B9816AD3.sh,0

build/xcode/libgit2.build/Debug/libgit2_clar.build/Script-68F4EDCC0D34433AA2CEDDD6.sh,0

build/xcode/libgit2.build/Debug/git2.build/Script-88C2670ADDBC4B39985F0CFD.sh,0

build/xcode/libgit2.build/Debug/ALL_BUILD.build/Script-0211DDC0ED0E4DFFBB7B67FC.sh,0
